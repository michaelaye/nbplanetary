[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PlanetaryPy",
    "section": "",
    "text": "Beta release: This will become (part of) the core package of the PlanetaryPy organisation.\n\nPotential logo:\n\n\npip install planetarypy\nThis will pull in these other dependencies and their dependencies:\ntomlkit pandas pvl numpy python-dateutil tqdm lxml yarl hirise-tools kalasiris\n\n\n\n\nInside these docs the package will be called PLPY for brevity.\nA standard Python import could be: plp or plpy\n\nbecause the last p in plp can be pronounced out, we consider these equivalent for human conversation and pronounce these “plippy”.\n\n\n\n\n\nFirst and foremost this package should provide support in working with planetary science data.\nWith working we mean:\n\nlocating\nretrieving\nreading\nfurther processing\n\nof data.\n\n\nThis library manages, via its PDS tools, multiple PDS3 index files per instrument that can be used for identifying data of interest. These index files are automatically downloaded and converted to the very performant (and cloud-ready) parquet file format. &gt; Parquet is able to store advanced datatypes like nan-capable integer and full datetime objects, as opposed to HDF5.\n\n\n\nThe interface to getting data is via a path-retrieving function based on a PDS product-id. If that product-id is available locally, the path will be returned. If it is not, it will previously be downloaded, stored in a systematic fashion organized by mission and instrument, and then the local path will be returned.\n\n\n\nFor now, the library only returns the path to the object and the user needs to sort out the reading process. A recently funded NASA project Planetary Data Reader will be integrated here, so that basic reading into memory can be provided.\nAs such, we anticipate two classes of reading support: 1. basic reading into numpy and/or xarray 1. added reader functionality like basic plots and basic geospatial processing, as supported by interested parties\nThere will exist larger other packages that focus on working with a given instrument’s data, in which case that package could become an affiliated package with the planetarypy GitHub organization, if so desired.\n\n\n\nIn the future, additional frequently used procedures will be added to this library, e.g. * frequently used GDAL/rasterio procedures * frequently used SPICE operations * like surface illumination on a given body\n\n\n\n\nLook at the Apps docs to see what pds.apps exist for easily getting PDS indexes. The find_index app is specifically useful when you don’t know what index files exist.\nSo far, the following indexes are supported (but not necessarily all tested within PLPY):\n\nCassini\n\nISS (all)\nUVIS (all)\n\nMRO\n\nCTX EDR\nHiRISE\n\nEDR, RDR, DTM\n\nEDR index has a bug (as delivered by the team, reported), where I need to activate an existing fix for it.\n\n\n\nLRO\n\nDiviner (DLRE)\n\nEDR, RDR\n\nLOLA\n\nEDR, RDR\n\n\n\n\n\nMore indexes of other instruments can be easily added by following the existing structure of what has been copied into your config at ~/.planetarypy_config.toml.\nPlease consider submitting a pull request for adding further PDS index files into the config file at its source: https://github.com/michaelaye/nbplanetary/blob/master/planetarypy/data/planetarypy_config.toml\n\n\n\n\nFind something in Utils for working with NASA timestamps and a well working URL download function url_retrieve, among other stuff.\n\n\n\nSo far, planetarypy supports CTX EDR and HiRISE RGB.NOMAP data. Look at the CTX and HiRISE pages for descriptions of classes for working with these data.\n\n\n\nPlease submit bug reports at https://github.com/michaelaye/nbplanetary/issues\n\n\n\n\n\nSee PDS apps for more details.\n\nfrom planetarypy.pds.apps import get_index\n\n\nctrindex = get_index(\"mro.ctx\", \"edr\", refresh=False)\nctrindex.sample(5, random_state=42)  # setting random_state to always get same files for docs\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_SPECIFICATION_NAME\nORIGINAL_PRODUCT_ID\nPRODUCT_ID\nIMAGE_TIME\nINSTRUMENT_ID\nINSTRUMENT_MODE_ID\nLINE_SAMPLES\nLINES\nSPATIAL_SUMMING\n...\nSUB_SOLAR_LATITUDE\nSUB_SPACECRAFT_LONGITUDE\nSUB_SPACECRAFT_LATITUDE\nSOLAR_DISTANCE\nSOLAR_LONGITUDE\nLOCAL_TIME\nIMAGE_SKEW_ANGLE\nRATIONALE_DESC\nDATA_QUALITY_DESC\nORBIT_NUMBER\n\n\n\n\n86101\nMROX_2757\nDATA/J07_047671_1256_XN_54S338W.IMG\n4A_04_10F0036A00\nJ07_047671_1256_XN_54S338W\n2016-09-27 00:24:54.682\nCTX\nNIFL\n2528\n8192\n1\n...\n-19.41\n338.09\n-54.43\n207762612.4\n230.58\n15.48\n90.1\nCrater in Noachis Terra\nOK\n47671\n\n\n54420\nMROX_1819\nDATA/D10_031170_1808_XN_00N221W.IMG\n4A_04_109C017D00\nD10_031170_1808_XN_00N221W\n2013-03-21 06:58:09.892\nCTX\nNIFL\n5056\n7168\n1\n...\n-24.39\n221.52\n0.88\n209925149.5\n286.15\n14.49\n90.1\nRide-along with HiRISE\nOK\n31170\n\n\n71053\nMROX_2331\nDATA/F10_039530_1470_XI_33S203W.IMG\n4A_04_10C9000F00\nF10_039530_1470_XI_33S203W\n2015-01-01 16:20:01.840\nCTX\nITL\n5056\n52224\n1\n...\n-25.3\n203.96\n-33.12\n207070298.2\n263.93\n15.2\n90.4\nTerrain in Terra Cimmeria\nOK\n39530\n\n\n51385\nMROX_1742\nDATA/D04_028919_2026_XN_22N327W.IMG\n4A_04_109002A800\nD04_028919_2026_XN_22N327W\n2012-09-26 21:17:00.483\nCTX\nNIFL\n5056\n6144\n1\n...\n0.67\n327.06\n22.78\n219814412.3\n178.44\n15.53\n90.1\nRide-along with HiRISE\nOK\n28919\n\n\n51923\nMROX_1757\nDATA/D05_029283_1524_XN_27S180W.IMG\n4A_04_1092020B00\nD05_029283_1524_XN_27S180W\n2012-10-25 05:44:21.786\nCTX\nNIFL\n5056\n9216\n1\n...\n-6.28\n178.36\n-27.56\n214830233.7\n194.72\n15.57\n90.1\nRide-along with HiRISE\nOK\n29283\n\n\n\n\n5 rows × 51 columns\n\n\n\n\n\nhirise_rdr = get_index(\"mro.hirise\", \"rdr\")\nhirise_rdr.sample(5, random_state=42)\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_NAME_SPECIFICATION\nINSTRUMENT_HOST_ID\nINSTRUMENT_ID\nOBSERVATION_ID\nPRODUCT_ID\nPRODUCT_VERSION_ID\nTARGET_NAME\nORBIT_NUMBER\nMISSION_PHASE_NAME\n...\nLINE_PROJECTION_OFFSET\nSAMPLE_PROJECTION_OFFSET\nCORNER1_LATITUDE\nCORNER1_LONGITUDE\nCORNER2_LATITUDE\nCORNER2_LONGITUDE\nCORNER3_LATITUDE\nCORNER3_LONGITUDE\nCORNER4_LATITUDE\nCORNER4_LONGITUDE\n\n\n\n\n144822\nMROHR_0001\nRDR/ESP/ORB_074100_074199/ESP_074107_1410/ESP_...\nMRO\nHIRISE\nESP_074107_1410\nESP_074107_1410_COLOR\n1\nMARS\n74107\nExtended Science Phase\n...\n-4568562.5\n2009279.5\n-38.7446\n159.311\n-38.7465\n159.287\n-38.614\n159.269\n-38.6121\n159.293\n\n\n22518\nMROHR_0001\nRDR/ESP/ORB_014000_014099/ESP_014080_1040/ESP_...\nMRO\nHIRISE\nESP_014080_1040\nESP_014080_1040_RED\n1\nMARS\n14080\nExtended Science Phase\n...\n-3193960.0\n-845180.0\n-76.0185\n165.215\n-76.0315\n164.858\n-75.6958\n164.658\n-75.6831\n165.005\n\n\n86634\nMROHR_0001\nRDR/ESP/ORB_046300_046399/ESP_046395_1730/ESP_...\nMRO\nHIRISE\nESP_046395_1730\nESP_046395_1730_COLOR\n1\nMARS\n46395\nExtended Science Phase\n...\n-1584330.0\n-26573400.0\n-6.9957\n292.569\n-6.9979\n292.551\n-6.6838\n292.51\n-6.6815\n292.529\n\n\n138163\nMROHR_0001\nRDR/ESP/ORB_069100_069199/ESP_069178_2345/ESP_...\nMRO\nHIRISE\nESP_069178_2345\nESP_069178_2345_RED\n1\nMARS\n69178\nExtended Science Phase\n...\n12762196.0\n15708938.0\n53.8598\n76.7591\n53.8474\n76.602\n54.0013\n76.5672\n54.0137\n76.7249\n\n\n125490\nMROHR_0001\nRDR/ESP/ORB_063500_063599/ESP_063504_1995/ESP_...\nMRO\nHIRISE\nESP_063504_1995\nESP_063504_1995_COLOR\n1\nMARS\n63504\nExtended Science Phase\n...\n4638178.5\n12794202.0\n19.4523\n124.149\n19.45\n124.128\n19.5686\n124.113\n19.5709\n124.133\n\n\n\n\n5 rows × 54 columns\n\n\n\n\n\n\n\n\n\n\n\nfrom planetarypy.ctx import CTX\n\n\npid = ctrindex.sample(random_state=42).squeeze().PRODUCT_ID\npid\n\n'J07_047671_1256_XN_54S338W'\n\n\n\nctx = CTX(pid)\nctx\n\nPRODUCT_ID: J07_047671_1256_XN_54S338W\nURL: https://pds-imaging.jpl.nasa.gov/data/mro/mars_reconnaissance_orbiter/ctx/mrox_2757/data/J07_047671_1256_XN_54S338W.IMG\nsource_path: /remote/trove/geo/planet/Mars/CTX/pds/mrox_2757/J07_047671_1256_XN_54S338W.IMG\nShape: (8192, 2528)\n\n\n\nctx.source_path\n\nPath('/remote/trove/geo/planet/Mars/CTX/pds/mrox_2757/J07_047671_1256_XN_54S338W.IMG')\n\n\n\nctx.download()\n\nFile exists. Use `overwrite=True` to download fresh.\n\n\n\n\n\n\nThe creation of this library was in part supported by:\n\nNASA Cassini UVIS mission\nNASA SSW grant NNX15AH36G\nNASA PDART grant 80NSSC20K0875\nNASA SSW grant 80NSSC20K0748\nGerman Space Agency (DLR Bonn), grant 50 OO 2204, on behalf of the German Federal Ministry for Economic Affairs and Climate Action.\nThis research has made use of the USGS Integrated Software for Imagers and Spectrometers (ISIS)(Laura et al. 2022).",
    "crumbs": [
      "PlanetaryPy"
    ]
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "PlanetaryPy",
    "section": "",
    "text": "pip install planetarypy\nThis will pull in these other dependencies and their dependencies:\ntomlkit pandas pvl numpy python-dateutil tqdm lxml yarl hirise-tools kalasiris",
    "crumbs": [
      "PlanetaryPy"
    ]
  },
  {
    "objectID": "index.html#suggested-standard-abbreviations",
    "href": "index.html#suggested-standard-abbreviations",
    "title": "PlanetaryPy",
    "section": "",
    "text": "Inside these docs the package will be called PLPY for brevity.\nA standard Python import could be: plp or plpy\n\nbecause the last p in plp can be pronounced out, we consider these equivalent for human conversation and pronounce these “plippy”.",
    "crumbs": [
      "PlanetaryPy"
    ]
  },
  {
    "objectID": "index.html#general-scope",
    "href": "index.html#general-scope",
    "title": "PlanetaryPy",
    "section": "",
    "text": "First and foremost this package should provide support in working with planetary science data.\nWith working we mean:\n\nlocating\nretrieving\nreading\nfurther processing\n\nof data.\n\n\nThis library manages, via its PDS tools, multiple PDS3 index files per instrument that can be used for identifying data of interest. These index files are automatically downloaded and converted to the very performant (and cloud-ready) parquet file format. &gt; Parquet is able to store advanced datatypes like nan-capable integer and full datetime objects, as opposed to HDF5.\n\n\n\nThe interface to getting data is via a path-retrieving function based on a PDS product-id. If that product-id is available locally, the path will be returned. If it is not, it will previously be downloaded, stored in a systematic fashion organized by mission and instrument, and then the local path will be returned.\n\n\n\nFor now, the library only returns the path to the object and the user needs to sort out the reading process. A recently funded NASA project Planetary Data Reader will be integrated here, so that basic reading into memory can be provided.\nAs such, we anticipate two classes of reading support: 1. basic reading into numpy and/or xarray 1. added reader functionality like basic plots and basic geospatial processing, as supported by interested parties\nThere will exist larger other packages that focus on working with a given instrument’s data, in which case that package could become an affiliated package with the planetarypy GitHub organization, if so desired.\n\n\n\nIn the future, additional frequently used procedures will be added to this library, e.g. * frequently used GDAL/rasterio procedures * frequently used SPICE operations * like surface illumination on a given body",
    "crumbs": [
      "PlanetaryPy"
    ]
  },
  {
    "objectID": "index.html#pds-tools",
    "href": "index.html#pds-tools",
    "title": "PlanetaryPy",
    "section": "",
    "text": "Look at the Apps docs to see what pds.apps exist for easily getting PDS indexes. The find_index app is specifically useful when you don’t know what index files exist.\nSo far, the following indexes are supported (but not necessarily all tested within PLPY):\n\nCassini\n\nISS (all)\nUVIS (all)\n\nMRO\n\nCTX EDR\nHiRISE\n\nEDR, RDR, DTM\n\nEDR index has a bug (as delivered by the team, reported), where I need to activate an existing fix for it.\n\n\n\nLRO\n\nDiviner (DLRE)\n\nEDR, RDR\n\nLOLA\n\nEDR, RDR\n\n\n\n\n\nMore indexes of other instruments can be easily added by following the existing structure of what has been copied into your config at ~/.planetarypy_config.toml.\nPlease consider submitting a pull request for adding further PDS index files into the config file at its source: https://github.com/michaelaye/nbplanetary/blob/master/planetarypy/data/planetarypy_config.toml",
    "crumbs": [
      "PlanetaryPy"
    ]
  },
  {
    "objectID": "index.html#utils",
    "href": "index.html#utils",
    "title": "PlanetaryPy",
    "section": "",
    "text": "Find something in Utils for working with NASA timestamps and a well working URL download function url_retrieve, among other stuff.",
    "crumbs": [
      "PlanetaryPy"
    ]
  },
  {
    "objectID": "index.html#experimentinstrument-specific",
    "href": "index.html#experimentinstrument-specific",
    "title": "PlanetaryPy",
    "section": "",
    "text": "So far, planetarypy supports CTX EDR and HiRISE RGB.NOMAP data. Look at the CTX and HiRISE pages for descriptions of classes for working with these data.",
    "crumbs": [
      "PlanetaryPy"
    ]
  },
  {
    "objectID": "index.html#bug-reports",
    "href": "index.html#bug-reports",
    "title": "PlanetaryPy",
    "section": "",
    "text": "Please submit bug reports at https://github.com/michaelaye/nbplanetary/issues",
    "crumbs": [
      "PlanetaryPy"
    ]
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "PlanetaryPy",
    "section": "",
    "text": "See PDS apps for more details.\n\nfrom planetarypy.pds.apps import get_index\n\n\nctrindex = get_index(\"mro.ctx\", \"edr\", refresh=False)\nctrindex.sample(5, random_state=42)  # setting random_state to always get same files for docs\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_SPECIFICATION_NAME\nORIGINAL_PRODUCT_ID\nPRODUCT_ID\nIMAGE_TIME\nINSTRUMENT_ID\nINSTRUMENT_MODE_ID\nLINE_SAMPLES\nLINES\nSPATIAL_SUMMING\n...\nSUB_SOLAR_LATITUDE\nSUB_SPACECRAFT_LONGITUDE\nSUB_SPACECRAFT_LATITUDE\nSOLAR_DISTANCE\nSOLAR_LONGITUDE\nLOCAL_TIME\nIMAGE_SKEW_ANGLE\nRATIONALE_DESC\nDATA_QUALITY_DESC\nORBIT_NUMBER\n\n\n\n\n86101\nMROX_2757\nDATA/J07_047671_1256_XN_54S338W.IMG\n4A_04_10F0036A00\nJ07_047671_1256_XN_54S338W\n2016-09-27 00:24:54.682\nCTX\nNIFL\n2528\n8192\n1\n...\n-19.41\n338.09\n-54.43\n207762612.4\n230.58\n15.48\n90.1\nCrater in Noachis Terra\nOK\n47671\n\n\n54420\nMROX_1819\nDATA/D10_031170_1808_XN_00N221W.IMG\n4A_04_109C017D00\nD10_031170_1808_XN_00N221W\n2013-03-21 06:58:09.892\nCTX\nNIFL\n5056\n7168\n1\n...\n-24.39\n221.52\n0.88\n209925149.5\n286.15\n14.49\n90.1\nRide-along with HiRISE\nOK\n31170\n\n\n71053\nMROX_2331\nDATA/F10_039530_1470_XI_33S203W.IMG\n4A_04_10C9000F00\nF10_039530_1470_XI_33S203W\n2015-01-01 16:20:01.840\nCTX\nITL\n5056\n52224\n1\n...\n-25.3\n203.96\n-33.12\n207070298.2\n263.93\n15.2\n90.4\nTerrain in Terra Cimmeria\nOK\n39530\n\n\n51385\nMROX_1742\nDATA/D04_028919_2026_XN_22N327W.IMG\n4A_04_109002A800\nD04_028919_2026_XN_22N327W\n2012-09-26 21:17:00.483\nCTX\nNIFL\n5056\n6144\n1\n...\n0.67\n327.06\n22.78\n219814412.3\n178.44\n15.53\n90.1\nRide-along with HiRISE\nOK\n28919\n\n\n51923\nMROX_1757\nDATA/D05_029283_1524_XN_27S180W.IMG\n4A_04_1092020B00\nD05_029283_1524_XN_27S180W\n2012-10-25 05:44:21.786\nCTX\nNIFL\n5056\n9216\n1\n...\n-6.28\n178.36\n-27.56\n214830233.7\n194.72\n15.57\n90.1\nRide-along with HiRISE\nOK\n29283\n\n\n\n\n5 rows × 51 columns\n\n\n\n\n\nhirise_rdr = get_index(\"mro.hirise\", \"rdr\")\nhirise_rdr.sample(5, random_state=42)\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_NAME_SPECIFICATION\nINSTRUMENT_HOST_ID\nINSTRUMENT_ID\nOBSERVATION_ID\nPRODUCT_ID\nPRODUCT_VERSION_ID\nTARGET_NAME\nORBIT_NUMBER\nMISSION_PHASE_NAME\n...\nLINE_PROJECTION_OFFSET\nSAMPLE_PROJECTION_OFFSET\nCORNER1_LATITUDE\nCORNER1_LONGITUDE\nCORNER2_LATITUDE\nCORNER2_LONGITUDE\nCORNER3_LATITUDE\nCORNER3_LONGITUDE\nCORNER4_LATITUDE\nCORNER4_LONGITUDE\n\n\n\n\n144822\nMROHR_0001\nRDR/ESP/ORB_074100_074199/ESP_074107_1410/ESP_...\nMRO\nHIRISE\nESP_074107_1410\nESP_074107_1410_COLOR\n1\nMARS\n74107\nExtended Science Phase\n...\n-4568562.5\n2009279.5\n-38.7446\n159.311\n-38.7465\n159.287\n-38.614\n159.269\n-38.6121\n159.293\n\n\n22518\nMROHR_0001\nRDR/ESP/ORB_014000_014099/ESP_014080_1040/ESP_...\nMRO\nHIRISE\nESP_014080_1040\nESP_014080_1040_RED\n1\nMARS\n14080\nExtended Science Phase\n...\n-3193960.0\n-845180.0\n-76.0185\n165.215\n-76.0315\n164.858\n-75.6958\n164.658\n-75.6831\n165.005\n\n\n86634\nMROHR_0001\nRDR/ESP/ORB_046300_046399/ESP_046395_1730/ESP_...\nMRO\nHIRISE\nESP_046395_1730\nESP_046395_1730_COLOR\n1\nMARS\n46395\nExtended Science Phase\n...\n-1584330.0\n-26573400.0\n-6.9957\n292.569\n-6.9979\n292.551\n-6.6838\n292.51\n-6.6815\n292.529\n\n\n138163\nMROHR_0001\nRDR/ESP/ORB_069100_069199/ESP_069178_2345/ESP_...\nMRO\nHIRISE\nESP_069178_2345\nESP_069178_2345_RED\n1\nMARS\n69178\nExtended Science Phase\n...\n12762196.0\n15708938.0\n53.8598\n76.7591\n53.8474\n76.602\n54.0013\n76.5672\n54.0137\n76.7249\n\n\n125490\nMROHR_0001\nRDR/ESP/ORB_063500_063599/ESP_063504_1995/ESP_...\nMRO\nHIRISE\nESP_063504_1995\nESP_063504_1995_COLOR\n1\nMARS\n63504\nExtended Science Phase\n...\n4638178.5\n12794202.0\n19.4523\n124.149\n19.45\n124.128\n19.5686\n124.113\n19.5709\n124.133\n\n\n\n\n5 rows × 54 columns",
    "crumbs": [
      "PlanetaryPy"
    ]
  },
  {
    "objectID": "index.html#instrument-tools",
    "href": "index.html#instrument-tools",
    "title": "PlanetaryPy",
    "section": "",
    "text": "from planetarypy.ctx import CTX\n\n\npid = ctrindex.sample(random_state=42).squeeze().PRODUCT_ID\npid\n\n'J07_047671_1256_XN_54S338W'\n\n\n\nctx = CTX(pid)\nctx\n\nPRODUCT_ID: J07_047671_1256_XN_54S338W\nURL: https://pds-imaging.jpl.nasa.gov/data/mro/mars_reconnaissance_orbiter/ctx/mrox_2757/data/J07_047671_1256_XN_54S338W.IMG\nsource_path: /remote/trove/geo/planet/Mars/CTX/pds/mrox_2757/J07_047671_1256_XN_54S338W.IMG\nShape: (8192, 2528)\n\n\n\nctx.source_path\n\nPath('/remote/trove/geo/planet/Mars/CTX/pds/mrox_2757/J07_047671_1256_XN_54S338W.IMG')\n\n\n\nctx.download()\n\nFile exists. Use `overwrite=True` to download fresh.",
    "crumbs": [
      "PlanetaryPy"
    ]
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "PlanetaryPy",
    "section": "",
    "text": "The creation of this library was in part supported by:\n\nNASA Cassini UVIS mission\nNASA SSW grant NNX15AH36G\nNASA PDART grant 80NSSC20K0875\nNASA SSW grant 80NSSC20K0748\nGerman Space Agency (DLR Bonn), grant 50 OO 2204, on behalf of the German Federal Ministry for Economic Affairs and Climate Action.\nThis research has made use of the USGS Integrated Software for Imagers and Spectrometers (ISIS)(Laura et al. 2022).",
    "crumbs": [
      "PlanetaryPy"
    ]
  },
  {
    "objectID": "tutorials/spice_howtos.html",
    "href": "tutorials/spice_howtos.html",
    "title": "SPICE with planetarypy HOWTO",
    "section": "",
    "text": "from astropy import units as u\nfrom numpy.linalg import norm\n\nfrom planetarypy.spice.spicer import MoonSpicer, MarsSpicer\n\n\nmoon = MoonSpicer(\"2022-02-22\")\n\n\nmoon.time.isoformat()\n\n'2022-02-22T00:00:00'\n\n\n\nmoon.solar_constant\n\n\\(1388.4482 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmoon.set_spoint_by(lat=0, lon=0)\n\n\nmoon.aspect = 180\nmoon.tilt = 30\n\n\nmoon.F_flat\n\n\\(497.68762 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmoon.F_aspect\n\n\\(449.48514 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmoon.F_tilt\n\n\\(412.53511 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmoon.subsolar\n\narray([  622.78676959, -1621.28270346,   -46.23629622])\n\n\n\nmoon.local_soltime\n\n'16:35:58'\n\n\n\n# MoonSpicer returns km (as all calculations in SPICE do)\n# use astropy.units to convert to other values\nnorm(moon.body_to_object(\"EARTH\")[0]) * u.km\n\n\\(375365.92 \\; \\mathrm{km}\\)\n\n\n\n(norm(moon.body_to_object(\"MARS\")[0]) * u.km).to(u.AU)\n\n\\(2.0379563 \\; \\mathrm{AU}\\)\n\n\n\nmars = MarsSpicer()\n\n\nmars.utc\n\n'2023-06-27T18:37:50.876055'\n\n\n\nmars.l_s\n\n83.31658188802474\n\n\n\nmars.goto('inca')\n\n\nmars.spoint\n\n(220.09830399469547, -440.60853011059214, -3340.5081261541495)\n\n\n\nmars.aspect=180\nmars.tilt=30\n\n\nmars.F_flat\n\n\\(0 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmars.F_aspect\n\n\\(0 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmars.set_spoint_by(lat=0, lon=0)\n\n\nmars.F_flat\n\n\\(339.2043 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmars.F_tilt\n\n\\(397.92501 \\; \\mathrm{\\frac{W}{m^{2}}}\\)",
    "crumbs": [
      "tutorials",
      "SPICE with `planetarypy` HOWTO"
    ]
  },
  {
    "objectID": "tutorials/spice_howtos.html#surface-calculations-on-the-moon",
    "href": "tutorials/spice_howtos.html#surface-calculations-on-the-moon",
    "title": "SPICE with planetarypy HOWTO",
    "section": "",
    "text": "from astropy import units as u\nfrom numpy.linalg import norm\n\nfrom planetarypy.spice.spicer import MoonSpicer, MarsSpicer\n\n\nmoon = MoonSpicer(\"2022-02-22\")\n\n\nmoon.time.isoformat()\n\n'2022-02-22T00:00:00'\n\n\n\nmoon.solar_constant\n\n\\(1388.4482 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmoon.set_spoint_by(lat=0, lon=0)\n\n\nmoon.aspect = 180\nmoon.tilt = 30\n\n\nmoon.F_flat\n\n\\(497.68762 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmoon.F_aspect\n\n\\(449.48514 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmoon.F_tilt\n\n\\(412.53511 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmoon.subsolar\n\narray([  622.78676959, -1621.28270346,   -46.23629622])\n\n\n\nmoon.local_soltime\n\n'16:35:58'\n\n\n\n# MoonSpicer returns km (as all calculations in SPICE do)\n# use astropy.units to convert to other values\nnorm(moon.body_to_object(\"EARTH\")[0]) * u.km\n\n\\(375365.92 \\; \\mathrm{km}\\)\n\n\n\n(norm(moon.body_to_object(\"MARS\")[0]) * u.km).to(u.AU)\n\n\\(2.0379563 \\; \\mathrm{AU}\\)\n\n\n\nmars = MarsSpicer()\n\n\nmars.utc\n\n'2023-06-27T18:37:50.876055'\n\n\n\nmars.l_s\n\n83.31658188802474\n\n\n\nmars.goto('inca')\n\n\nmars.spoint\n\n(220.09830399469547, -440.60853011059214, -3340.5081261541495)\n\n\n\nmars.aspect=180\nmars.tilt=30\n\n\nmars.F_flat\n\n\\(0 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmars.F_aspect\n\n\\(0 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmars.set_spoint_by(lat=0, lon=0)\n\n\nmars.F_flat\n\n\\(339.2043 \\; \\mathrm{\\frac{W}{m^{2}}}\\)\n\n\n\nmars.F_tilt\n\n\\(397.92501 \\; \\mathrm{\\frac{W}{m^{2}}}\\)",
    "crumbs": [
      "tutorials",
      "SPICE with `planetarypy` HOWTO"
    ]
  },
  {
    "objectID": "tutorials/apps_demo.html",
    "href": "tutorials/apps_demo.html",
    "title": "PlanetaryPy Demo",
    "section": "",
    "text": "from planetarypy import utils\n\n\nDo you remember that the string conversion code for “day-of-year” is %j ?\n\n\nDo we want newcomers search for that in Python docs?\n\n\ntimes = [\"2002-137\", \"2005-234T13:00:00.123\"]\n\n\nisotimes = [utils.nasa_time_to_iso(t) for t in times]\nisotimes\n\n['2002-05-17', '2005-08-22T13:00:00.123000']\n\n\n\n[utils.iso_to_nasa_time(t) for t in isotimes]\n\n['2002-137', '2005-234T13:00:00.123000']\n\n\n\n\n\n\nutils.check_url_exists(\"https://michaelaye.github.io\")\n\nTrue\n\n\n\nutils.check_url_exists?\n\n\nSignature: utils.check_url_exists(url)\nDocstring: &lt;no docstring&gt;\nFile:      ~/Dropbox/src/nbplanetary/planetarypy/utils.py\nType:      function\n\n\n\n\nutils.have_internet()\n\nTrue\n\n\n\nutils.url_retrieve(\n    \"https://michaelaye.github.io/talks/2021-conda-workshop-kharkiv/conda_talk_Kharkiv_conference.pdf\",\n    \"talk_slides.pdf\",\n)",
    "crumbs": [
      "tutorials",
      "PlanetaryPy Demo"
    ]
  },
  {
    "objectID": "tutorials/apps_demo.html#time-and-network-utils",
    "href": "tutorials/apps_demo.html#time-and-network-utils",
    "title": "PlanetaryPy Demo",
    "section": "",
    "text": "from planetarypy import utils\n\n\nDo you remember that the string conversion code for “day-of-year” is %j ?\n\n\nDo we want newcomers search for that in Python docs?\n\n\ntimes = [\"2002-137\", \"2005-234T13:00:00.123\"]\n\n\nisotimes = [utils.nasa_time_to_iso(t) for t in times]\nisotimes\n\n['2002-05-17', '2005-08-22T13:00:00.123000']\n\n\n\n[utils.iso_to_nasa_time(t) for t in isotimes]\n\n['2002-137', '2005-234T13:00:00.123000']\n\n\n\n\n\n\nutils.check_url_exists(\"https://michaelaye.github.io\")\n\nTrue\n\n\n\nutils.check_url_exists?\n\n\nSignature: utils.check_url_exists(url)\nDocstring: &lt;no docstring&gt;\nFile:      ~/Dropbox/src/nbplanetary/planetarypy/utils.py\nType:      function\n\n\n\n\nutils.have_internet()\n\nTrue\n\n\n\nutils.url_retrieve(\n    \"https://michaelaye.github.io/talks/2021-conda-workshop-kharkiv/conda_talk_Kharkiv_conference.pdf\",\n    \"talk_slides.pdf\",\n)",
    "crumbs": [
      "tutorials",
      "PlanetaryPy Demo"
    ]
  },
  {
    "objectID": "tutorials/apps_demo.html#pds-indexes",
    "href": "tutorials/apps_demo.html#pds-indexes",
    "title": "PlanetaryPy Demo",
    "section": "PDS Indexes",
    "text": "PDS Indexes\n\nfrom planetarypy.pds.apps import find_indexes, get_index, find_instruments\n\n\nfind_indexes?\n\n\nSignature: find_indexes(instrument: str) -&gt; list\nDocstring: Find existing indexes for an instrument.\nFile:      ~/Dropbox/src/nbplanetary/planetarypy/pds/apps.py\nType:      function\n\n\n\n\nfind_indexes('cassini.uvis')\n\n['index',\n 'moon_summary',\n 'ring_summary',\n 'saturn_summary',\n 'supplemental_index',\n 'versions']\n\n\n\nfind_indexes('go.ssi')  # Galileo orbiter SSImager\n\n['edr']\n\n\n\nget_index?\n\n\nSignature:\nget_index(\n    instr: str,\n    index_name: str = '',\n    refresh: bool = True,\n    force: bool = False,\n) -&gt; pandas.core.frame.DataFrame\nDocstring: Example: get_index(\"cassini.iss\", \"index\")\nFile:      ~/Dropbox/src/nbplanetary/planetarypy/pds/apps.py\nType:      function\n\n\n\n\nget_index(\"cassini.uvis.ring_summary\")\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_SPECIFICATION_NAME\nRING_OBSERVATION_ID\nMINIMUM_RIGHT_ASCENSION\nMAXIMUM_RIGHT_ASCENSION\nMINIMUM_DECLINATION\nMAXIMUM_DECLINATION\nMINIMUM_RING_RADIUS\nMAXIMUM_RING_RADIUS\nFINEST_RING_INTERCEPT_RESOLUTION\n...\nRING_CENTER_DISTANCE\nSUB_SOLAR_RING_LONGITUDE\nSUB_OBSERVER_RING_LONGITUDE\nRING_CENTER_PHASE_ANGLE\nRING_CENTER_INCIDENCE_ANGLE\nRING_CENTER_NORTH_BASED_INCIDENCE_ANGLE\nRING_CENTER_EMISSION_ANGLE\nRING_CENTER_NORTH_BASED_EMISSION_ANGLE\nSOLAR_RING_OPENING_ANGLE\nOBSERVER_RING_OPENING_ANGLE\n\n\n\n\n0\nCOUVIS_0006\nDATA/D2004_002/EUV2004_002_12_16.LBL\nS/CO/UVIS/2004-002T12-16/EUV\n34.154493\n37.815141\n9.679762\n9.712415\n1074925.366\n3066570.289\n87709.0\n...\n86724352.465\n283.109\n215.938\n62.786\n64.404\n115.596\n73.661\n106.339\n-25.596\n-16.34\n\n\n1\nCOUVIS_0006\nDATA/D2004_002/EUV2004_002_12_32.LBL\nS/CO/UVIS/2004-002T12-32/EUV\n34.155557\n37.817313\n9.78073\n9.81348\n521741.812\n2900680.924\n87173.0\n...\n86719417.82\n283.109\n215.938\n62.787\n64.404\n115.596\n73.661\n106.339\n-25.596\n-16.34\n\n\n2\nCOUVIS_0006\nDATA/D2004_002/EUV2004_002_12_47.LBL\nS/CO/UVIS/2004-002T12-47/EUV\n34.154107\n37.816935\n9.877249\n9.909878\n64757.681\n2839690.546\n86667.0\n...\n86714483.175\n283.11\n215.938\n62.787\n64.404\n115.596\n73.661\n106.339\n-25.596\n-16.34\n\n\n3\nCOUVIS_0006\nDATA/D2004_002/EUV2004_002_13_03.LBL\nS/CO/UVIS/2004-002T13-03/EUV\n34.155193\n37.819152\n9.978176\n10.010898\n541745.355\n2872984.474\n86145.0\n...\n86709548.529\n283.11\n215.938\n62.787\n64.404\n115.596\n73.661\n106.339\n-25.596\n-16.34\n\n\n4\nCOUVIS_0006\nDATA/D2004_002/EUV2004_002_13_18.LBL\nS/CO/UVIS/2004-002T13-18/EUV\n34.157243\n37.822332\n10.077845\n10.110536\n1068459.125\n2999016.495\n85635.0\n...\n86704613.884\n283.111\n215.938\n62.788\n64.404\n115.596\n73.661\n106.339\n-25.596\n-16.34\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n167406\nCOUVIS_0060\nDATA/D2017_258/FUV2017_258_04_31.LBL\nS/CO/UVIS/2017-258T04-31/FUV\n355.156267\n93.92438\n-69.312846\n-14.507954\n126726.883\n1083278.078\n246.61634\n...\n263974.558\n178.948\n26.856\n99.681\n63.319\n63.319\n40.359\n40.359\n26.681\n49.641\n\n\n167407\nCOUVIS_0060\nDATA/D2017_258/FUV2017_258_07_00.LBL\nS/CO/UVIS/2017-258T07-00/FUV\n82.692823\n82.747154\n-4.328498\n-4.268149\n-999.0\n-999.0\n-999.0\n...\n251887.753\n178.949\n26.661\n99.192\n63.319\n63.319\n39.696\n39.696\n26.681\n50.304\n\n\n167408\nCOUVIS_0060\nDATA/D2017_258/FUV2017_258_07_15.LBL\nS/CO/UVIS/2017-258T07-15/FUV\n54.358671\n76.196366\n-4.007282\n13.298744\n-999.0\n-999.0\n-999.0\n...\n157806.504\n178.951\n68.04\n76.009\n63.319\n63.319\n34.946\n34.946\n26.681\n55.054\n\n\n167409\nCOUVIS_0060\nDATA/D2017_258/HDAC2017_258_02_14.LBL\nS/CO/UVIS/2017-258T02-14/HDAC\n129.674881\n143.379042\n-58.332263\n-48.522644\n204871.745\n219390.536\n17773.0\n...\n447586.578\n178.942\n9.923\n115.559\n63.319\n63.319\n53.073\n53.073\n26.681\n36.927\n\n\n167410\nCOUVIS_0060\nDATA/D2017_258/HDAC2017_258_02_15.LBL\nS/CO/UVIS/2017-258T02-15/HDAC\n92.532639\n116.78171\n-67.582806\n-63.392218\n98954.702\n230819.677\n12312.0\n...\n357220.013\n178.945\n15.877\n109.156\n63.319\n63.319\n47.62\n47.62\n26.681\n42.38\n\n\n\n\n167411 rows × 59 columns\n\n\n\n\n\nget_index('go.ssi.edr')\n\n\n\n\n\n\n\n\n\nSPACECRAFT_CLOCK_START_COUNT\nMISSION_NAME\nINSTRUMENT_ID\nDATA_SET_ID\nIMAGE_ID\nOBSERVATION_ID\nPRODUCT_TYPE\nTARGET_NAME\nIMAGE_TIME\nFILTER_NAME\n...\nSUB_SPACECRAFT_LINE\nSUB_SPACECRAFT_LINE_SAMPLE\nCENTER_RING_RADIUS\nVOLUME_ID\nFILE_SPECIFICATION_NAME\nCOMPRESSION_TYPE\nENCODING_MIN_COMPRESSION_RATIO\nENCODING_MAX_COMPRESSION_RATIO\nENCODING_COMPRESSION_RATIO\nPROCESSING_HISTORY_TEXT\n\n\n\n\n0\n30611.0\nGALILEO\nSSI\nGO-V/E-SSI-2-REDR-V1.1\nUNK\nPOST_LAUNCH_CHECKOUT\nREDR\nBLACK_SKY\nNaT\nCLEAR\n...\n-999.0\n-999.0\n-999\nGO_0002\nRAW_CAL/C0003061100R.IMG\nNONE\n0.0\n0.0\n0.0\nVICAR programs run: CATLABEL,BADLABEL,COPY.\n\n\n1\n30612.0\nGALILEO\nSSI\nGO-V/E-SSI-2-REDR-V1.1\nUNK\nPOST_LAUNCH_CHECKOUT\nREDR\nBLACK_SKY\nNaT\nCLEAR\n...\n-999.0\n-999.0\n-999\nGO_0002\nRAW_CAL/C0003061200R.IMG\nNONE\n0.0\n0.0\n0.0\nVICAR programs run: CATLABEL,BADLABEL,COPY.\n\n\n2\n30613.0\nGALILEO\nSSI\nGO-V/E-SSI-2-REDR-V1.1\nUNK\nPOST_LAUNCH_CHECKOUT\nREDR\nBLACK_SKY\nNaT\nCLEAR\n...\n-999.0\n-999.0\n-999\nGO_0002\nRAW_CAL/C0003061300R.IMG\nNONE\n0.0\n0.0\n0.0\nVICAR programs run: CATLABEL,BADLABEL,COPY.\n\n\n3\n30614.0\nGALILEO\nSSI\nGO-V/E-SSI-2-REDR-V1.1\nUNK\nPOST_LAUNCH_CHECKOUT\nREDR\nBLACK_SKY\nNaT\nCLEAR\n...\n-999.0\n-999.0\n-999\nGO_0002\nRAW_CAL/C0003061400R.IMG\nNONE\n0.0\n0.0\n0.0\nVICAR programs run: CATLABEL,BADLABEL,COPY.\n\n\n4\n30619.0\nGALILEO\nSSI\nGO-V/E-SSI-2-REDR-V1.1\nUNK\nPOST_LAUNCH_CHECKOUT\nREDR\nBLACK_SKY\nNaT\nCLEAR\n...\n-999.0\n-999.0\n-999\nGO_0002\nRAW_CAL/C0003061900R.IMG\nNONE\n0.0\n0.0\n0.0\nVICAR programs run: CATLABEL,BADLABEL,COPY.\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n14904\n6006608.22\nGALILEO\nSSI\nGO-J/JSA-SSI-4-REDR-V1.0\n29N0033\n29NSFLTFLD03\nREDR\nNON_SCIENC\nNaT\nIR-7270\n...\n-999.0\n-999.0\n-999\nGO_0023\nG29/REPAIRED/C0600660822S.IMG\nINTEGER COSINE TRANSFORM\n38.918\n16.986\n76.488\nVICAR programs run:SSIMERGE,F2,FASTMOS,FASTMOS...\n\n\n14905\n6006608.23\nGALILEO\nSSI\nGO-J/JSA-SSI-4-REDR-V1.0\n29N0033\n29NSFLTFLD03\nREDR\nNON_SCIENC\nNaT\nIR-7270\n...\n-999.0\n-999.0\n-999\nGO_0023\nG29/REPAIRED/C0600660823S.IMG\nHUFFMAN\n0.0\n0.0\n0.0\nVICAR programs run:SSIMERGE,F2,FASTMOS,FASTMOS...\n\n\n14906\n6006609.68\nGALILEO\nSSI\nGO-J/JSA-SSI-4-REDR-V1.0\n29N0034\n29NSFLTFLD03\nREDR\nNON_SCIENC\nNaT\nIR-8890\n...\n-999.0\n-999.0\n-999\nGO_0023\nG29/REPAIRED/C0600660968S.IMG\nINTEGER COSINE TRANSFORM\n6.054\n4.92\n8.212\nVICAR programs run:SSIMERGE,F2,FASTMOS,FASTMOS...\n\n\n14907\n6006609.69\nGALILEO\nSSI\nGO-J/JSA-SSI-4-REDR-V1.0\n29N0034\n29NSFLTFLD03\nREDR\nNON_SCIENC\nNaT\nIR-8890\n...\n-999.0\n-999.0\n-999\nGO_0023\nG29/REPAIRED/C0600660969S.IMG\nHUFFMAN\n0.0\n0.0\n0.0\nVICAR programs run:SSIMERGE,F2,FASTMOS,FASTMOS...\n\n\n14908\n4203615.0\nGALILEO\nSSI\nGO-J/JSA-SSI-2-REDR-V1.0\n11I0003\n11ISECLIPS01\nREDR\nIO\nNaT\nCLEAR\n...\n254.092\n334.653\n-999\nGO_0023\nREDO/E11/IO/C0420361500R.IMG\nINTEGER COSINE TRANSFORM\n8.354\n6.843\n9.709\nVICAR programs run: SSIMERGE,UNMOSAIC,CATLABEL...\n\n\n\n\n14909 rows × 52 columns\n\n\n\n\n\nfind_indexes(\"cassini.iss\")\n\n['index', 'inventory', 'moon_summary', 'ring_summary', 'saturn_summary']\n\n\n\nget_index(\"cassini.iss.saturn_summary\")\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_SPECIFICATION_NAME\nOPUS_ID\nTARGET_NAME\nMINIMUM_PLANETOCENTRIC_LATITUDE\nMAXIMUM_PLANETOCENTRIC_LATITUDE\nMINIMUM_PLANETOGRAPHIC_LATITUDE\nMAXIMUM_PLANETOGRAPHIC_LATITUDE\nMINIMUM_IAU_LONGITUDE\nMAXIMUM_IAU_LONGITUDE\n...\nMAXIMUM_EMISSION_ANGLE\nSUB_SOLAR_PLANETOCENTRIC_LATITUDE\nSUB_SOLAR_PLANETOGRAPHIC_LATITUDE\nSUB_OBSERVER_PLANETOCENTRIC_LATITUDE\nSUB_OBSERVER_PLANETOGRAPHIC_LATITUDE\nSUB_SOLAR_IAU_LONGITUDE\nSUB_OBSERVER_IAU_LONGITUDE\nCENTER_RESOLUTION\nCENTER_DISTANCE\nCENTER_PHASE_ANGLE\n\n\n\n\n0\nCOISS_2001\ndata/1454725799_1455008789/N1454725799_1.LBL\nco-iss-n1454725799\nSATURN\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n-999.0\n-25.411\n-30.279\n-16.324\n-19.796\n107.986\n176.558\n424.67606\n70874998.947\n64.07\n\n\n1\nCOISS_2001\ndata/1454725799_1455008789/N1454726579_1.LBL\nco-iss-n1454726579\nSATURN\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n-999.0\n-25.411\n-30.279\n-16.324\n-19.796\n115.305\n183.877\n424.65121\n70870851.371\n64.07\n\n\n2\nCOISS_2001\ndata/1454725799_1455008789/N1454727359_1.LBL\nco-iss-n1454727359\nSATURN\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n-999.0\n-25.411\n-30.279\n-16.324\n-19.796\n122.625\n191.197\n424.62635\n70866703.094\n64.071\n\n\n3\nCOISS_2001\ndata/1454725799_1455008789/N1454728139_1.LBL\nco-iss-n1454728139\nSATURN\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n-999.0\n-25.411\n-30.279\n-16.324\n-19.796\n129.94\n198.513\n424.60151\n70862557.207\n64.071\n\n\n4\nCOISS_2001\ndata/1454725799_1455008789/N1454728919_1.LBL\nco-iss-n1454728919\nSATURN\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n-999.0\n-25.411\n-30.279\n-16.324\n-19.796\n137.264\n205.837\n424.57664\n70858406.794\n64.071\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n405116\nCOISS_2116\ndata/1884113741_1884114531/W1884114471_1.LBL\nco-iss-w1884114471\nSATURN\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n51.97\n26.682\n31.701\n29.262\n34.552\n263.715\n79.081\n75.81817\n634269.821\n123.878\n\n\n405117\nCOISS_2116\ndata/1884113741_1884114531/N1884114501_1.LBL\nco-iss-n1884114501\nSATURN\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n30.558\n26.682\n31.701\n29.269\n34.56\n263.996\n79.357\n7.59837\n634053.296\n123.87\n\n\n405118\nCOISS_2116\ndata/1884113741_1884114531/W1884114501_1.LBL\nco-iss-w1884114501\nSATURN\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n52.192\n26.682\n31.701\n29.27\n34.56\n264.004\n79.364\n75.79162\n634047.739\n123.87\n\n\n405119\nCOISS_2116\ndata/1884113741_1884114531/N1884114531_1.LBL\nco-iss-n1884114531\nSATURN\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n30.665\n26.682\n31.701\n29.277\n34.568\n264.278\n79.633\n7.59578\n633836.731\n123.863\n\n\n405120\nCOISS_2116\ndata/1884113741_1884114531/W1884114531_2.LBL\nco-iss-w1884114531\nSATURN\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n52.474\n26.682\n31.701\n29.277\n34.568\n264.286\n79.641\n75.76561\n633830.161\n123.862\n\n\n\n\n405121 rows × 35 columns\n\n\n\n\n\nfind_indexes('mro.ctx')\n\n['edr']\n\n\n\nget_index('mro.ctx', 'edr', refresh=False)\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_SPECIFICATION_NAME\nORIGINAL_PRODUCT_ID\nPRODUCT_ID\nIMAGE_TIME\nINSTRUMENT_ID\nINSTRUMENT_MODE_ID\nLINE_SAMPLES\nLINES\nSPATIAL_SUMMING\n...\nSUB_SOLAR_LATITUDE\nSUB_SPACECRAFT_LONGITUDE\nSUB_SPACECRAFT_LATITUDE\nSOLAR_DISTANCE\nSOLAR_LONGITUDE\nLOCAL_TIME\nIMAGE_SKEW_ANGLE\nRATIONALE_DESC\nDATA_QUALITY_DESC\nORBIT_NUMBER\n\n\n\n\n0\nMROX_0001\nDATA/CRU_000001_9999_XN_99N999W.IMG\n4A_04_0001000400\nCRU_000001_9999_XN_99N999W\n2005-08-30 15:40:21.549\nCTX\nNIFL\n5056\n1024\n1\n...\n0.0\n0.0\n0.0\n0.0\n278.89\n10.16\n0.0\nInstrument checkout image of space\nOK\n-4242\n\n\n1\nMROX_0001\nDATA/CRU_000002_9999_XN_99N999W.IMG\n4A_04_0001000500\nCRU_000002_9999_XN_99N999W\n2005-09-08 15:59:45.313\nCTX\nNIFL\n5056\n15360\n1\n...\n0.0\n0.0\n0.0\n0.0\n284.48\n4.6\n0.0\nCalibration image of the Moon\nOK\n-4126\n\n\n2\nMROX_0001\nDATA/CRU_000003_9999_XN_99N999W.IMG\n4A_04_0001000600\nCRU_000003_9999_XN_99N999W\n2005-09-08 16:03:37.927\nCTX\nNIFL\n5056\n2048\n1\n...\n0.0\n0.0\n0.0\n0.0\n284.48\n4.66\n0.0\nCalibration image of Omega Centauri (globular ...\nOK\n-4126\n\n\n3\nMROX_0001\nDATA/CRU_000004_9999_XN_99N999W.IMG\n4A_04_0001000700\nCRU_000004_9999_XN_99N999W\n2005-09-08 16:08:23.841\nCTX\nNIFL\n5056\n2048\n1\n...\n0.0\n0.0\n0.0\n0.0\n284.48\n4.74\n0.0\nCalibration image of Omega Centauri (globular ...\nOK\n-4126\n\n\n4\nMROX_0001\nDATA/CRU_000005_9999_XN_99N999W.IMG\n4A_04_0001000800\nCRU_000005_9999_XN_99N999W\n2005-09-08 16:11:18.649\nCTX\nNIFL\n5056\n21504\n1\n...\n0.0\n0.0\n0.0\n0.0\n284.48\n4.79\n0.0\nCalibration image of the Moon\nOK\n-4126\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n142363\nMROX_4656\nDATA/U17_077781_1107_XI_69S045W.IMG\n4A_04_118B04B300\nU17_077781_1107_XI_69S045W\n2023-03-01 00:01:37.834\nCTX\nITL\n5056\n7168\n1\n...\n12.74\n46.17\n-69.47\n243271024.8\n30.8\n15.42\n90.1\nSouthern autumn frost streak area in Viking 2 ...\nOK\n77781\n\n\n142364\nMROX_4656\nDATA/U17_077781_1560_XN_24S055W.IMG\n4A_04_118A04B400\nU17_077781_1560_XN_24S055W\n2023-03-01 00:15:17.076\nCTX\nNIFL\n5056\n30720\n1\n...\n12.74\n55.44\n-24.08\n243270437.8\n30.81\n14.96\n90.2\nRide-along with HiRISE\nOK\n77781\n\n\n142365\nMROX_4656\nDATA/U17_077781_1683_XN_11S057W.IMG\n4A_04_118A04B500\nU17_077781_1683_XN_11S057W\n2023-03-01 00:19:04.486\nCTX\nNIFL\n5056\n31744\n1\n...\n12.74\n57.0\n-11.7\n243270441.7\n30.81\n14.91\n90.2\nTerrain north of Coprates Chasma\nOK\n77781\n\n\n142366\nMROX_4656\nDATA/U17_077781_2027_XI_22N061W.IMG\n4A_04_118B04B600\nU17_077781_2027_XI_22N061W\n2023-03-01 00:29:24.818\nCTX\nITL\n5056\n52224\n1\n...\n12.74\n61.25\n22.78\n243271031.7\n30.81\n14.82\n89.8\nKasei Valles region\nOK\n77781\n\n\n142367\nMROX_4656\nDATA/U17_077781_2440_XN_64N067W.IMG\n4A_04_118A04B700\nU17_077781_2440_XN_64N067W\n2023-03-01 00:43:08.662\nCTX\nNIFL\n5056\n7168\n1\n...\n12.74\n68.76\n64.02\n243272920.6\n30.82\n14.59\n89.9\nRide-along with HiRISE\nOK\n77781\n\n\n\n\n142368 rows × 51 columns\n\n\n\n\n\nfind_instruments('cassini')\n\n['iss', 'uvis']\n\n\n\nfind_instruments('mro')\n\n['hirise', 'ctx']\n\n\n\nfind_instruments('lro')\n\n['diviner', 'lola', 'lroc']",
    "crumbs": [
      "tutorials",
      "PlanetaryPy Demo"
    ]
  },
  {
    "objectID": "tutorials/apps_demo.html#instrument-data",
    "href": "tutorials/apps_demo.html#instrument-data",
    "title": "PlanetaryPy Demo",
    "section": "Instrument data",
    "text": "Instrument data\n\nfrom planetarypy.uvis import DataManager\n\n\nindex = get_index(\"cassini.uvis.index\")\n\n\nindex.tail()\n\n\n\n\n\n\n\n\n\nFILE_NAME\nOBSERVATION_TYPE\nSTART_TIME\nSTOP_TIME\nTARGET_NAME\nDATA_SET_ID\nSPACECRAFT_CLOCK_START_COUNT\nSPACECRAFT_CLOCK_STOP_COUNT\nINTEGRATION_DURATION\nCOMPRESSION_TYPE\n...\nSUB_SOLAR_LONGITUDE\nSUB_SPACECRAFT_LATITUDE\nSUB_SPACECRAFT_LONGITUDE\nPHASE_ANGLE\nEMISSION_ANGLE\nSOLAR_INCIDENCE_ANGLE\nCENTRAL_BODY_DISTANCE\nDWELL_TIME\nH_LEVEL\nD_LEVEL\n\n\n\n\n203240\n/COUVIS_0060/DATA/D2017_258/FUV2017_258_04_31.LBL\n&lt;NA&gt;\n2017-09-15 04:31:53.005\n2017-09-15 09:04:56.755\nSOLAR WIND\nCO-S-UVIS-2-CUBE-V1.4\n1/1884145299.160\nUNK\n8191.875\nSQRT_9\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n-999\n&lt;NA&gt;\n&lt;NA&gt;\n\n\n203241\n/COUVIS_0060/DATA/D2017_258/FUV2017_258_07_00.LBL\n&lt;NA&gt;\n2017-09-15 07:00:27.697\n2017-09-15 07:13:40.447\nSOLAR WIND\nCO-S-UVIS-2-SPEC-V1.4\n1/1884154214.096\nUNK\n2.625\nSQRT_9\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n-999\n&lt;NA&gt;\n&lt;NA&gt;\n\n\n203242\n/COUVIS_0060/DATA/D2017_258/FUV2017_258_07_15.LBL\n&lt;NA&gt;\n2017-09-15 07:15:04.442\n2017-09-15 10:31:51.692\nSOLAR WIND\nCO-S-UVIS-2-SPEC-V1.4\n1/1884155091.032\nUNK\n2.625\nSQRT_9\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n-999\n&lt;NA&gt;\n&lt;NA&gt;\n\n\n203243\n/COUVIS_0060/DATA/D2017_258/HDAC2017_258_02_14...\n&lt;NA&gt;\n2017-09-15 02:14:02.433\n2017-09-15 02:14:06.433\nSOLAR WIND\nCO-S-UVIS-2-SSB-V1.4\n1/1884137029.000\nUNK\n-999.0\nNONE\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n1\n(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n\n\n203244\n/COUVIS_0060/DATA/D2017_258/HDAC2017_258_02_15...\n&lt;NA&gt;\n2017-09-15 02:15:25.058\n2017-09-15 02:17:33.058\nSOLAR WIND\nCO-S-UVIS-2-SSB-V1.4\n1/1884137111.160\nUNK\n-999.0\nNONE\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n32\n(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n\n\n\n\n5 rows × 28 columns\n\n\n\n\n\ndm = DataManager(\"EUV2017_258_07_00\")\n\n\ndm.calib_label_path\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/cassini/uvis/EUV2017_258_07_00/EUV2017_258_07_00_CAL_3.LBL')\n\n\n\ndm.raw_data_path\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/cassini/uvis/EUV2017_258_07_00/EUV2017_258_07_00.DAT')\n\n\n\ndm.raw_label_path\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/cassini/uvis/EUV2017_258_07_00/EUV2017_258_07_00.LBL')\n\n\n\nfrom planetarypy.hirise import ProductPathfinder\n\n\n\n\n\n\n\n\n\n\n\nppf = ProductPathfinder(\"PSP_003092_0985_RED\")\n\n\nppf.local_label_path\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/mro/hirise/PSP_003092_0985/PSP_003092_0985_RED.LBL')\n\n\n\nppf.abrowse_path\n\nPath('EXTRAS/RDR/PSP/ORB_003000_003099/PSP_003092_0985/PSP_003092_0985_RED.abrowse.jpg')\n\n\n\nppf.homepage\n\n'https://uahirise.org/PSP_003092_0985'\n\n\n\nppf.nomap_jp2_url\n\nURL('https://hirise-pds.lpl.arizona.edu/PDS/EXTRAS/RDR/PSP/ORB_003000_003099/PSP_003092_0985/PSP_003092_0985_RED.NOMAP.JP2')\n\n\n\nfrom planetarypy.hirise import RGB_NOMAP\n\n\nrgb = RGB_NOMAP(\"PSP_003092_0985\")\n\n\nrgb.local_path\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/mro/hirise/PSP_003092_0985/PSP_003092_0985_RGB.NOMAP.JP2')",
    "crumbs": [
      "tutorials",
      "PlanetaryPy Demo"
    ]
  },
  {
    "objectID": "api/diviner.html",
    "href": "api/diviner.html",
    "title": "Diviner",
    "section": "",
    "text": "source\n\nDataManager\n\n DataManager (tstr)\n\nInitialize self. See help(type(self)) for accurate signature.\n\ndm = DataManager(\"2010010110\")\n\n\ndm.local_path\n\n\nsource\n\n\nread_l1a_data\n\n read_l1a_data (fname, nrows=None)\n\n\nsource\n\n\nL1AHeader\n\n L1AHeader ()\n\nInitialize self. See help(type(self)) for accurate signature.\n\nsource\n\n\nparse_header_line\n\n parse_header_line (line)\n\n*Parse header lines.\n\n\n\ns = ’ a b c ’ parse_header_line(s) [‘a’, ‘b’, ‘c’] s = ’ a, b , c ’ parse_header_line(s) [‘a’, ‘b’, ‘c’]*\n\n\n\n\ndm = DataManager(\"2010010110\")\n\n\ndm.download()\n\n\ndm.volume\n\n\ndm.url\n\n\ndf = pd.read_csv(\n    dm.local_path,\n    comment=\"#\",\n    # names=L1AHeader.columns,\n    na_values=\"-9999\",\n    skipinitialspace=True,\n)\ndf.head()\n\n\npd.set_option(\"display.max_columns\", 200)\n\n\ndf.index\n\n\ndm.local_path\n\n\nsource\n\n\nget_data_path\n\n get_data_path (tstr)\n\n\nget_data_path(\"2017010110\")",
    "crumbs": [
      "api",
      "Diviner"
    ]
  },
  {
    "objectID": "api/config.html",
    "href": "api/config.html",
    "title": "Config",
    "section": "",
    "text": "source",
    "crumbs": [
      "api",
      "Config"
    ]
  },
  {
    "objectID": "api/config.html#the-config-object",
    "href": "api/config.html#the-config-object",
    "title": "Config",
    "section": "The Config() object",
    "text": "The Config() object\nThe config module instantiates a config object from the Config class. Its attributes can be used to access several aspects relevant to the configuration of planetarypy. Using an object approach enables easy growth and nesting over time.\n\nconfig = Config(config_path=\"test_config.toml\")\n\n\nassert config.storage_root == Path.home() / \"planetarypy_data\"\n\n\nsource\n\nConfig.get_value\n\n Config.get_value (key:str)\n\nGet sub-dictionary by nested key.\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nkey\nstr\nA nested key in dotted format, e.g. cassini.uvis.indexes\n\n\nReturns\nstr\nReturning empty string if not existing, because Path(’’) is False which is handy (e.g. in ctx mod.)\n\n\n\n\nconfig.list_indexes(\"mro.hirise\")\n\n['dtm', 'edr', 'rdr']\n\n\n\nindex = \"missions.cassini.iss.indexes.moon_summary\"\n\n\nconfig.get_value(index)['url']\n\n'https://pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2999/COISS_2999_moon_summary.lbl'\n\n\n\nsource\n\n\nConfig.set_value\n\n Config.set_value (nested_key:str, value:Union[float,str], save:bool=True)\n\nSet value in sub-dic using dotted key.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nnested_key\nstr\n\nA nested key in dotted format, e.g. cassini.uvis.ring_summary\n\n\nvalue\nUnion\n\nValue for the given key to be stored\n\n\nsave\nbool\nTrue\nSwitch to control writing out to disk\n\n\n\n\nsource\n\n\nConfig.save\n\n Config.save ()\n\nWrite the TOML doc to file.\n\nconfig.get_value(index)['url']\n\n'https://pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2999/COISS_2999_moon_summary.lbl'\n\n\n\nconfig.get_value(\"mro.ctx.datalevels\")['edr']['url']\n\n'https://pds-imaging.jpl.nasa.gov/data/mro/mars_reconnaissance_orbiter/ctx'\n\n\n\nsource\n\n\nConfig.ask_storage_root\n\n Config.ask_storage_root ()\n\n*Use input() to ask user for the storage_root path.\nThe path will be stored in the TOML-dict and saved into existing config file at Class.path, either default or as given during init. storage_root attribute is set as well.*\n\nconfig.missions\n\n['cassini', 'mro', 'lro', 'go']\n\n\n\nassert config.path.name == '.planetarypy_config.toml'\n\n\nconfig.list_instruments(\"cassini\")\n\n['iss', 'uvis']\n\n\n\nconfig.list_indexes(\"cassini.iss\")\n\n['index', 'inventory', 'moon_summary', 'ring_summary', 'saturn_summary']\n\n\n\nsource\n\n\nConfig.get_datalevels\n\n Config.get_datalevels (mission_instrument)\n\n*Return configured data levels available for an instrument.\nThis currently simply points to the indexes, assuming that everything that has an index is also its own datalevel. In case it ever is not, we can add more here.*\n\n\n\n\nDetails\n\n\n\n\nmission_instrument\nmission.instrument code, e.g. mro.hirise\n\n\n\n\nconfig.get_datalevels(\"mro.hirise\")\n\n['dtm', 'edr', 'rdr']\n\n\n\nfrom nbdev import nbdev_export\n\nnbdev_export()",
    "crumbs": [
      "api",
      "Config"
    ]
  },
  {
    "objectID": "api/pds.crism_index.html",
    "href": "api/pds.crism_index.html",
    "title": "CRISM PDS Index",
    "section": "",
    "text": "url = URL(\"https://pds-geosciences.wustl.edu/mro/mro-m-crism-5-rdr-mptargeted-v1/mrocr_4001/index/mtrdr0705_index.lbl\")\n\n\nsource\n\nMTRDRIndex\n\n MTRDRIndex (url)\n\n*Index manager class.\nThis class manages one index, identified by a dotted key, e.g. cassini.iss.ring_summary*\n\nindex = MTRDRIndex(url=url)\n\n\nindex.download()\n\n\n\n\n\n\n\nDownloaded /home/ayek72/mnt/slowdata/planetarypy/missions/mro/crism/indexes/mtrdr/mtrdr0705_index.lbl and /home/ayek72/mnt/slowdata/planetarypy/missions/mro/crism/indexes/mtrdr/mtrdr0705_index.tab\nDone.\n\n\n\nindex.convert_to_parquet()\n\nDone.\n\n\n\nindex.parquet\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nPRODUCT_ID\nPRODUCT_TYPE\nFILE_SPECIFICATION_NAME\nPARTICIPATING_INSTRUMENTS\nPRODUCT_CREATION_TIME\nSTART_TIME\nSTOP_TIME\nSPACECRAFT_CLOCK_START_COUNT\nSPACECRAFT_CLOCK_STOP_COUNT\n...\nWESTERNMOST_LONGITUDE\nEASTERNMOST_LONGITUDE\nLOWER_RIGHT_LATITUDE\nLOWER_RIGHT_LONGITUDE\nLOWER_LEFT_LATITUDE\nLOWER_LEFT_LONGITUDE\nUPPER_RIGHT_LATITUDE\nUPPER_RIGHT_LONGITUDE\nUPPER_LEFT_LATITUDE\nUPPER_LEFT_LONGITUDE\n\n\n\n\n0\nMROCR_4001\nFRT00005F0C_07_IF163J_MTR3\nMPTARGETED_RDR\nMTRDR/2007/2007_148/FRT00005F0C/FRT00005F0C_07...\n&lt;NA&gt;\n2015-06-12 09:00:20\n2007-05-28 17:30:38.605\n2007-05-28 17:32:22.339\n2/0864840658.00225\n2/0864840761.48344\n...\n52.8\n53.267\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n\n\n1\nMROCR_4001\nFRT00005F0C_07_WV163J_MTR3\nMPTARGETED_RDR\nMTRDR/2007/2007_148/FRT00005F0C/FRT00005F0C_07...\n&lt;NA&gt;\n2015-06-12 09:00:20\n2007-05-28 17:30:38.605\n2007-05-28 17:32:22.339\n2/0864840658.00225\n2/0864840761.48344\n...\n-999.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n\n\n2\nMROCR_4001\nFRT00005F0C_07_IN163J_MTR3\nMPTARGETED_RDR\nMTRDR/2007/2007_148/FRT00005F0C/FRT00005F0C_07...\n&lt;NA&gt;\n2015-06-12 09:04:09\n2007-05-28 17:30:38.605\n2007-05-28 17:32:22.339\n2/0864840658.00225\n2/0864840761.48344\n...\n52.8\n53.267\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n\n\n3\nMROCR_4001\nFRT00005F0C_07_DE163L_MTR1\nMAP_PROJECTED_DDR\nMTRDR/2007/2007_148/FRT00005F0C/FRT00005F0C_07...\n&lt;NA&gt;\n2015-06-12 09:04:03\n2007-05-28 17:30:38.605\n2007-05-28 17:32:22.339\n2/864840658:225\n2/864840761:48344\n...\n52.8\n53.267\n-62.71\n53.27\n-62.76\n52.84\n-62.59\n53.23\n-62.6\n52.8\n\n\n4\nMROCR_4001\nFRT00005F0C_07_SU163J_MTR3\nMPTARGETED_RDR\nMTRDR/2007/2007_148/FRT00005F0C/FRT00005F0C_07...\n&lt;NA&gt;\n2015-06-12 09:00:29\n2007-05-28 17:30:38.605\n2007-05-28 17:32:22.339\n2/0864840658.00225\n2/0864840761.48344\n...\n52.8\n53.267\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n553\nMROCR_4001\nFRT00005DAC_07_IF165J_MTR3\nMPTARGETED_RDR\nMTRDR/2007/2007_144/FRT00005DAC/FRT00005DAC_07...\n&lt;NA&gt;\n2015-06-12 07:20:09\n2007-05-24 07:16:57.926\n2007-05-24 07:18:57.660\n2/0864458237.21046\n2/0864458357.03629\n...\n156.527\n156.771\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n\n\n554\nMROCR_4001\nFRT00005DAC_07_DE165L_MTR1\nMAP_PROJECTED_DDR\nMTRDR/2007/2007_144/FRT00005DAC/FRT00005DAC_07...\n&lt;NA&gt;\n2015-06-12 07:22:51\n2007-05-24 07:16:57.926\n2007-05-24 07:18:57.660\n2/864458237:21046\n2/864458357:3629\n...\n156.527\n156.771\n9.67\n156.77\n9.66\n156.54\n9.88\n156.75\n9.84\n156.53\n\n\n555\nMROCR_4001\nFRT00005DAC_07_WV165J_MTR3\nMPTARGETED_RDR\nMTRDR/2007/2007_144/FRT00005DAC/FRT00005DAC_07...\n&lt;NA&gt;\n2015-06-12 07:20:09\n2007-05-24 07:16:57.926\n2007-05-24 07:18:57.660\n2/0864458237.21046\n2/0864458357.03629\n...\n-999.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n\n\n556\nMROCR_4001\nFRT00005DAC_07_IN165J_MTR3\nMPTARGETED_RDR\nMTRDR/2007/2007_144/FRT00005DAC/FRT00005DAC_07...\n&lt;NA&gt;\n2015-06-12 07:22:56\n2007-05-24 07:16:57.926\n2007-05-24 07:18:57.660\n2/0864458237.21046\n2/0864458357.03629\n...\n156.527\n156.771\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n\n\n557\nMROCR_4001\nFRT00005DAC_07_SU165J_MTR3\nMPTARGETED_RDR\nMTRDR/2007/2007_144/FRT00005DAC/FRT00005DAC_07...\n&lt;NA&gt;\n2015-06-12 07:20:17\n2007-05-24 07:16:57.926\n2007-05-24 07:18:57.660\n2/0864458237.21046\n2/0864458357.03629\n...\n156.527\n156.771\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n-99.999\n-999.999\n\n\n\n\n558 rows × 57 columns",
    "crumbs": [
      "api"
    ]
  },
  {
    "objectID": "api/cassini_iss.html",
    "href": "api/cassini_iss.html",
    "title": "Cassini ISS",
    "section": "",
    "text": "storage_root\n\nPath('/Users/maye/planetarypy_data/missions/cassini/iss')\n\n\n\nsource\n\nDataRetriever\n\n DataRetriever (pid)\n\nInitialize self. See help(type(self)) for accurate signature.\n\n\n\n\nDetails\n\n\n\n\npid\nPDS product_id, e.g. N1454725799\n\n\n\n\npid = \"N1454725799\"\n\n\ndm = DataRetriever(pid)\n\n\ndm.raw_fname\n\n'N1454725799_1.IMG'\n\n\n\ndm.raw_data_url\n\nURL('https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1.IMG')\n\n\n\ndm.raw_label_url\n\nURL('https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1.LBL')\n\n\n\ndm.raw_prefix_fmt_url\n\nURL('https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/label/prefix2.fmt')\n\n\n\ndm.raw_tlmtab_url\n\nURL('https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/label/tlmtab.fmt')\n\n\n\ndm.calib_data_url\n\nURL('https://opus.pds-rings.seti.org/holdings/calibrated/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1_CALIB.IMG')\n\n\n\nsource\n\n\nISS\n\n ISS (pid)\n\nInitialize self. See help(type(self)) for accurate signature.\n\nid = \"N1874681996\"\nid = \"N1454725799\"\n# id = \"N1878581142\"\n\n\nlist(storage_root.rglob(f\"{id}*\"))\n\n[Path('/Users/maye/planetarypy_data/missions/cassini/iss/N1454725799'),\n Path('/Users/maye/planetarypy_data/missions/cassini/iss/N1454725799/N1454725799_1_CALIB.IMG')]\n\n\n\niss = ISS(pid)\n\nFound 1 obsids.\n\n\n\niss.local_folder\n\nPath('/Users/maye/planetarypy_data/missions/cassini/iss/N1454725799')\n\n\n\niss.raw_data_url\n\nURL('https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1.IMG')\n\n\n\niss.raw_tlmtab_url\n\nURL('https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/label/tlmtab.fmt')\n\n\n\niss.download_calib()\n\nFile exists. Use `overwrite` to force re-download.\n\n\n\nconfig.storage_root\n\nPath('/Users/maye/planetarypy_data')\n\n\n\niss.dict.keys()\n\ndict_keys(['coiss_raw', 'coiss_calib', 'coiss_thumb', 'coiss_medium', 'coiss_full', 'coiss_documentation', 'rms_index', 'inventory', 'planet_geometry', 'moon_geometry', 'ring_geometry', 'browse_thumb', 'browse_small', 'browse_medium', 'browse_full'])\n\n\n\niss.local_calib_path\n\nPath('/Users/maye/planetarypy_data/missions/cassini/iss/N1454725799/N1454725799_1_CALIB.IMG')\n\n\n\niss.calib_data_url\n\nURL('https://opus.pds-rings.seti.org/holdings/calibrated/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1_CALIB.IMG')\n\n\n\ndm.calib_data_url\n\nURL('https://opus.pds-rings.seti.org/holdings/calibrated/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1_CALIB.IMG')\n\n\n\niss.raw_data_url\n\nURL('https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1.IMG')\n\n\n\niss.volume\n\n'COISS_2001'\n\n\n\niss.local_folder\n\nPath('/Users/maye/planetarypy_data/missions/cassini/iss/N1454725799')\n\n\n\ndef get_raw_data_path(product_id):\n    iss = ISS(product_id)\n    return iss.local_data_path\n\n\nid\n\n'N1454725799'\n\n\n\nlist(storage_root.glob(f\"**/{id}\"))\n\n[Path('/Users/maye/planetarypy_data/missions/cassini/iss/N1454725799')]\n\n\n\nstorage_root\n\nPath('/Users/maye/planetarypy_data/missions/cassini/iss')\n\n\n\n!ls {storage_root}\n\nN1454725799/ N1874681996/ indexes/\n\n\n\nget_raw_data_path(id)\n\nFound 1 obsids.\n\n\nPath('/Users/maye/planetarypy_data/missions/cassini/iss/N1454725799/N1454725799_1.IMG')\n\n\n\niss.dict\n\n{'coiss_raw': ['https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1.IMG',\n  'https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1.LBL',\n  'https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/label/prefix2.fmt',\n  'https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/label/tlmtab.fmt'],\n 'coiss_calib': ['https://opus.pds-rings.seti.org/holdings/calibrated/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1_CALIB.IMG',\n  'https://opus.pds-rings.seti.org/holdings/calibrated/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1_CALIB.LBL'],\n 'coiss_thumb': ['https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/extras/thumbnail/1454725799_1455008789/N1454725799_1.IMG.jpeg_small'],\n 'coiss_medium': ['https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/extras/browse/1454725799_1455008789/N1454725799_1.IMG.jpeg'],\n 'coiss_full': ['https://opus.pds-rings.seti.org/holdings/volumes/COISS_2xxx/COISS_2001/extras/full/1454725799_1455008789/N1454725799_1.IMG.png'],\n 'coiss_documentation': ['https://opus.pds-rings.seti.org/holdings/documents/COISS_0xxx/VICAR-File-Format.pdf',\n  'https://opus.pds-rings.seti.org/holdings/documents/COISS_0xxx/ISS-Users-Guide.pdf',\n  'https://opus.pds-rings.seti.org/holdings/documents/COISS_0xxx/ISS-Users-Guide.docx',\n  'https://opus.pds-rings.seti.org/holdings/documents/COISS_0xxx/Data-Product-SIS.txt',\n  'https://opus.pds-rings.seti.org/holdings/documents/COISS_0xxx/Data-Product-SIS.pdf',\n  'https://opus.pds-rings.seti.org/holdings/documents/COISS_0xxx/Cassini-ISS-Final-Report.pdf',\n  'https://opus.pds-rings.seti.org/holdings/documents/COISS_0xxx/Calibration-Theoretical-Basis.pdf',\n  'https://opus.pds-rings.seti.org/holdings/documents/COISS_0xxx/Calibration-Plan.pdf',\n  'https://opus.pds-rings.seti.org/holdings/documents/COISS_0xxx/CISSCAL-Users-Guide.pdf',\n  'https://opus.pds-rings.seti.org/holdings/documents/COISS_0xxx/Archive-SIS.txt',\n  'https://opus.pds-rings.seti.org/holdings/documents/COISS_0xxx/Archive-SIS.pdf'],\n 'rms_index': ['https://opus.pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2001/COISS_2001_index.tab',\n  'https://opus.pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2001/COISS_2001_index.lbl'],\n 'inventory': ['https://opus.pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2001/COISS_2001_inventory.csv',\n  'https://opus.pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2001/COISS_2001_inventory.lbl'],\n 'planet_geometry': ['https://opus.pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2001/COISS_2001_saturn_summary.tab',\n  'https://opus.pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2001/COISS_2001_saturn_summary.lbl'],\n 'moon_geometry': ['https://opus.pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2001/COISS_2001_moon_summary.tab',\n  'https://opus.pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2001/COISS_2001_moon_summary.lbl'],\n 'ring_geometry': ['https://opus.pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2001/COISS_2001_ring_summary.tab',\n  'https://opus.pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2001/COISS_2001_ring_summary.lbl'],\n 'browse_thumb': ['https://opus.pds-rings.seti.org/holdings/previews/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1_thumb.jpg'],\n 'browse_small': ['https://opus.pds-rings.seti.org/holdings/previews/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1_small.jpg'],\n 'browse_medium': ['https://opus.pds-rings.seti.org/holdings/previews/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1_med.jpg'],\n 'browse_full': ['https://opus.pds-rings.seti.org/holdings/previews/COISS_2xxx/COISS_2001/data/1454725799_1455008789/N1454725799_1_full.png']}",
    "crumbs": [
      "api",
      "Cassini ISS"
    ]
  },
  {
    "objectID": "api/hirise.html",
    "href": "api/hirise.html",
    "title": "HiRISE",
    "section": "",
    "text": "source\n\nOBSID\n\n OBSID (obsid:str)\n\n*Manage HiRISE observation ids.\nFor example PSP_003092_0985. phase is set to PSP for orbits &lt; 11000, no setting required.*\n\n\n\n\nType\nDetails\n\n\n\n\nobsid\nstr\ne.g. PSP_003092_0985\n\n\n\n\nobsid = OBSID(\"PSP_003092_0985\")\nobsid\n\nPSP_003092_0985\n\n\n\nassert obsid.orbit == \"003092\"\n\n\nassert obsid.targetcode == \"0985\"\n\n\nassert obsid.phase == \"PSP\"\n\n\nassert obsid.upper_orbit_folder == \"ORB_003000_003099\"\n\n\nassert obsid.storage_path_stem == \"PSP/ORB_003000_003099/PSP_003092_0985\"\n\n\nsource\n\n\nProductPathfinder\n\n ProductPathfinder (initstr:str, check_url:bool=True)\n\n*Determine paths and URLs for HiRISE RDR products (also EXTRAS.)\nWe use the PDS definition of PRODUCT_ID here, e.g. PSP_003092_0985_RED.\nAttributes jp2_path and label_path get you the official RDR mosaic product, with kind steering if you get the COLOR or the RED product. All other properties go to the RDR/EXTRAS folder. The “PDS” part of the path is handled in the OBSID class.*\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ninitstr\nstr\n\nPRODUCT_ID string, e.g. PSP_003092_0985_RED\n\n\ncheck_url\nbool\nTrue\nfor performance, the user might not want the url check\n\n\n\n\npid = \"ESP_039983_1390_RED\"\n\n\nppf = ProductPathfinder(pid)\n\n\nppf.storage_stem\n\n'ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED'\n\n\n\nppf.local_label_path.exists()\n\nFalse\n\n\n\nppf.edr_storage_stem\n\nPath('EDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED')\n\n\n\nppf.download_label()\n\n\n\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/mro/hirise/ESP_039983_1390/ESP_039983_1390_RED.LBL')\n\n\n\nppf.go_to_homepage()\n\n4;1HPS connection to uahirise.orgetting https://uahirise.org/ESP_039983_1390                                    \n\n\n\nppf.homepage\n\n'https://uahirise.org/ESP_039983_1390'\n\n\n\nassert isinstance(ppf.obsid, OBSID)\n\n\nassert ppf.kind == \"RED\"\n\n\nassert ppf.label_fname == \"ESP_039983_1390_RED.LBL\"\n\n\nassert ppf.label_path == Path('RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.LBL')\n\n\n\nPaths and URLS\nEach xxx_path attribute is also available as xxx_url, and accessing the _url parameter immediately checks for its existence on the server.\n\n# little helper to show attributes inside ProductPathfinder object...\ndef _isprop(v):\n    return isinstance(v, property)\n\n\ndef _get_properties(classname, substring):\n    names = [name for (name, value) in inspect.getmembers(classname, _isprop) if name.endswith(substring)]\n    return names\n\n\n# Here I'm checking that all _url versions work, each access checks for existence:\nfor prop in _get_properties(ProductPathfinder, \"_path\"):\n    if prop.startswith(\"local_label\"):\n        continue\n    print(prop)\n    print(getattr(ppf, prop))\n    urlattr = prop.replace(\"_path\", \"_url\")\n    print(urlattr)\n    url = getattr(ppf, urlattr)\n    print(url)\n\nabrowse_path\nEXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.abrowse.jpg\nabrowse_url\nhttps://hirise-pds.lpl.arizona.edu/PDS/EXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.abrowse.jpg\nbrowse_path\nEXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.browse.jpg\nbrowse_url\nhttps://hirise-pds.lpl.arizona.edu/PDS/EXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.browse.jpg\njp2_path\nRDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.JP2\njp2_url\nhttps://hirise-pds.lpl.arizona.edu/PDS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.JP2\nlabel_path\nRDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.LBL\nlabel_url\nhttps://hirise-pds.lpl.arizona.edu/PDS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.LBL\nnomap_browse_path\nEXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.NOMAP.browse.jpg\nnomap_browse_url\nhttps://hirise-pds.lpl.arizona.edu/PDS/EXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.NOMAP.browse.jpg\nnomap_jp2_path\nEXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.NOMAP.JP2\nnomap_jp2_url\nhttps://hirise-pds.lpl.arizona.edu/PDS/EXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.NOMAP.JP2\nnomap_thumbnail_path\nEXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.NOMAP.thumb.jpg\nnomap_thumbnail_url\nhttps://hirise-pds.lpl.arizona.edu/PDS/EXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.NOMAP.thumb.jpg\nquicklook_path\nEXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.QLOOK.JP2\nquicklook_url\nhttps://hirise-pds.lpl.arizona.edu/PDS/EXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.QLOOK.JP2\nthumbnail_path\nEXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.thumb.jpg\nthumbnail_url\nhttps://hirise-pds.lpl.arizona.edu/PDS/EXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.thumb.jpg\n\n\n\nppf.storage_stem\n\n'ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED'\n\n\n\nppf.nomap_browse_url\n\nURL('https://hirise-pds.lpl.arizona.edu/PDS/EXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.NOMAP.browse.jpg')\n\n\n\nppf.abrowse_url\n\nURL('https://hirise-pds.lpl.arizona.edu/PDS/EXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.abrowse.jpg')\n\n\n\nppf.nomap_jp2_path\n\n'EXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED.NOMAP.JP2'\n\n\n\nsource\n\n\nCOLOR_PRODUCT\n\n COLOR_PRODUCT (obsid)\n\nInitialize self. See help(type(self)) for accurate signature.\n\nsource\n\n\nRGB_NOMAP\n\n RGB_NOMAP (obsid)\n\nInitialize self. See help(type(self)) for accurate signature.\n\nobsid = \"ESP_039983_1390\"\n\n\nrgb = RGB_NOMAP(obsid)\n\n\nrgb.obsid\n\n'ESP_039983_1390'\n\n\n\nrgb.product_id\n\n'ESP_039983_1390_RGB'\n\n\n\nrgb.meta.head()\n\nvolume_id                                                         MROHR_0001\nfile_name_specification    RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_...\ninstrument_host_id                                                       MRO\ninstrument_id                                                         HIRISE\nobservation_id                                               ESP_039983_1390\nName: 75508, dtype: object\n\n\n\nrgb.local_path\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/mro/hirise/ESP_039983_1390/ESP_039983_1390_RGB.NOMAP.JP2')\n\n\n\nrgb.url\n\nURL('https://hirise-pds.lpl.arizona.edu/PDS/EXTRAS/RDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RGB.NOMAP.JP2')\n\n\n\nrgb.download(overwrite=False)\n\nFile exists. Use `overwrite=True` to download fresh.\n\n\n\nrgb.read()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray (band: 3, y: 20000, x: 2024)&gt;\ndask.array&lt;open_rasterio-3e88685e58afe3daaabd13b6ff29c609&lt;this-array&gt;, shape=(3, 20000, 2024), dtype=uint16, chunksize=(1, 2024, 2024), chunktype=numpy.ndarray&gt;\nCoordinates:\n  * band         (band) int64 1 2 3\n  * x            (x) float64 0.5 1.5 2.5 3.5 ... 2.022e+03 2.022e+03 2.024e+03\n  * y            (y) float64 0.5 1.5 2.5 3.5 4.5 ... 2e+04 2e+04 2e+04 2e+04\n    spatial_ref  int64 0\nAttributes:\n    scale_factor:  1.0\n    add_offset:    0.0xarray.DataArrayband: 3y: 20000x: 2024dask.array&lt;chunksize=(1, 2024, 2024), meta=np.ndarray&gt;\n\n\n\n\n\n\n\n\n\n\n\nArray\nChunk\n\n\n\n\nBytes\n231.63 MiB\n7.81 MiB\n\n\nShape\n(3, 20000, 2024)\n(1, 2024, 2024)\n\n\nDask graph\n30 chunks in 2 graph layers\n\n\nData type\nuint16 numpy.ndarray\n\n\n\n\n                                               2024 20000 3\n\n\n\n\nCoordinates: (4)band(band)int641 2 3array([1, 2, 3])x(x)float640.5 1.5 2.5 ... 2.022e+03 2.024e+03array([5.0000e-01, 1.5000e+00, 2.5000e+00, ..., 2.0215e+03, 2.0225e+03,\n       2.0235e+03])y(y)float640.5 1.5 2.5 ... 2e+04 2e+04 2e+04array([5.00000e-01, 1.50000e+00, 2.50000e+00, ..., 1.99975e+04, 1.99985e+04,\n       1.99995e+04])spatial_ref()int640GeoTransform :0.0 1.0 0.0 0.0 0.0 1.0array(0)Indexes: (3)bandPandasIndexPandasIndex(Int64Index([1, 2, 3], dtype='int64', name='band'))xPandasIndexPandasIndex(Float64Index([   0.5,    1.5,    2.5,    3.5,    4.5,    5.5,    6.5,    7.5,\n                 8.5,    9.5,\n              ...\n              2014.5, 2015.5, 2016.5, 2017.5, 2018.5, 2019.5, 2020.5, 2021.5,\n              2022.5, 2023.5],\n             dtype='float64', name='x', length=2024))yPandasIndexPandasIndex(Float64Index([    0.5,     1.5,     2.5,     3.5,     4.5,     5.5,     6.5,\n                  7.5,     8.5,     9.5,\n              ...\n              19990.5, 19991.5, 19992.5, 19993.5, 19994.5, 19995.5, 19996.5,\n              19997.5, 19998.5, 19999.5],\n             dtype='float64', name='y', length=20000))Attributes: (2)scale_factor :1.0add_offset :0.0\n\n\n\n\nrgb.show(xslice=slice(1000, 2000), yslice=slice(16000, 18000))\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\nsource\n\n\nRGB_NOMAPCollection\n\n RGB_NOMAPCollection (obsids)\n\nClass to deal with a set of RGB_NOMAP products.\n/home/runner/micromamba/envs/my-env/lib/python3.12/site-packages/fastcore/docscrape.py:225: UserWarning: Unknown section Example\n  else: warn(msg)\n\nsource\n\n\nSOURCE_PRODUCT\n\n SOURCE_PRODUCT (spid, saveroot=None, check_url=True)\n\nManage SOURCE_PRODUCT id.\n\nobsid = 'ESP_027021_1525_RED'\n\n\nfor i in range(10):\n    for ch in [0, 1]:\n        spid = f\"{obsid}{i}_{ch}\"\n        try:\n            SOURCE_PRODUCT(spid).download()\n        except ConnectionError:\n            pass\n\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\nFile exists. Use `overwrite=True` to download fresh.\n\n\n/tmp/ipykernel_1172729/2293453911.py:88: UserWarning: https://hirise-pds.lpl.arizona.edu/PDS/EDR/ESP/ORB_027000_027099/ESP_027021_1525/ESP_027021_1525_RED9_0.IMG does not exist on the server.\n  warnings.warn(f\"{u} does not exist on the server.\")\n/tmp/ipykernel_1172729/2293453911.py:88: UserWarning: https://hirise-pds.lpl.arizona.edu/PDS/EDR/ESP/ORB_027000_027099/ESP_027021_1525/ESP_027021_1525_RED9_1.IMG does not exist on the server.\n  warnings.warn(f\"{u} does not exist on the server.\")\n\n\n\nsp = SOURCE_PRODUCT(\"ESP_027021_1525_RED0_0\")\n\n\nsp.local_path\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/mro/hirise/ESP_027021_1525/ESP_027021_1525_RED0_0.IMG')\n\n\n\nsp.download()\n\nFile exists. Use `overwrite=True` to download fresh.\n\n\n\nsp.stitched_cube_path\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/mro/hirise/ESP_027021_1525/ESP_027021_1525_RED0.cub')\n\n\n\nsp.url\n\nURL('https://hirise-pds.lpl.arizona.edu/PDS/EDR/ESP/ORB_027000_027099/ESP_027021_1525/ESP_027021_1525_RED0_0.IMG')\n\n\n\nsp.remote_path\n\nPath('EDR/ESP/ORB_027000_027099/ESP_027021_1525/ESP_027021_1525_RED0_0.IMG')\n\n\n\nsp.local_path\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/mro/hirise/ESP_027021_1525/ESP_027021_1525_RED0_0.IMG')\n\n\n\nsp.channel\n\n'0'\n\n\n\nsp.ccd\n\n'RED0'\n\n\n\nsp.color\n\n'RED'\n\n\n\nsp.ccdno\n\n'0'\n\n\n\nsp.spid\n\n'ESP_027021_1525_RED0_0'\n\n\n\nsp\n\nSOURCE_PRODUCT: ESP_027021_1525_RED0_0\n\n\n\nsp.fname\n\n'ESP_027021_1525_RED0_0.IMG'\n\n\n\nsp.local_cube\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/mro/hirise/ESP_027021_1525/ESP_027021_1525_RED0_0.cub')\n\n\n\nsp.stitched_cube_name\n\n'ESP_027021_1525_RED0.cub'\n\n\n\nsp.stitched_cube_path.exists()\n\nTrue\n\n\n\nsource\n\n\nRED_PRODUCT\n\n RED_PRODUCT (obsid, ccdno, channel, **kwargs)\n\nThis exists to support creating a RED_PRODUCT_ID from parts of a SOURCE_PRODUCT id.\n\nRED_PRODUCT(\"ESP_027021_1525\", 4, 0).channel\n\n'0'\n\n\n\nrpid = RED_PRODUCT(\"ESP_039983_1390\", \"4\", \"0\")\nrpid.spid\n\n'ESP_039983_1390_RED4_0'\n\n\n\nrpid.fname\n\n'ESP_039983_1390_RED4_0.IMG'\n\n\n\nrpid.url\n\nURL('https://hirise-pds.lpl.arizona.edu/PDS/EDR/ESP/ORB_039900_039999/ESP_039983_1390/ESP_039983_1390_RED4_0.IMG')\n\n\n\nrpid.download()\n\nFile exists. Use `overwrite=True` to download fresh.\n\n\n\nsource\n\n\nBG_PRODUCT\n\n BG_PRODUCT (obsid, ccdno, channel)\n\nManage SOURCE_PRODUCT id.\n\nsource\n\n\nIR_PRODUCT\n\n IR_PRODUCT (obsid, ccdno, channel)\n\nManage SOURCE_PRODUCT id.\n\nsource\n\n\nRedMosaic\n\n RedMosaic (obsid)\n\nInitialize self. See help(type(self)) for accurate signature.\n\nobsid = \"ESP_027021_1525\"\n\n\nred = RedMosaic(obsid)\n\n\n!ls {red.local_path.parent}\n\nB01_009958_1524_XI_27S347W.cal.cub   ESP_027021_1525_RED4_1.IMG\nB01_009958_1524_XI_27S347W.lev2.cub  ESP_027021_1525_RED4.cub\ncube2.lis                            ESP_027021_1525_RED4.map.cub\ncube.lis                             ESP_027021_1525_RED4.norm.cub\nESP_027021_1525_RED0_0.cal.cub       ESP_027021_1525_RED5_0.cal.cub\nESP_027021_1525_RED0_0.cub           ESP_027021_1525_RED5_0.cub\nESP_027021_1525_RED0_0.hical.log     ESP_027021_1525_RED5_0.hical.log\nESP_027021_1525_RED0_0.IMG           ESP_027021_1525_RED5_0.IMG\nESP_027021_1525_RED0_1.cal.cub       ESP_027021_1525_RED5_1.cal.cub\nESP_027021_1525_RED0_1.cub           ESP_027021_1525_RED5_1.cub\nESP_027021_1525_RED0_1.hical.log     ESP_027021_1525_RED5_1.hical.log\nESP_027021_1525_RED0_1.IMG           ESP_027021_1525_RED5_1.IMG\nESP_027021_1525_RED0.cub             ESP_027021_1525_RED5.cub\nESP_027021_1525_RED0.map.cub         ESP_027021_1525_RED5.map.cub\nESP_027021_1525_RED0.norm.cub        ESP_027021_1525_RED5.map.cub.aux.xml\nESP_027021_1525_RED1_0.cal.cub       ESP_027021_1525_RED5.norm.cub\nESP_027021_1525_RED1_0.cub           ESP_027021_1525_RED6_0.cal.cub\nESP_027021_1525_RED1_0.hical.log     ESP_027021_1525_RED6_0.cub\nESP_027021_1525_RED1_0.IMG           ESP_027021_1525_RED6_0.hical.log\nESP_027021_1525_RED1_1.cal.cub       ESP_027021_1525_RED6_0.IMG\nESP_027021_1525_RED1_1.cub           ESP_027021_1525_RED6_1.cal.cub\nESP_027021_1525_RED1_1.hical.log     ESP_027021_1525_RED6_1.cub\nESP_027021_1525_RED1_1.IMG           ESP_027021_1525_RED6_1.hical.log\nESP_027021_1525_RED1.cub             ESP_027021_1525_RED6_1.IMG\nESP_027021_1525_RED1.map.cub         ESP_027021_1525_RED6.cub\nESP_027021_1525_RED1.norm.cub        ESP_027021_1525_RED6.map.cub\nESP_027021_1525_RED2_0.cal.cub       ESP_027021_1525_RED6.norm.cub\nESP_027021_1525_RED2_0.cub           ESP_027021_1525_RED7_0.cal.cub\nESP_027021_1525_RED2_0.hical.log     ESP_027021_1525_RED7_0.cub\nESP_027021_1525_RED2_0.IMG           ESP_027021_1525_RED7_0.hical.log\nESP_027021_1525_RED2_1.cal.cub       ESP_027021_1525_RED7_0.IMG\nESP_027021_1525_RED2_1.cub           ESP_027021_1525_RED7_1.cal.cub\nESP_027021_1525_RED2_1.hical.log     ESP_027021_1525_RED7_1.cub\nESP_027021_1525_RED2_1.IMG           ESP_027021_1525_RED7_1.hical.log\nESP_027021_1525_RED2.cub             ESP_027021_1525_RED7_1.IMG\nESP_027021_1525_RED2.map.cub         ESP_027021_1525_RED7.cub\nESP_027021_1525_RED2.norm.cub        ESP_027021_1525_RED7.map.cub\nESP_027021_1525_RED3_0.cal.cub       ESP_027021_1525_RED7.norm.cub\nESP_027021_1525_RED3_0.cub           ESP_027021_1525_RED8_0.cal.cub\nESP_027021_1525_RED3_0.hical.log     ESP_027021_1525_RED8_0.cub\nESP_027021_1525_RED3_0.IMG           ESP_027021_1525_RED8_0.hical.log\nESP_027021_1525_RED3_1.cal.cub       ESP_027021_1525_RED8_0.IMG\nESP_027021_1525_RED3_1.cub           ESP_027021_1525_RED8_1.cal.cub\nESP_027021_1525_RED3_1.hical.log     ESP_027021_1525_RED8_1.cub\nESP_027021_1525_RED3_1.IMG           ESP_027021_1525_RED8_1.hical.log\nESP_027021_1525_RED3.cub             ESP_027021_1525_RED8_1.IMG\nESP_027021_1525_RED3.map.cub         ESP_027021_1525_RED8.cub\nESP_027021_1525_RED3.norm.cub        ESP_027021_1525_RED8.map.cub\nESP_027021_1525_RED4_0.cal.cub       ESP_027021_1525_RED8.norm.cub\nESP_027021_1525_RED4_0.cub           ESP_027021_1525_RED.LBL\nESP_027021_1525_RED4_0.hical.log     normalized.lis\nESP_027021_1525_RED4_0.IMG           point.txt\nESP_027021_1525_RED4_1.cal.cub       print.prt\nESP_027021_1525_RED4_1.cub           set_overlaps.txt\nESP_027021_1525_RED4_1.hical.log",
    "crumbs": [
      "api",
      "HiRISE"
    ]
  },
  {
    "objectID": "api/pds.opusapi.html",
    "href": "api/pds.opusapi.html",
    "title": "OPUSAPI class",
    "section": "",
    "text": "source\n\nOPUS\n\n OPUS (silent=False)\n\nManage OPUS API requests.\n\nsource\n\n\nOPUSObsID\n\n OPUSObsID (obsid_data)\n\nManage observation IDs from OPUS responses.\n\nsource\n\n\nOPUSImageURL\n\n OPUSImageURL (jsonlist)\n\nManage URLS from the OPUS response.\n\nopus = OPUS()\n\n\nopus.query_image_id(\"FUV2003_363_00_22\")",
    "crumbs": [
      "api",
      "OPUSAPI class"
    ]
  },
  {
    "objectID": "api/cassini_uvis.html",
    "href": "api/cassini_uvis.html",
    "title": "UVIS",
    "section": "",
    "text": "get_index(\"cassini.uvis\", \"index\")\n\n\n\n\n\n\n\n\n\nFILE_NAME\nOBSERVATION_TYPE\nSTART_TIME\nSTOP_TIME\nTARGET_NAME\nDATA_SET_ID\nSPACECRAFT_CLOCK_START_COUNT\nSPACECRAFT_CLOCK_STOP_COUNT\nINTEGRATION_DURATION\nCOMPRESSION_TYPE\n...\nSUB_SOLAR_LONGITUDE\nSUB_SPACECRAFT_LATITUDE\nSUB_SPACECRAFT_LONGITUDE\nPHASE_ANGLE\nEMISSION_ANGLE\nSOLAR_INCIDENCE_ANGLE\nCENTRAL_BODY_DISTANCE\nDWELL_TIME\nH_LEVEL\nD_LEVEL\n\n\n\n\n0\n/COUVIS_0001/DATA/D1999_007/EUV1999_007_17_05.LBL\nUSTARE\n1999-01-07 17:05:01.949\n1999-01-07 17:08:37.949\n&lt;NA&gt;\nCO-J-UVIS-2-SPEC-V1.2\n1/1294420183.000\nUNK\n4.0\nNONE\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n-999\n&lt;NA&gt;\n&lt;NA&gt;\n\n\n1\n/COUVIS_0001/DATA/D1999_007/EUV1999_007_17_08.LBL\nUSTARE\n1999-01-07 17:08:51.947\n1999-01-07 17:12:27.947\n&lt;NA&gt;\nCO-J-UVIS-2-SPEC-V1.2\n1/1294420413.000\nUNK\n4.0\nNONE\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n-999\n&lt;NA&gt;\n&lt;NA&gt;\n\n\n2\n/COUVIS_0001/DATA/D1999_007/FUV1999_007_16_57.LBL\nUSTARE\n1999-01-07 16:57:21.952\n1999-01-07 17:00:57.952\n&lt;NA&gt;\nCO-J-UVIS-2-SPEC-V1.2\n1/1294419723.000\nUNK\n4.0\nNONE\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n-999\n&lt;NA&gt;\n&lt;NA&gt;\n\n\n3\n/COUVIS_0001/DATA/D1999_007/FUV1999_007_17_01.LBL\nUSTARE\n1999-01-07 17:01:11.950\n1999-01-07 17:04:47.950\n&lt;NA&gt;\nCO-J-UVIS-2-SPEC-V1.2\n1/1294419953.000\nUNK\n4.0\nNONE\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n-999\n&lt;NA&gt;\n&lt;NA&gt;\n\n\n4\n/COUVIS_0001/DATA/D1999_007/HDAC1999_007_16_31...\nUHDAC\n1999-01-07 16:31:07.962\n1999-01-07 16:31:11.962\n&lt;NA&gt;\nCO-J-UVIS-2-SSB-V1.2\n1/1294418149.000\nUNK\n-999.0\nNONE\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n1\n(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n203240\n/COUVIS_0060/DATA/D2017_258/FUV2017_258_04_31.LBL\n&lt;NA&gt;\n2017-09-15 04:31:53.005\n2017-09-15 09:04:56.755\nSOLAR WIND\nCO-S-UVIS-2-CUBE-V1.4\n1/1884145299.160\nUNK\n8191.875\nSQRT_9\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n-999\n&lt;NA&gt;\n&lt;NA&gt;\n\n\n203241\n/COUVIS_0060/DATA/D2017_258/FUV2017_258_07_00.LBL\n&lt;NA&gt;\n2017-09-15 07:00:27.697\n2017-09-15 07:13:40.447\nSOLAR WIND\nCO-S-UVIS-2-SPEC-V1.4\n1/1884154214.096\nUNK\n2.625\nSQRT_9\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n-999\n&lt;NA&gt;\n&lt;NA&gt;\n\n\n203242\n/COUVIS_0060/DATA/D2017_258/FUV2017_258_07_15.LBL\n&lt;NA&gt;\n2017-09-15 07:15:04.442\n2017-09-15 10:31:51.692\nSOLAR WIND\nCO-S-UVIS-2-SPEC-V1.4\n1/1884155091.032\nUNK\n2.625\nSQRT_9\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n-999\n&lt;NA&gt;\n&lt;NA&gt;\n\n\n203243\n/COUVIS_0060/DATA/D2017_258/HDAC2017_258_02_14...\n&lt;NA&gt;\n2017-09-15 02:14:02.433\n2017-09-15 02:14:06.433\nSOLAR WIND\nCO-S-UVIS-2-SSB-V1.4\n1/1884137029.000\nUNK\n-999.0\nNONE\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n1\n(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n\n\n203244\n/COUVIS_0060/DATA/D2017_258/HDAC2017_258_02_15...\n&lt;NA&gt;\n2017-09-15 02:15:25.058\n2017-09-15 02:17:33.058\nSOLAR WIND\nCO-S-UVIS-2-SSB-V1.4\n1/1884137111.160\nUNK\n-999.0\nNONE\n...\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999\n-999.0\n32\n(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)\n\n\n\n\n203245 rows × 28 columns\n\n\n\n\n\nsource\n\nDataManager\n\n DataManager (pid:str, skip_download:bool=False)\n\nInitialize self. See help(type(self)) for accurate signature.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npid\nstr\n\nProduct ID. If longer than PDS_ID, will be cut in attribute pds_id\n\n\nskip_download\nbool\nFalse\nskip trying to download\n\n\n\n\npid = \"EUV2002_198_03_26_54_UVIS_C33ST_SPICARAST002_PRIME\"\n\n\ndm = DataManager(pid)\n\n\ndm.raw_label_url\n\nURL('https://opus.pds-rings.seti.org/holdings/volumes/COUVIS_0xxx/COUVIS_0004/DATA/D2002_198/EUV2002_198_03_26.LBL')\n\n\n\nassert dm.pid == pid\n\nPDS data is only stored under the first 17 characters of any UVIS-internal product id.\n\nassert dm.pds_id == pid[:17]\n\nThe originally used product ID pid will be stored under original_pid.txt in the data folder:\n\ndm.original_pid_file\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/cassini/uvis/EUV2002_198_03_26/original_pid.txt')\n\n\nThe OPUS result file will be stored as a TOML file:\n\ndm.results_file\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/cassini/uvis/EUV2002_198_03_26/urls.toml')\n\n\n\ndm.download(overwrite=False)\n\nLocal files exists. Use `overwrite=True` to download fresh.\n\n\n\ndm.raw_data_path\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/cassini/uvis/EUV2002_198_03_26/EUV2002_198_03_26.DAT')\n\n\n\ndm.calib_corr_path\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/cassini/uvis/EUV2002_198_03_26/EUV2002_198_03_26_CAL_3.DAT')\n\n\n\nsource\n\n\nget_label_path\n\n get_label_path (pid)\n\n\nsource\n\n\nget_data_path\n\n get_data_path (pid, skip_download=False)\n\n\nget_data_path(pid)\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/cassini/uvis/EUV2002_198_03_26/EUV2002_198_03_26.DAT')\n\n\n\nget_label_path(pid)\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/cassini/uvis/EUV2002_198_03_26/EUV2002_198_03_26.LBL')\n\n\n\nsource\n\n\nget_user_guide\n\n get_user_guide ()\n\n\nget_user_guide()\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/cassini/uvis/uvis_user_guide.pdf')",
    "crumbs": [
      "api",
      "UVIS"
    ]
  },
  {
    "objectID": "api/pds.lroc_index.html",
    "href": "api/pds.lroc_index.html",
    "title": "LROC Index",
    "section": "",
    "text": "EDR vs RDR etc.\nI cannot distinguish between different data levels for dynamic index URLs yet, as is required for LROC, so for now I only implement the EDR index, pretending it’s the only one!\n\nsource\n\nLROCIndex\n\n LROCIndex ()\n\nInitialize self. See help(type(self)) for accurate signature.\n\nlroc = LROCIndex()\n\n\nlroc.latest_release_folder\n\n'LROLRC_0056A/'\n\n\n\nlroc.latest_release_number\n\n'0056A'\n\n\n\nlroc.latest_index_label_url\n\nURL('https://pds.lroc.asu.edu/data/LRO-L-LROC-2-EDR-V1.0/LROLRC_0056A/INDEX/CUMINDEX.LBL')"
  },
  {
    "objectID": "api/pds.utils.html",
    "href": "api/pds.utils.html",
    "title": "PDS Utils",
    "section": "",
    "text": "source\n\nIndexLabel\n\n IndexLabel (labelpath:Union[str,pathlib.Path])\n\nSupport working with label files of PDS Index tables.\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nlabelpath\nUnion\nPath to the labelfile for a PDS Indexfile.The actual table should reside in the same folder to be automatically parsedwhen calling the read_index_data method.\n\n\n\n\nsource\n\n\nindex_to_df\n\n index_to_df (indexpath:Union[str,pathlib.Path],\n              label:__main__.IndexLabel, convert_times=True)\n\n*The main reader function for PDS Indexfiles.\nIn conjunction with an IndexLabel object that figures out the column widths, this reader should work for all PDS TAB files.*\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nindexpath\nUnion\n\nPath to the index TAB file\n\n\nlabel\nIndexLabel\n\nLabel object that has both the column names and the columns widths as attributes‘colnames’ and ‘colspecs’\n\n\nconvert_times\nbool\nTrue\nSwitch to control if to convert columns with “TIME” in name (unless COUNT is as well in name) to datetime\n\n\n\n\nsource\n\n\nPVLColumn\n\n PVLColumn (pvlobj)\n\nManages just one of the columns in a table that is described via PVL.\n\nsource\n\n\ndecode_line\n\n decode_line (linedata:str, labelpath:Union[str,pathlib.Path])\n\nDecode one line of tabbed data with the appropriate label file.\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nlinedata\nstr\nOne line of a .tab data file\n\n\nlabelpath\nUnion\nPath to the appropriate label that describes the data.\n\n\n\n\nsource\n\n\nfind_mixed_type_cols\n\n find_mixed_type_cols (df:pandas.core.frame.DataFrame, fix:bool=True)\n\n*For a given dataframe, find the columns that are of mixed type.\nTool to help with the performance warning when trying to save a pandas DataFrame as a HDF. When a column changes datatype somewhere, pickling occurs, slowing down the reading process of the HDF file.*\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf\nDataFrame\n\nDataframe to be searched for mixed data-types\n\n\nfix\nbool\nTrue\nSwitch to control if NaN values in these problem columns should be replaced by the string ‘UNKNOWN’\n\n\nReturns\nlist\n\nList of column names that have data type changes within themselves.\n\n\n\n\nsource\n\n\nfix_hirise_edrcumindex\n\n fix_hirise_edrcumindex (infname:Union[str,pathlib.Path],\n                         outfname:Union[str,pathlib.Path])\n\n*Fix HiRISE EDRCUMINDEX.\nThe HiRISE EDRCUMINDEX has some broken lines where the SCAN_EXPOSURE_DURATION is of format F10.4 instead of the defined F9.4. This function simply replaces those incidences with one less decimal fraction, so 20000.0000 becomes 20000.000.*\n\n\n\n\nType\nDetails\n\n\n\n\ninfname\nUnion\nPath to broken EDRCUMINDEX.TAB\n\n\noutfname\nUnion\nPath where to store the fixed TAB file",
    "crumbs": [
      "api",
      "PDS Utils"
    ]
  },
  {
    "objectID": "api/utils.html",
    "href": "api/utils.html",
    "title": "Utils",
    "section": "",
    "text": "First, we define the different format strings these utils convert from and to.\nAn identifier with xxx_dt_format_xxx in its name signifies a full datetime format as compared to dates only.\n\n\nWhat we call NASA data, is the often used YYYY-JJJ based format in the Planetary Data System identifying dates via the running number of the day in the year, e.g. “2010-240”.\n\nsource\n\n\n\n\n nasa_time_to_datetime (inputstr)\n\nUser function to convert all kinds of NASA PDS datestrings with day_of_year into datetimes.\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ninputstr\n\ninputstr of format YYYY-jjj, YYYY-jjjTHH:MM:SS or YYYY-jjjTHH:MM:SS.ffffff\n\n\nReturns\ndatetime\n\n\n\n\nExample dates and times to test:\n\nnasa_date = \"2010-110\"\niso_date = \"2010-4-20\"\nnasa_datetime = \"2010-110T10:12:14\"\nnasa_datetime_with_ms = nasa_datetime + \".123000\"\niso_datetime = \"2010-04-20T10:12:14\"\niso_datetime_with_ms = iso_datetime + \".123000\"\nnasa_times = [nasa_date, nasa_datetime, nasa_datetime_with_ms]\niso_times = [iso_date, iso_datetime, iso_datetime_with_ms]\n\n\nassert nasa_time_to_datetime(nasa_date) == dt.datetime(2010, 4, 20, 0, 0)\n\n\nassert nasa_time_to_datetime(nasa_datetime) == dt.datetime(2010, 4, 20, 10, 12, 14)\n\n\nassert nasa_time_to_datetime(nasa_datetime_with_ms) == dt.datetime(\n    2010, 4, 20, 10, 12, 14, 123000\n)\n\n\nsource\n\n\n\n\n nasa_time_to_iso (inputstr:str, with_hours:bool=False)\n\nConvert the day-number based NASA datetime format to ISO\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ninputstr\nstr\n\n\n\n\nwith_hours\nbool\nFalse\nSwitch if return is wanted with hours (i.e. isoformat)\n\n\nReturns\nstr\n\nDatestring in ISO-format.\n\n\n\nConversions to ISO format, but not providing hours if they are not in input:\n\nfor t in nasa_times:\n    print(\"Input:\", t)\n    print(nasa_time_to_iso(t))\n\nInput: 2010-110\n2010-04-20\nInput: 2010-110T10:12:14\n2010-04-20T10:12:14\nInput: 2010-110T10:12:14.123000\n2010-04-20T10:12:14.123000\n\n\nIf hours are wanted in the isostring, use with_hours=True:\n\nfor t in nasa_times:\n    print(\"Input:\", t)\n    print(nasa_time_to_iso(t, with_hours=True))\n\nInput: 2010-110\n2010-04-20T00:00:00\nInput: 2010-110T10:12:14\n2010-04-20T10:12:14\nInput: 2010-110T10:12:14.123000\n2010-04-20T10:12:14.123000\n\n\n\nassert nasa_time_to_iso(nasa_date, with_hours=True) == \"2010-04-20T00:00:00\"\nassert nasa_time_to_iso(nasa_date) == \"2010-04-20\"\n\n\n\n\nAgain, with NASA-format, we mean the ofen used (in PDS and mission files) YYYY-JJJ format, e.g. “2010-240”.\n\nsource\n\n\n\n\n iso_to_nasa_time (inputstr:str)\n\nConvert iso date to day-number based NASA date.\n\n\n\n\nType\nDetails\n\n\n\n\ninputstr\nstr\nDate string of the form Y-m-d\n\n\nReturns\nstr\nDatestring in NASA standard yyyy-jjj\n\n\n\n\nsource\n\n\n\n\n iso_to_nasa_datetime (dtimestr:str)\n\nConvert iso datetime to day-number based NASA datetime.\n\n\n\n\nType\nDetails\n\n\n\n\ndtimestr\nstr\nDatetime string of the form yyyy-mm-ddTHH-MM-SS\n\n\n\n\nfor t in iso_times:\n    print(\"Input:\", t)\n    print(iso_to_nasa_time(t))\n\nInput: 2010-4-20\n2010-110\nInput: 2010-04-20T10:12:14\n2010-110T10:12:14\nInput: 2010-04-20T10:12:14.123000\n2010-110T10:12:14.123000\n\n\n\nassert iso_to_nasa_time(iso_date) == nasa_date\n\n\nassert nasa_time_to_iso(nasa_datetime) == iso_datetime\nassert nasa_time_to_iso(nasa_datetime_with_ms) == iso_datetime_with_ms\n\n\nassert iso_to_nasa_time(iso_datetime) == nasa_datetime\nassert iso_to_nasa_time(iso_datetime_with_ms) == nasa_datetime_with_ms\n\n\nsource\n\n\n\n\n replace_all_nasa_times (df:pandas.core.frame.DataFrame)\n\n*Find all NASA times in dataframe and replace with ISO.\nChanges will be implemented on incoming dataframe!\nThis will be done for all columns with the word TIME in the column name.*\n\n\n\n\nType\nDetails\n\n\n\n\ndf\nDataFrame\nDataFrame with NASA time columns",
    "crumbs": [
      "api",
      "Utils"
    ]
  },
  {
    "objectID": "api/utils.html#time-format-strings",
    "href": "api/utils.html#time-format-strings",
    "title": "Utils",
    "section": "",
    "text": "First, we define the different format strings these utils convert from and to.\nAn identifier with xxx_dt_format_xxx in its name signifies a full datetime format as compared to dates only.\n\n\nWhat we call NASA data, is the often used YYYY-JJJ based format in the Planetary Data System identifying dates via the running number of the day in the year, e.g. “2010-240”.\n\nsource\n\n\n\n\n nasa_time_to_datetime (inputstr)\n\nUser function to convert all kinds of NASA PDS datestrings with day_of_year into datetimes.\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ninputstr\n\ninputstr of format YYYY-jjj, YYYY-jjjTHH:MM:SS or YYYY-jjjTHH:MM:SS.ffffff\n\n\nReturns\ndatetime\n\n\n\n\nExample dates and times to test:\n\nnasa_date = \"2010-110\"\niso_date = \"2010-4-20\"\nnasa_datetime = \"2010-110T10:12:14\"\nnasa_datetime_with_ms = nasa_datetime + \".123000\"\niso_datetime = \"2010-04-20T10:12:14\"\niso_datetime_with_ms = iso_datetime + \".123000\"\nnasa_times = [nasa_date, nasa_datetime, nasa_datetime_with_ms]\niso_times = [iso_date, iso_datetime, iso_datetime_with_ms]\n\n\nassert nasa_time_to_datetime(nasa_date) == dt.datetime(2010, 4, 20, 0, 0)\n\n\nassert nasa_time_to_datetime(nasa_datetime) == dt.datetime(2010, 4, 20, 10, 12, 14)\n\n\nassert nasa_time_to_datetime(nasa_datetime_with_ms) == dt.datetime(\n    2010, 4, 20, 10, 12, 14, 123000\n)\n\n\nsource\n\n\n\n\n nasa_time_to_iso (inputstr:str, with_hours:bool=False)\n\nConvert the day-number based NASA datetime format to ISO\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ninputstr\nstr\n\n\n\n\nwith_hours\nbool\nFalse\nSwitch if return is wanted with hours (i.e. isoformat)\n\n\nReturns\nstr\n\nDatestring in ISO-format.\n\n\n\nConversions to ISO format, but not providing hours if they are not in input:\n\nfor t in nasa_times:\n    print(\"Input:\", t)\n    print(nasa_time_to_iso(t))\n\nInput: 2010-110\n2010-04-20\nInput: 2010-110T10:12:14\n2010-04-20T10:12:14\nInput: 2010-110T10:12:14.123000\n2010-04-20T10:12:14.123000\n\n\nIf hours are wanted in the isostring, use with_hours=True:\n\nfor t in nasa_times:\n    print(\"Input:\", t)\n    print(nasa_time_to_iso(t, with_hours=True))\n\nInput: 2010-110\n2010-04-20T00:00:00\nInput: 2010-110T10:12:14\n2010-04-20T10:12:14\nInput: 2010-110T10:12:14.123000\n2010-04-20T10:12:14.123000\n\n\n\nassert nasa_time_to_iso(nasa_date, with_hours=True) == \"2010-04-20T00:00:00\"\nassert nasa_time_to_iso(nasa_date) == \"2010-04-20\"\n\n\n\n\nAgain, with NASA-format, we mean the ofen used (in PDS and mission files) YYYY-JJJ format, e.g. “2010-240”.\n\nsource\n\n\n\n\n iso_to_nasa_time (inputstr:str)\n\nConvert iso date to day-number based NASA date.\n\n\n\n\nType\nDetails\n\n\n\n\ninputstr\nstr\nDate string of the form Y-m-d\n\n\nReturns\nstr\nDatestring in NASA standard yyyy-jjj\n\n\n\n\nsource\n\n\n\n\n iso_to_nasa_datetime (dtimestr:str)\n\nConvert iso datetime to day-number based NASA datetime.\n\n\n\n\nType\nDetails\n\n\n\n\ndtimestr\nstr\nDatetime string of the form yyyy-mm-ddTHH-MM-SS\n\n\n\n\nfor t in iso_times:\n    print(\"Input:\", t)\n    print(iso_to_nasa_time(t))\n\nInput: 2010-4-20\n2010-110\nInput: 2010-04-20T10:12:14\n2010-110T10:12:14\nInput: 2010-04-20T10:12:14.123000\n2010-110T10:12:14.123000\n\n\n\nassert iso_to_nasa_time(iso_date) == nasa_date\n\n\nassert nasa_time_to_iso(nasa_datetime) == iso_datetime\nassert nasa_time_to_iso(nasa_datetime_with_ms) == iso_datetime_with_ms\n\n\nassert iso_to_nasa_time(iso_datetime) == nasa_datetime\nassert iso_to_nasa_time(iso_datetime_with_ms) == nasa_datetime_with_ms\n\n\nsource\n\n\n\n\n replace_all_nasa_times (df:pandas.core.frame.DataFrame)\n\n*Find all NASA times in dataframe and replace with ISO.\nChanges will be implemented on incoming dataframe!\nThis will be done for all columns with the word TIME in the column name.*\n\n\n\n\nType\nDetails\n\n\n\n\ndf\nDataFrame\nDataFrame with NASA time columns",
    "crumbs": [
      "api",
      "Utils"
    ]
  },
  {
    "objectID": "api/utils.html#network-utils",
    "href": "api/utils.html#network-utils",
    "title": "Utils",
    "section": "Network utils",
    "text": "Network utils\n\nsource\n\nhave_internet\n\n have_internet ()\n\n*Fastest way to check for active internet connection.\nFrom https://stackoverflow.com/a/29854274/680232*\n\nsource\n\n\nurl_retrieve\n\n url_retrieve (url:str, outfile:str, chunk_size:int=4096, user:str=None,\n               passwd:str=None)\n\n*Improved urlretrieve with progressbar, timeout and chunker.\nThis downloader has built-in progress bar using tqdm and using the requests package it improves standard urllib behavior by adding time-out capability.\nI tested different chunk_sizes and most of the time 128 was actually fastest, YMMV.\nInspired by https://stackoverflow.com/a/61575758/680232*\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nurl\nstr\n\nThe URL to download\n\n\noutfile\nstr\n\nThe path where to store the downloaded file.\n\n\nchunk_size\nint\n4096\ndef chunk size for the request.iter_content call\n\n\nuser\nstr\nNone\nif provided, create HTTPBasicAuth object\n\n\npasswd\nstr\nNone\nif provided, create HTTPBasicAuth object\n\n\n\n\nsource\n\n\ncheck_url_exists\n\n check_url_exists (url)\n\n\nsource\n\n\nget_remote_timestamp\n\n get_remote_timestamp (url:str)\n\n*Get the timestamp of a remote file.\nUseful for checking if there’s an updated file available.*\n\n\n\n\nType\nDetails\n\n\n\n\nurl\nstr\nURL to check timestamp for\n\n\nReturns\ndatetime\n\n\n\n\n\nsource\n\n\nparse_http_date\n\n parse_http_date (text:str)\n\nParse date string retrieved via urllib.request.\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\ntext\nstr\ndatestring from urllib.request\n\n\nReturns\ndatetime\ndt.datetime object from given datetime string\n\n\n\n\nhave_internet()\n\nTrue",
    "crumbs": [
      "api",
      "Utils"
    ]
  },
  {
    "objectID": "api/utils.html#image-processing-helpers",
    "href": "api/utils.html#image-processing-helpers",
    "title": "Utils",
    "section": "Image processing helpers",
    "text": "Image processing helpers\n\nsource\n\nfile_variations\n\n file_variations (filename:Union[str,pathlib.Path], extensions:list)\n\n*Create a variation of file names.\nGenerate a list of variations on a filename by replacing the extension with the provided list.\nAdapted from T. Olsens `file_variations of the pysis module for using pathlib.*\n\n\n\n\nType\nDetails\n\n\n\n\nfilename\nUnion\nThe original filename to use as a base.\n\n\nextensions\nlist\n\n\n\nReturns\nlist\nlist of Paths\n\n\n\n\nsource\n\n\nget_gdal_center_coords\n\n get_gdal_center_coords (imgpath:Union[str,pathlib.Path])\n\n*Get center rows/cols pixel coordinate for GDAL-readable dataset.\nCheck CLI gdalinfo --formats to see all formats that GDAL can open.*\n\n\n\n\nType\nDetails\n\n\n\n\nimgpath\nUnion\nPath to raster image that is readable by GDLA\n\n\nReturns\nTuple\ncenter row/col coordinates.\n\n\n\n\nsource\n\n\nheight_from_shadow\n\n height_from_shadow (shadow_in_pixels:float, sun_elev:float)\n\n*Calculate height of an object from its shadow length.\nNote, that your image might have been binned. You need to correct shadow_in_pixels for that.*\n\n\n\n\nType\nDetails\n\n\n\n\nshadow_in_pixels\nfloat\nMeasured length of shadow in pixels\n\n\nsun_elev\nfloat\nAnge of sun over horizon in degrees\n\n\nReturns\nfloat\nHeight [meter]\n\n\n\n\nfname = \"abc.txt\"\n\n\nextensions = \".cub .cal.cub .map.cal.cub\".split()\n\n\nfile_variations(fname, extensions)\n\n[Path('abc.cub'), Path('abc.cal.cub'), Path('abc.map.cal.cub')]\n\n\n\nassert len(extensions) == len(file_variations(fname, extensions))",
    "crumbs": [
      "api",
      "Utils"
    ]
  },
  {
    "objectID": "api/utils.html#isis-helpers",
    "href": "api/utils.html#isis-helpers",
    "title": "Utils",
    "section": "ISIS helpers",
    "text": "ISIS helpers\n\nsource\n\ncatch_isis_error\n\n catch_isis_error (func)\n\ncan be used as decorator for any ISIS function",
    "crumbs": [
      "api",
      "Utils"
    ]
  },
  {
    "objectID": "api/utils.html#notebook-tools",
    "href": "api/utils.html#notebook-tools",
    "title": "Utils",
    "section": "Notebook tools",
    "text": "Notebook tools\n\nfrom nbdev import nbdev_export\n\nnbdev_export()",
    "crumbs": [
      "api",
      "Utils"
    ]
  },
  {
    "objectID": "api/spice.kernels.html",
    "href": "api/spice.kernels.html",
    "title": "SPICE Kernels",
    "section": "",
    "text": "Feature list for this module:\n\nReceive the list of supported datasets for automatic retrieval of archived SPICE kernels\n\nThe supported datasets are tabled here at NAIF: https://naif.jpl.nasa.gov/naif/data_archived.html\n\nReceive the list of required SPICE kernels for a given mission and time range\nAutomatic download of kernels for a given mission and time range either into a given location or the planetarypy local archive.\n\nAs always in planetarypy the general design philosophy is to first develop a management class to give the user full control over all the details, and then add easy-to-use function for the end-user that do the most frequently used things in one go. (See section “User Functions”)",
    "crumbs": [
      "api",
      "SPICE Kernels"
    ]
  },
  {
    "objectID": "api/spice.kernels.html#intro",
    "href": "api/spice.kernels.html#intro",
    "title": "SPICE Kernels",
    "section": "",
    "text": "Feature list for this module:\n\nReceive the list of supported datasets for automatic retrieval of archived SPICE kernels\n\nThe supported datasets are tabled here at NAIF: https://naif.jpl.nasa.gov/naif/data_archived.html\n\nReceive the list of required SPICE kernels for a given mission and time range\nAutomatic download of kernels for a given mission and time range either into a given location or the planetarypy local archive.\n\nAs always in planetarypy the general design philosophy is to first develop a management class to give the user full control over all the details, and then add easy-to-use function for the end-user that do the most frequently used things in one go. (See section “User Functions”)",
    "crumbs": [
      "api",
      "SPICE Kernels"
    ]
  },
  {
    "objectID": "api/spice.kernels.html#identifying-and-downloading-kernel-sets",
    "href": "api/spice.kernels.html#identifying-and-downloading-kernel-sets",
    "title": "SPICE Kernels",
    "section": "Identifying and downloading kernel sets",
    "text": "Identifying and downloading kernel sets\nOne repeating task for SPICE calculations is the identification and retrieval of all SPICE kernels for a mission for a given time interval.\nThe folks at NAIF offer a “Subset” feature at their servers. Here we set up a table of the currently supported datasets:\n\ndatasets\n\n\n\n\n\n\n\n\n\npath\nMission Name\nPDS3 or PDS4\nData Size (GB)\nStart Time\nStop Time\n\n\nshorthand\n\n\n\n\n\n\n\n\n\n\nbc\nbc/bc_spice\nBepiColombo\n4\n1.1\n2018-10-20\n2023-01-01\n\n\ncassini\nco-s_j_e_v-spice-6-v1.0/cosp_1000\nCassini Orbiter\n3\n62.5\n1997-10-15\n2017-09-15\n\n\nclementine\nclem1-l-spice-6-v1.0/clsp_1000\nClementine\n3\n0.8\n1994-01-26\n1994-05-07\n\n\ndart\ndart/dart_spice\nDART\n4\n9.1\n2021-11-09\n2050-01-01\n\n\ndawn\ndawn-m_a-spice-6-v1.0/dawnsp_1000\nDAWN\n3\n86.4\n2007-09-27\n2018-10-31\n\n\ndi\ndi-c-spice-6-v1.0/disp_1000\nDeep Impact\n3\n0.7\n2005-01-12\n2005-08-09\n\n\nds1\nds1-a_c-spice-6-v1.0/ds1sp_1000\nDeep Space 1\n3\n0.9\n1998-10-24\n2001-12-18\n\n\nepoxi\ndif-c_e_x-spice-6-v1.0/epxsp_1000\nEPOXI\n3\n1.0\n2005-08-23\n2011-03-01\n\n\nem16\nem16/em16_spice\nExoMars TGO 2016\n4\n9.4\n2016-03-14\n2023-01-01\n\n\ngrail\ngrail-l-spice-6-v1.0/grlsp_1000\nGRAIL\n3\n4.3\n2011-09-10\n2012-12-17\n\n\nhayabusa\nhay-a-spice-6-v1.0/haysp_1000\nHayabusa\n3\n0.3\n2005-09-11\n2005-11-19\n\n\ninsight\ninsight/insight_spice\nInSight\n4\n0.9\n2018-05-05\n2022-12-15\n\n\njuno\njno-j_e_ss-spice-6-v1.0/jnosp_1000\nJUNO\n3\n46.9\n2011-08-05\n2022-08-17\n\n\nladee\nladee/ladee_spice\nLADEE\n4\n0.6\n2013-09-07\n2050-01-01\n\n\nlro\nlro-l-spice-6-v1.0/lrosp_1000\nLunar Reconnaissance Orbiter\n3\n595.7\n2009-06-18\n2023-03-15\n\n\nmaven\nmaven/maven_spice\nMAVEN\n4\n54.4\n2013-11-18\n2023-04-01\n\n\nopportunity\nmer1-m-spice-6-v1.0/mer1sp_1000\nMER 1 (Opportunity)\n3\n4.1\n2003-07-07\n2018-06-10\n\n\nspirit\nmer2-m-spice-6-v1.0/mer2sp_1000\nMER 2 (Spirit)\n3\n2.6\n2003-06-10\n2010-05-03\n\n\nmessenger\nmess-e_v_h-spice-6-v1.0/messsp_1000\nMESSENGER\n3\n44.8\n2004-08-03\n2015-04-30\n\n\nmars2020\nmars2020/mars2020_spice\nMars 2020\n4\n0.6\n2020-07-30\n2022-12-28\n\n\nmex\nmex-e_m-spice-6-v2.0/mexsp_2000\nMars Express\n3\n8.5\n2003-06-02\n2022-11-30\n\n\nmgs\nmgs-m-spice-6-v1.0/mgsp_1000\nMars Global Surveyor\n3\n15.4\n1996-11-06\n2006-11-02\n\n\nody\nody-m-spice-6-v1.0/odsp_1000\nMars Odyssey\n3\n33.2\n2001-04-07\n2022-10-01\n\n\nmro\nmro-m-spice-6-v1.0/mrosp_1000\nMars Reconnaissance Orbiter\n3\n314.9\n2005-08-12\n2023-04-01\n\n\nmsl\nmsl-m-spice-6-v1.0/mslsp_1000\nMars Science Laboratory\n3\n0.6\n2011-11-26\n2022-11-06\n\n\nnear\nnear-a-spice-6-v1.0/nearsp_1000\nNEAR\n3\n2.4\n1996-05-30\n2001-02-28\n\n\nnh\nnh-j_p_ss-spice-6-v1.0/nhsp_1000\nNew Horizons\n3\n1.6\n2006-01-19\n2019-12-30\n\n\norex\norex/orex_spice\nOSIRIS-REx\n4\n418.4\n2016-09-08\n2021-02-22\n\n\nrosetta\nro_rl-e_m_a_c-spice-6-v1.0/rossp_1000\nRosetta\n3\n5.9\n2004-03-02\n2017-01-01\n\n\nstardust\nsdu-c-spice-6-v1.0/sdsp_1000\nStardust\n3\n1.9\n1999-02-07\n2011-05-01\n\n\nvenus_climate_orbiter\nvco/vco_spice\nVenus Climate Orbiter\n4\n1.7\n2010-05-21\n2022-01-01\n\n\nvex\nvex-e_v-spice-6-v2.0/vexsp_2000\nVenus Express\n3\n5.0\n2005-11-09\n2015-02-06\n\n\nvo\nvo1_vo2-m-spice-6-v1.0/vosp_1000\nViking Orbiter\n3\n0.1\n1976-06-16\n1980-07-30\n\n\n\n\n\n\n\n\nTo receive this dataframe:\nfrom planetarypy.spice.kernels import datasets\nSome validation helpers:\n\nsource\n\nis_stop_valid\n\n is_stop_valid (mission:str, stop:astropy.time.core.Time)\n\n\n\n\n\nType\nDetails\n\n\n\n\nmission\nstr\nmission shorthand label of datasets dataframe\n\n\nstop\nTime\nstop time in astropy.Time format\n\n\n\n\nsource\n\n\nis_start_valid\n\n is_start_valid (mission:str, start:astropy.time.core.Time)\n\n\n\n\n\nType\nDetails\n\n\n\n\nmission\nstr\nmission shorthand label of datasets dataframe\n\n\nstart\nTime\nstart time in astropy.Time format\n\n\n\n\nassert is_start_valid(\"cassini\", Time(\"1998-01-01\")) is True\nassert is_start_valid(\"cassini\", Time(\"1997-01-01\")) is False\nassert is_stop_valid(\"cassini\", \"2017-01-01\") is True\nassert is_stop_valid(\"cassini\", \"2018-01-01\") is False\n\nNow we build a management class for wrapping the Perl script available at below’s URL for accessing subsets of these datasets.\nFirst, the basic URLs we will use:\nThe Perl script subsetds.pl (the name at the end of the BASE_URL) requires as input:\n\nthe dataset name\nstart and stop of the time interval\na constant named “Subset” to identify the action for this Perl script\n\nWe can assemble these parameters into a payload dictionary for the requests.get call and we manage different potential actions on the zipfile with a Subsetter class, that only requires the mission identifier, start and stop as parameters.\n/home/runner/micromamba/envs/my-env/lib/python3.12/site-packages/fastcore/docscrape.py:225: UserWarning: Unknown section Attributes\n  else: warn(msg)\n\nsource\n\n\nSubsetter\n\n Subsetter (mission:str, start:str, stop=None, save_location=None)\n\nClass to manage retrieving subset SPICE kernel lists\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nmission\nstr\n\nmission shorthand in datasets dataframe\n\n\nstart\nstr\n\nstart time in either ISO or yyyy-jjj format\n\n\nstop\nNoneType\nNone\nstop time in either ISO or yyyy-jjj format\n\n\nsave_location\nNoneType\nNone\noverwrite default storing in planetarpy archive\n\n\n\n\nsource\n\n\ndownload_one_url\n\n download_one_url (url, local_path, overwrite:bool=False)\n\n\nsubset = Subsetter(\"cassini\", \"2014-270\")\n\n\nsubset.kernel_names\n\n['ck/14001_15001pa_gapfill_v14.bc',\n 'ck/14212_14279py_as_flown.bc',\n 'ck/14268_14273ra.bc',\n 'ck/cas_cda_20150318.bc',\n 'ck/cas_lemms_05109_20001_v2.bc',\n 'fk/cas_dyn_v03.tf',\n 'fk/cas_mimi_v202.tf',\n 'fk/cas_rocks_v18.tf',\n 'fk/cas_v41.tf',\n 'ik/cas_caps_v03.ti',\n 'ik/cas_cda_v01.ti',\n 'ik/cas_cirs_v09.ti',\n 'ik/cas_inms_v02.ti',\n 'ik/cas_iss_v10.ti',\n 'ik/cas_mag_v01.ti',\n 'ik/cas_mimi_v11.ti',\n 'ik/cas_radar_v11.ti',\n 'ik/cas_rpws_v01.ti',\n 'ik/cas_rss_v03.ti',\n 'ik/cas_sru_v02.ti',\n 'ik/cas_uvis_v06.ti',\n 'ik/cas_vims_v06.ti',\n 'lsk/naif0012.tls',\n 'pck/pck00010.tpc',\n 'sclk/cas00172.tsc',\n 'spk/140809BP_IRRE_00256_25017.bsp',\n 'spk/150122R_SCPSE_14251_14283.bsp',\n 'spk/180927AP_RE_90165_18018.bsp']\n\n\n\n# this should fail:\ndef _failing():\n    Subsetter(\"cassini\", \"2019-01-01\")\n\n\ntest_fail(_failing, contains=\"start/stop\")\n\n\nsubset = Subsetter(\"cassini\", \"2011-02-13\", \"2011-02-14\")\n\n\nsubset.urls_file\n\n'urls_cosp_1000_110213_110214.txt'\n\n\n\nsubset.metakernel_file\n\n'cas_2011_v17_110213_110214.tm'\n\n\n\nsource\n\n\nSubsetter.kernel_names\n\n Subsetter.kernel_names ()\n\nReturn list of names of kernels for the given time range.\n\nsubset.kernel_names\n\n['ck/11001_12001pa_gapfill_v14.bc',\n 'ck/11017_11066py_as_flown.bc',\n 'ck/11044_11049ra.bc',\n 'ck/cas_cda_20120517.bc',\n 'ck/cas_lemms_05109_20001_v2.bc',\n 'fk/cas_dyn_v03.tf',\n 'fk/cas_mimi_v202.tf',\n 'fk/cas_rocks_v18.tf',\n 'fk/cas_v41.tf',\n 'ik/cas_caps_v03.ti',\n 'ik/cas_cda_v01.ti',\n 'ik/cas_cirs_v09.ti',\n 'ik/cas_inms_v02.ti',\n 'ik/cas_iss_v10.ti',\n 'ik/cas_mag_v01.ti',\n 'ik/cas_mimi_v11.ti',\n 'ik/cas_radar_v11.ti',\n 'ik/cas_rpws_v01.ti',\n 'ik/cas_rss_v03.ti',\n 'ik/cas_sru_v02.ti',\n 'ik/cas_uvis_v06.ti',\n 'ik/cas_vims_v06.ti',\n 'lsk/naif0012.tls',\n 'pck/pck00010.tpc',\n 'sclk/cas00172.tsc',\n 'spk/110504R_SCPSE_11041_11093.bsp',\n 'spk/140809BP_IRRE_00256_25017.bsp',\n 'spk/180927AP_RE_90165_18018.bsp']\n\n\n\nsubset.kernel_urls\n\n['https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ck/11001_12001pa_gapfill_v14.bc',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ck/11017_11066py_as_flown.bc',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ck/11044_11049ra.bc',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ck/cas_cda_20120517.bc',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ck/cas_lemms_05109_20001_v2.bc',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/fk/cas_dyn_v03.tf',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/fk/cas_mimi_v202.tf',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/fk/cas_rocks_v18.tf',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/fk/cas_v41.tf',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_caps_v03.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_cda_v01.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_cirs_v09.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_inms_v02.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_iss_v10.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_mag_v01.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_mimi_v11.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_radar_v11.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_rpws_v01.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_rss_v03.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_sru_v02.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_uvis_v06.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/ik/cas_vims_v06.ti',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/lsk/naif0012.tls',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/pck/pck00010.tpc',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/sclk/cas00172.tsc',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/spk/110504R_SCPSE_11041_11093.bsp',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/spk/140809BP_IRRE_00256_25017.bsp',\n 'https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000/data/spk/180927AP_RE_90165_18018.bsp']\n\n\n\nsource\n\n\nSubsetter.get_local_path\n\n Subsetter.get_local_path (url)\n\n*Calculate local storage path from Kernel URL, using save_location if given.\nIf self.save_location is None, the planetarypy archive is being used.*\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nurl\n\nkernel url to determine local storage path\n\n\nReturns\nPath\nfull local path where kernel in URL will be stored\n\n\n\n\nsubset.get_local_path(subset.kernel_urls[0])\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/spice_kernels/cassini/ck/11001_12001pa_gapfill_v14.bc')\n\n\n\nsubset.save_location = Path(\".\")\n\n\nsubset.get_local_path(subset.kernel_urls[0])\n\nPath('ck/11001_12001pa_gapfill_v14.bc')\n\n\n\nsource\n\n\nSubsetter.download_kernels\n\n Subsetter.download_kernels (overwrite:bool=False,\n                             non_blocking:bool=False, quiet:bool=False)\n\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\noverwrite\nbool\nFalse\nswitch to control if kernels should be downloaded over existing ones\n\n\nnon_blocking\nbool\nFalse\n\n\n\nquiet\nbool\nFalse\n\n\n\n\n\n# reset save_location to prevent additional download\nsubset.save_location = None\n\n\nsubset.download_kernels()\n\n\n\n\nck 11001_12001pa_gapfill_v14.bc locally available.\nck 11017_11066py_as_flown.bc locally available.\nck 11044_11049ra.bc locally available.\nck cas_cda_20120517.bc locally available.\nck cas_lemms_05109_20001_v2.bc locally available.\nfk cas_dyn_v03.tf locally available.\nfk cas_mimi_v202.tf locally available.\nfk cas_rocks_v18.tf locally available.\nfk cas_v41.tf locally available.\nik cas_caps_v03.ti locally available.\nik cas_cda_v01.ti locally available.\nik cas_cirs_v09.ti locally available.\nik cas_inms_v02.ti locally available.\nik cas_iss_v10.ti locally available.\nik cas_mag_v01.ti locally available.\nik cas_mimi_v11.ti locally available.\nik cas_radar_v11.ti locally available.\nik cas_rpws_v01.ti locally available.\nik cas_rss_v03.ti locally available.\nik cas_sru_v02.ti locally available.\nik cas_uvis_v06.ti locally available.\nik cas_vims_v06.ti locally available.\nlsk naif0012.tls locally available.\npck pck00010.tpc locally available.\nsclk cas00172.tsc locally available.\nspk 110504R_SCPSE_11041_11093.bsp locally available.\nspk 140809BP_IRRE_00256_25017.bsp locally available.\nspk 180927AP_RE_90165_18018.bsp locally available.\n\n\n\nsubset.download_kernels(non_blocking=True)\n\n\n\n\nck 11001_12001pa_gapfill_v14.bc locally available.\nck 11017_11066py_as_flown.bc locally available.\nck 11044_11049ra.bc locally available.\nck cas_cda_20120517.bc locally available.\nck cas_lemms_05109_20001_v2.bc locally available.\nfk cas_dyn_v03.tf locally available.\nfk cas_mimi_v202.tf locally available.\nfk cas_rocks_v18.tf locally available.\nfk cas_v41.tf locally available.\nik cas_caps_v03.ti locally available.\nik cas_cda_v01.ti locally available.\nik cas_cirs_v09.ti locally available.\nik cas_inms_v02.ti locally available.\nik cas_iss_v10.ti locally available.\nik cas_mag_v01.ti locally available.\nik cas_mimi_v11.ti locally available.\nik cas_radar_v11.ti locally available.\nik cas_rpws_v01.ti locally available.\nik cas_rss_v03.ti locally available.\nik cas_sru_v02.ti locally available.\nik cas_uvis_v06.ti locally available.\nik cas_vims_v06.ti locally available.\nlsk naif0012.tls locally available.\npck pck00010.tpc locally available.\nsclk cas00172.tsc locally available.\nspk 110504R_SCPSE_11041_11093.bsp locally available.\nspk 140809BP_IRRE_00256_25017.bsp locally available.\nspk 180927AP_RE_90165_18018.bsp locally available.\n\n\n[]\n\n\n\nsource\n\n\nSubsetter.get_metakernel\n\n Subsetter.get_metakernel ()\n\n*Get metakernel file from NAIF and adapt path to match local storage.\nUse save_location if given, otherwise planetarypy archive.*\n\nmkpath = subset.get_metakernel()\nmkpath\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/spice_kernels/cassini/cas_2011_v17_110213_110214.tm')\n\n\n\n!cat {mkpath}\n\nKPL/MK\n\n   This meta-kernel lists a subset of kernels from the meta-kernel\n   cas_2011_v17.tm provided in the CO-S/J/E/V-SPICE-6-V1.0 SPICE PDS3 archive,\n   covering the whole or a part of the customer requested time period\n   from 2011-02-13T00:00:00.000 to 2011-02-14T00:00:00.000.\n\n   The documentation describing these kernels can be found in the\n   complete CO-S/J/E/V-SPICE-6-V1.0 SPICE PDS3 archive available at this URL\n\n   https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000\n\n   To use this meta-kernel users may need to modify the value of the\n   PATH_VALUES keyword to point to the actual location of the archive's\n   ``data'' directory on their system. Replacing ``/'' with ``\\''\n   and converting line terminators to the format native to the user's\n   system may also be required if this meta-kernel is to be used on a\n   non-UNIX workstation.\n\n   This meta-kernel was created by the NAIF node's SPICE PDS archive\n   subsetting service version 2.1 on Mon Jun 19 08:13:34 PDT 2023.\n\n \n   \\begindata\n \n      PATH_VALUES     = (\n                         '/home/ayek72/mnt/slowdata/planetarypy/spice_kernels/cassini'\n                        )\n \n      PATH_SYMBOLS    = (\n                         'KERNELS'\n                        )\n \n      KERNELS_TO_LOAD = (\n                         '$KERNELS/lsk/naif0012.tls'\n                         '$KERNELS/pck/pck00010.tpc'\n                         '$KERNELS/fk/cas_rocks_v18.tf'\n                         '$KERNELS/fk/cas_mimi_v202.tf'\n                         '$KERNELS/fk/cas_dyn_v03.tf'\n                         '$KERNELS/fk/cas_v41.tf'\n                         '$KERNELS/ik/cas_caps_v03.ti'\n                         '$KERNELS/ik/cas_cda_v01.ti'\n                         '$KERNELS/ik/cas_cirs_v09.ti'\n                         '$KERNELS/ik/cas_inms_v02.ti'\n                         '$KERNELS/ik/cas_iss_v10.ti'\n                         '$KERNELS/ik/cas_mag_v01.ti'\n                         '$KERNELS/ik/cas_mimi_v11.ti'\n                         '$KERNELS/ik/cas_radar_v11.ti'\n                         '$KERNELS/ik/cas_rpws_v01.ti'\n                         '$KERNELS/ik/cas_rss_v03.ti'\n                         '$KERNELS/ik/cas_sru_v02.ti'\n                         '$KERNELS/ik/cas_uvis_v06.ti'\n                         '$KERNELS/ik/cas_vims_v06.ti'\n                         '$KERNELS/sclk/cas00172.tsc'\n                         '$KERNELS/spk/180927AP_RE_90165_18018.bsp'\n                         '$KERNELS/spk/140809BP_IRRE_00256_25017.bsp'\n                         '$KERNELS/spk/110504R_SCPSE_11041_11093.bsp'\n                         '$KERNELS/ck/11001_12001pa_gapfill_v14.bc'\n                         '$KERNELS/ck/11017_11066py_as_flown.bc'\n                         '$KERNELS/ck/11044_11049ra.bc'\n                         '$KERNELS/ck/cas_cda_20120517.bc'\n                         '$KERNELS/ck/cas_lemms_05109_20001_v2.bc'\n                        )\n \n   \\begintext\n \n\n\n\nLoading the metakernel works! :\n\nspice.furnsh(str(mkpath))\n\nOr, with given save_location:\n\nsubset.save_location = Path(\".\")\nmkpath = subset.get_metakernel()\nmkpath\n\nPath('cas_2011_v17_110213_110214.tm')\n\n\nThe metakernel is correctly adapted, however for these tests, I didn’t download the kernels again\n\n!cat {mkpath}\n\nKPL/MK\n\n   This meta-kernel lists a subset of kernels from the meta-kernel\n   cas_2011_v17.tm provided in the CO-S/J/E/V-SPICE-6-V1.0 SPICE PDS3 archive,\n   covering the whole or a part of the customer requested time period\n   from 2011-02-13T00:00:00.000 to 2011-02-14T00:00:00.000.\n\n   The documentation describing these kernels can be found in the\n   complete CO-S/J/E/V-SPICE-6-V1.0 SPICE PDS3 archive available at this URL\n\n   https://naif.jpl.nasa.gov/pub/naif/pds/data/co-s_j_e_v-spice-6-v1.0/cosp_1000\n\n   To use this meta-kernel users may need to modify the value of the\n   PATH_VALUES keyword to point to the actual location of the archive's\n   ``data'' directory on their system. Replacing ``/'' with ``\\''\n   and converting line terminators to the format native to the user's\n   system may also be required if this meta-kernel is to be used on a\n   non-UNIX workstation.\n\n   This meta-kernel was created by the NAIF node's SPICE PDS archive\n   subsetting service version 2.1 on Mon Jun 19 08:13:34 PDT 2023.\n\n \n   \\begindata\n \n      PATH_VALUES     = (\n                         '.'\n                        )\n \n      PATH_SYMBOLS    = (\n                         'KERNELS'\n                        )\n \n      KERNELS_TO_LOAD = (\n                         '$KERNELS/lsk/naif0012.tls'\n                         '$KERNELS/pck/pck00010.tpc'\n                         '$KERNELS/fk/cas_rocks_v18.tf'\n                         '$KERNELS/fk/cas_mimi_v202.tf'\n                         '$KERNELS/fk/cas_dyn_v03.tf'\n                         '$KERNELS/fk/cas_v41.tf'\n                         '$KERNELS/ik/cas_caps_v03.ti'\n                         '$KERNELS/ik/cas_cda_v01.ti'\n                         '$KERNELS/ik/cas_cirs_v09.ti'\n                         '$KERNELS/ik/cas_inms_v02.ti'\n                         '$KERNELS/ik/cas_iss_v10.ti'\n                         '$KERNELS/ik/cas_mag_v01.ti'\n                         '$KERNELS/ik/cas_mimi_v11.ti'\n                         '$KERNELS/ik/cas_radar_v11.ti'\n                         '$KERNELS/ik/cas_rpws_v01.ti'\n                         '$KERNELS/ik/cas_rss_v03.ti'\n                         '$KERNELS/ik/cas_sru_v02.ti'\n                         '$KERNELS/ik/cas_uvis_v06.ti'\n                         '$KERNELS/ik/cas_vims_v06.ti'\n                         '$KERNELS/sclk/cas00172.tsc'\n                         '$KERNELS/spk/180927AP_RE_90165_18018.bsp'\n                         '$KERNELS/spk/140809BP_IRRE_00256_25017.bsp'\n                         '$KERNELS/spk/110504R_SCPSE_11041_11093.bsp'\n                         '$KERNELS/ck/11001_12001pa_gapfill_v14.bc'\n                         '$KERNELS/ck/11017_11066py_as_flown.bc'\n                         '$KERNELS/ck/11044_11049ra.bc'\n                         '$KERNELS/ck/cas_cda_20120517.bc'\n                         '$KERNELS/ck/cas_lemms_05109_20001_v2.bc'\n                        )\n \n   \\begintext",
    "crumbs": [
      "api",
      "SPICE Kernels"
    ]
  },
  {
    "objectID": "api/spice.kernels.html#user-functions",
    "href": "api/spice.kernels.html#user-functions",
    "title": "SPICE Kernels",
    "section": "User functions",
    "text": "User functions\n\nsource\n\nget_metakernel_and_files\n\n get_metakernel_and_files (mission:str, start:str, stop:str,\n                           save_location:str=None, quiet:bool=False)\n\nFor a given mission and start/stop times, download the kernels and get metakernel path\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nmission\nstr\n\nmission shorthand from datasets dataframe\n\n\nstart\nstr\n\nstart time as iso-string, or yyyy-jjj\n\n\nstop\nstr\n\nstop time as iso-string or yyyy-jjj\n\n\nsave_location\nstr\nNone\noverride storage into planetarypy archive\n\n\nquiet\nbool\nFalse\nsuppress kernel-wise feedback\n\n\nReturns\nPath\n\npathlib.Path to metakernel file with corrected data path.\n\n\n\n\nmkpath = get_metakernel_and_files(\"cassini\", \"2011-02-13\", \"2011-02-14\")\nmkpath\n\n/Users/maye/mambaforge/envs/py39/lib/python3.9/site-packages/distributed/node.py:182: UserWarning: Port 8787 is already in use.\nPerhaps you already have a cluster running?\nHosting the HTTP server on port 57624 instead\n  warnings.warn(\n\n\n\n\n\nck 11001_12001pa_gapfill_v14.bc locally available.\nck 11017_11066py_as_flown.bc locally available.\nck 11044_11049ra.bc locally available.\nck cas_cda_20120517.bc locally available.\nck cas_lemms_05109_20001_v2.bc locally available.\nfk cas_dyn_v03.tf locally available.\nfk cas_mimi_v202.tf locally available.\nfk cas_rocks_v18.tf locally available.\nfk cas_v41.tf locally available.\nik cas_caps_v03.ti locally available.\nik cas_cda_v01.ti locally available.\nik cas_cirs_v09.ti locally available.\nik cas_inms_v02.ti locally available.\nik cas_iss_v10.ti locally available.\nik cas_mag_v01.ti locally available.\nik cas_mimi_v11.ti locally available.\nik cas_radar_v11.ti locally available.\nik cas_rpws_v01.ti locally available.\nik cas_rss_v03.ti locally available.\nik cas_sru_v02.ti locally available.\nik cas_uvis_v06.ti locally available.\nik cas_vims_v06.ti locally available.\nlsk naif0012.tls locally available.\npck pck00010.tpc locally available.\nsclk cas00172.tsc locally available.\nspk 110504R_SCPSE_11041_11093.bsp locally available.\nspk 140809BP_IRRE_00256_25017.bsp locally available.\nspk 180927AP_RE_90165_18018.bsp locally available.\n\n\nPath('/Users/maye/planetarypy_data/spice_kernels/cassini/cas_2011_v17_110213_110214.tm')\n\n\n\nsource\n\n\nlist_kernels_for_day\n\n list_kernels_for_day (mission:str, start:str, stop:str='')\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nmission\nstr\n\nmission shorthand from datasets dataframe\n\n\nstart\nstr\n\nstart time as iso-string, or yyyy-jjj\n\n\nstop\nstr\n\nstop time as iso-string or yyyy-jjj\n\n\nReturns\nlist\n\nlist of kernel names\n\n\n\n\nlist_kernels_for_day(\"mro\", \"2015-02-13\")\n\n['ck/mro_crm_psp_150201_150228.bc',\n 'ck/mro_hga_psp_150210_150216_v2.bc',\n 'ck/mro_mcs_psp_150201_150228.bc',\n 'ck/mro_sa_psp_150210_150216_v2.bc',\n 'ck/mro_sc_psp_150210_150216_v2.bc',\n 'fk/mro_v16.tf',\n 'ik/mro_crism_v10.ti',\n 'ik/mro_ctx_v11.ti',\n 'ik/mro_hirise_v12.ti',\n 'ik/mro_marci_v10.ti',\n 'ik/mro_mcs_v10.ti',\n 'ik/mro_onc_v10.ti',\n 'lsk/naif0012.tls',\n 'pck/pck00008.tpc',\n 'sclk/mro_sclkscet_00095_65536.tsc',\n 'spk/de421.bsp',\n 'spk/mar097.bsp',\n 'spk/mro_psp34.bsp',\n 'spk/mro_psp34_ssd_mro95a.bsp',\n 'spk/mro_struct_v10.bsp']\n\n\n\n# this always takes much longer than other requests!\nlist_kernels_for_day(\"maven\", \"2017-01-01\")\n\n['ck/mvn_app_rel_161226_170101_v01.bc',\n 'ck/mvn_app_rel_170102_170108_v01.bc',\n 'ck/mvn_iuvs_rem_170101_170331_v03.bc',\n 'ck/mvn_sc_rel_161226_170101_v01.bc',\n 'ck/mvn_sc_rel_170102_170108_v02.bc',\n 'ck/mvn_swea_nom_131118_300101_v02.bc',\n 'fk/maven_v09.tf',\n 'ik/maven_ant_v10.ti',\n 'ik/maven_euv_v10.ti',\n 'ik/maven_iuvs_v11.ti',\n 'ik/maven_ngims_v10.ti',\n 'ik/maven_sep_v12.ti',\n 'ik/maven_static_v11.ti',\n 'ik/maven_swea_v11.ti',\n 'ik/maven_swia_v10.ti',\n 'lsk/naif0012.tls',\n 'pck/pck00010.tpc',\n 'sclk/mvn_sclkscet_00072.tsc',\n 'spk/de430s.bsp',\n 'spk/mar097s.bsp',\n 'spk/maven_orb_rec_170101_170401_v1.bsp',\n 'spk/maven_struct_v01.bsp']\n\n\n\n# this always takes much longer than other requests!\nlist_kernels_for_day(\"orex\", \"2018-11-30\")\n\n['ck/orx_sa_rel_181126_181202_v01.bc',\n 'ck/orx_sc_rel_181126_181202_v01.bc',\n 'ck/orx_struct_mapcam_v01.bc',\n 'ck/orx_struct_polycam_v01.bc',\n 'fk/orx_shape_v03.tf',\n 'fk/orx_v14.tf',\n 'ik/orx_lidar_v00.ti',\n 'ik/orx_navcam_v02.ti',\n 'ik/orx_ocams_v07.ti',\n 'ik/orx_ola_v01.ti',\n 'ik/orx_otes_v00.ti',\n 'ik/orx_ovirs_v00.ti',\n 'ik/orx_rexis_v01.ti',\n 'ik/orx_stowcam_v00.ti',\n 'ik/orx_struct_v00.ti',\n 'lsk/naif0012.tls',\n 'pck/bennu_v17.tpc',\n 'pck/pck00010.tpc',\n 'sclk/orx_sclkscet_00074.tsc',\n 'spk/bennu_refdrmc_v1.bsp',\n 'spk/de424.bsp',\n 'spk/orx_180301_181201_180921_od044_v1.bsp',\n 'spk/orx_180801_190302_181218_od077_v1.bsp',\n 'spk/orx_181203_190302_190104_od085_v1.bsp',\n 'spk/orx_struct_v04.bsp']\n\n\n\ndef _test_mission_kernels_available(mission):\n    print(\"Doing\", mission)\n    start = datasets.at[mission, \"Start Time\"]\n    end = datasets.at[mission, \"Stop Time\"]\n    half = Time(start) + (Time(end) - Time(start)) / 2\n    print(\"Half time:\", half)\n    try:\n        found = list_kernels_for_day(mission, half)\n    except IndexError:\n        print(\"Problem with\", mission)\n    else:\n        print(f\"Found {len(found)} kernels for {mission}\")\n\nfor mission in datasets.index:\n    _test_mission_kernels_available(mission)\n\nDoing bc\nHalf time: 2020-11-25 00:00:00.000\nFound 41 kernels for bc\nDoing cassini\nHalf time: 2007-09-30 12:00:01.000\nFound 32 kernels for cassini\nDoing clementine\nHalf time: 1994-03-17 12:00:00.000\nFound 19 kernels for clementine\nDoing dart\nHalf time: 2035-12-06 00:00:00.000\nFound 14 kernels for dart\nDoing dawn\nHalf time: 2013-04-14 00:00:00.000\nFound 21 kernels for dawn\nDoing di\nHalf time: 2005-04-26 12:00:00.000\nFound 16 kernels for di\nDoing ds1\nHalf time: 2000-05-21 11:59:59.500\nFound 11 kernels for ds1\nDoing epoxi\nHalf time: 2008-05-27 00:00:00.000\nFound 12 kernels for epoxi\nDoing em16\nHalf time: 2019-08-07 23:59:59.500\nFound 27 kernels for em16\nDoing grail\nHalf time: 2012-04-29 00:00:00.500\nFound 20 kernels for grail\nDoing hayabusa\nHalf time: 2005-10-15 12:00:00.000\nFound 15 kernels for hayabusa\nDoing insight\nHalf time: 2020-08-24 12:00:00.000\nFound 21 kernels for insight\nDoing juno\nHalf time: 2017-02-08 23:59:58.500\nFound 25 kernels for juno\nDoing ladee\nHalf time: 2031-11-04 11:59:59.000\nFound 12 kernels for ladee\nDoing lro\nHalf time: 2016-04-30 23:59:59.500\nFound 24 kernels for lro\nDoing maven\nHalf time: 2018-07-25 11:59:59.000\nFound 20 kernels for maven\nDoing opportunity\nHalf time: 2010-12-23 00:00:00.500\nFound 23 kernels for opportunity\nDoing spirit\nHalf time: 2006-11-20 12:00:00.000\nFound 24 kernels for spirit\nDoing messenger\nHalf time: 2009-12-15 23:59:59.500\nFound 18 kernels for messenger\nDoing mars2020\nHalf time: 2021-10-13 12:00:00.000\nFound 17 kernels for mars2020\nDoing mex\nHalf time: 2013-03-01 11:59:59.500\nFound 39 kernels for mex\nDoing mgs\nHalf time: 2001-11-03 23:59:59.500\nFound 20 kernels for mgs\nDoing ody\nHalf time: 2012-01-03 12:00:00.500\nFound 14 kernels for ody\nDoing mro\nHalf time: 2014-06-06 11:59:59.500\nFound 20 kernels for mro\nDoing msl\nHalf time: 2017-05-16 23:59:58.500\nFound 50 kernels for msl\nDoing near\nHalf time: 1998-10-14 12:00:00.000\nFound 15 kernels for near\nDoing nh\nHalf time: 2013-01-08 12:00:00.000\nFound 28 kernels for nh\nDoing orex\nHalf time: 2018-11-30 23:59:59.500\n\n\n  warnings.warn('ERFA function \"{}\" yielded {}'.format(func_name, wmsg),\n  warnings.warn('ERFA function \"{}\" yielded {}'.format(func_name, wmsg),\n  warnings.warn('ERFA function \"{}\" yielded {}'.format(func_name, wmsg),\n  warnings.warn('ERFA function \"{}\" yielded {}'.format(func_name, wmsg),\n\n\nOSError: SPICE Server request returned status code: {r.status_code}\n\n\n\nNOTE: Any ErfaWarnings above are caused by the LADEE mission using a kernel up to 2050, and the astropy.Time module warns about potential precicision issues regarding unknown leapseconds that will be put in in the future.\n\n\n\nGeneric kernel management\nThere are a few generic kernels that are required for basic illumination calculations as supported by this package.\n\nsource\n\n\ndownload_generic_kernels\n\n download_generic_kernels (overwrite=False)\n\nDownload all kernels as required by generic_kernel_list.\n\ndownload_generic_kernels()\n\n\nsource\n\n\nload_generic_kernels\n\n load_generic_kernels ()\n\n*Load all kernels in generic_kernels list.\nLoads pure planetary bodies meta-kernel without spacecraft data.\nDownloads any missing generic kernels.*\n\nspice.kclear()\n\n\nload_generic_kernels()\n\n\nsource\n\n\nshow_loaded_kernels\n\n show_loaded_kernels ()\n\nPrint overview of loaded kernels.\n\nshow_loaded_kernels()\n\n\nfrom nbdev import nbdev_export\n\nnbdev_export()",
    "crumbs": [
      "api",
      "SPICE Kernels"
    ]
  },
  {
    "objectID": "api/geotools.html",
    "href": "api/geotools.html",
    "title": "Geotools",
    "section": "",
    "text": "ul = Upper Left\nlr = LowerRight\n\n\nsource\n\n\n\n pixel_to_meter (sample, line, geotransform, shift=False)\n\nprovide point in map projection coordinates.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nsample\n\n\n\n\n\nline\n\n\n\n\n\ngeotransform\n\n\n\n\n\nshift\nbool\nFalse\n\n\n\nReturns\ntuple (x,y) coordinates in the projection of the dataset\n\n\n\n\n\n\nsource\n\n\n\n\n shift_to_center (x, y, geotransform)\n\n\nsource\n\n\n\n\n debug_srs (projection)\n\n*Correct wrong scale_factor in PolarStereographic data.\nSome PolarStereographic data have a 0 as a scale_factor in the projection (mostly MOLA), which is being corrected here. TODO: Check for being PolarStereographic before doing this!*\n\nsource\n\n\n\n\n get_sun_angles (spicer, img)\n\n*Calculate solar azimuth and incidence.\nBy requiring a spicer object for this function, it becomes independent from the solar system object where the calculations are made.*\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nspicer\nspicer.Spicer\nneeds to be setup for time, but spoint is set from img.center in here.\n\n\nimg\ngeotools.ImgData\nThe image data of which the center point serves as the start point.\n\n\nReturns\ntuple(float, float)\nSolar azimuth, incidence [degrees]\n\n\n\n\nsource\n\n\n\n\n calculate_image_north_azimuth (img, zero='right')\n\n\nsource\n\n\n\n\n get_north_shifted_point (img, offset=0.001)\n\nIncreasing the latitude is a sure way of getting north.\n\nsource\n\n\n\n\n calculate_image_azimuth (origPoint, newPoint, zero='right')\n\n*Calculate azimuth angle between 2 image points.\nBeware that this function calculates trigonometric angles. If the points are from an image that has (0, 0) in the upper left, this means that the angles increase clockwise. That is why, for example, for an HiRISE image, the return of this function matches the angle rotation definition for HiRISE data.*\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\norigPoint\n\n\n\n\n\nnewPoint\n\n\n\n\n\nzero\nstr\nright\n\n\n\nReturns\nazimuth: \n\nAzimuth angle\n\n\n\n/home/runner/micromamba/envs/my-env/lib/python3.12/site-packages/fastcore/docscrape.py:225: UserWarning: Unknown section Requires\n  else: warn(msg)\n\nsource\n\n\n\n\n Point (sample=None, line=None, x=None, y=None, lon=None, lat=None,\n        geotrans=None, proj=None)\n\nPoint class to manage pixel and map points and their transformations.\n\nsource\n\n\n\n\n Window (ulPoint=None, lrPoint=None, centerPoint=None, width=None)\n\n*class to manage a window made of corner Points (objects of Point())\nwhen using width, only quadratic windows supported currently &gt;&gt;&gt; p1 = Point(0, 1) &gt;&gt;&gt; p2 = Point(10,20)*\n\nsource\n\n\n\n\n ImgData (fname=None)\n\ndocstring for ImgData\n\n# todo: Fix missing MOLA class\n#| export\n# class CTX(ImgData):\n#     \"\"\"docstring for CTX\"\"\"\n\n#     def __init__(self, fname):\n#         ImgData.__init__(self, fname)\n\n#     def add_mola_contours(self):\n#         self.window_coords_to_lonlat()\n#         mola = MOLA()\n#         mola.window = self.window.copy()\n#         mola.window_coords_to_pixel()\n#         mola.read_window(mola.window)\n#         mola.data = mola.data - mola.data.mean()\n#         fig = plt.figure(figsize=(10, 10))\n#         ax = fig.add_subplot(111)\n#         plt.gray()\n#         ax.imshow(self.data, extent=self.window.get_extent(self.dataset))\n#         CS = ax.contour(\n#             mola.data,\n#             8,\n#             cmap=cm.jet,\n#             extent=self.window.get_extent(self.dataset),\n#             origin=\"image\",\n#         )\n#         plt.clabel(CS, fontsize=13, inline=1)\n#         ax.set_xlabel(\"Polar stereographic X [km]\")\n#         ax.set_ylabel(\"Polar stereographic Y [km]\")\n#         ax.set_title(\"CTX: \" + os.path.basename(self.fname))\n#         self.ax = ax\n#         plt.show()\n\n\n# def combine_ctx_and_mola(ctxFilename, ctxSample, ctxLine, ctxWidth):\n#     \"\"\"combine CTX and MOLA data.\n#\n#     MOLA and CTX data will be combined with these tools.\n#     User shall provide line,sample center coordinate of CTX file ROI to\n#     define distance in meters from southpole.\n#     \"\"\"\n#\n#     ctx = CTX(ctxFilename)\n#     mola = MOLA()\n#     ctxULsample, ctxULline, ctxLRsample, ctxLRline = \\\n#         get_corners_from_center(ctxSample, ctxLine, ctxWidth)\n#     ulX,ulY = get_coords_from_pixels(ctxDS, ctxULsample, ctxULline)\n#     lrX,lrY = get_coords_from_pixels(ctxDS, ctxLRsample, ctxLRline)\n#\n#     molaULsample,molaULline = get_pixels_from_coords(molaDS,ulX,ulY)\n#     molaLRsample,molaLRline = get_pixels_from_coords(molaDS,lrX,lrY)\n#     print(ctxULsample, ctxULline, ctxLRsample, ctxLRline)\n#     print(molaULsample, molaULline,molaLRsample, molaLRline)\n#     print(ulX,ulY,lrX,lrY)\n#     ctxData = ctxDS.ReadAsArray(ctxULsample,ctxULline,ctxWidth,ctxWidth)\n#     molaData = molaDS.ReadAsArray(int(molaULsample)+1,int(molaULline),\n#                                   int(molaLRsample - molaULsample),\n#                                   int(molaLRline - molaULline))\n#\n#     molaData = molaData - molaData.mean()\n#\n#     # x = np.arange(ulX,lrX)\n#     # y = np.arange(lrY,ulY)\n#     # X, Y = np.meshgrid(x,y)\n#     # plotting\n#     fig = plt.figure(figsize=(10,10))\n#     ax = fig.add_subplot(111)\n#     plt.gray()\n#     ax.imshow(ctxData, extent=(min(ulX,lrX),max(ulX,lrX),min(ulY,lrY),\n#                                      max(ulY,lrY)))\n#     CS = ax.contour(molaData, 20, cmap = cm.jet,\n#                      extent=(min(ulX,lrX),\n#                              max(ulX,lrX),\n#                              min(ulY,lrY),\n#                              max(ulY,lrY)),\n#                      origin='image' )\n#     plt.clabel(CS,fontsize=9, inline=1)\n#     plt.show()\n\n# def main(argv=None):\n#     \"\"\"docstring for main\"\"\"\n#     from mayavi import mlab\n\n#     if argv is None:\n#         argv = sys.argv\n\n#     x1 = x2 = y1 = y2 = 0\n#     fname = \"\"\n#     try:\n#         fname = argv[1]\n#         x1, x2, y1, y2 = [int(i) for i in argv[2:]]\n#     except:\n#         print(\"Usage: {0} fname x1 x2 y1 y2\".format(argv[0]))\n\n#     print(x1, x2, y1, y2)\n#     ds = gdal.Open(fname)\n#     band = ds.GetRasterBand(1)\n#     STORED_VALUE = band.ReadAsArray(x1, y1, x2 - x1, y2 - y1)\n#     ds = 0\n\n#     # PDS label infos:\n#     SCALING_FACTOR = 0.25\n#     OFFSET = -8000\n#     topo = (STORED_VALUE * SCALING_FACTOR) + OFFSET\n#     mlab.surf(topo, warp_scale=1 / 115.0, vmin=1700)\n#     mlab.colorbar(orientation=\"vertical\", title=\"Height [m]\", label_fmt=\"%4.0f\")\n#     mlab.show()",
    "crumbs": [
      "api",
      "Geotools"
    ]
  },
  {
    "objectID": "api/geotools.html#abbreviations",
    "href": "api/geotools.html#abbreviations",
    "title": "Geotools",
    "section": "",
    "text": "ul = Upper Left\nlr = LowerRight\n\n\nsource\n\n\n\n pixel_to_meter (sample, line, geotransform, shift=False)\n\nprovide point in map projection coordinates.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nsample\n\n\n\n\n\nline\n\n\n\n\n\ngeotransform\n\n\n\n\n\nshift\nbool\nFalse\n\n\n\nReturns\ntuple (x,y) coordinates in the projection of the dataset\n\n\n\n\n\n\nsource\n\n\n\n\n shift_to_center (x, y, geotransform)\n\n\nsource\n\n\n\n\n debug_srs (projection)\n\n*Correct wrong scale_factor in PolarStereographic data.\nSome PolarStereographic data have a 0 as a scale_factor in the projection (mostly MOLA), which is being corrected here. TODO: Check for being PolarStereographic before doing this!*\n\nsource\n\n\n\n\n get_sun_angles (spicer, img)\n\n*Calculate solar azimuth and incidence.\nBy requiring a spicer object for this function, it becomes independent from the solar system object where the calculations are made.*\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\nspicer\nspicer.Spicer\nneeds to be setup for time, but spoint is set from img.center in here.\n\n\nimg\ngeotools.ImgData\nThe image data of which the center point serves as the start point.\n\n\nReturns\ntuple(float, float)\nSolar azimuth, incidence [degrees]\n\n\n\n\nsource\n\n\n\n\n calculate_image_north_azimuth (img, zero='right')\n\n\nsource\n\n\n\n\n get_north_shifted_point (img, offset=0.001)\n\nIncreasing the latitude is a sure way of getting north.\n\nsource\n\n\n\n\n calculate_image_azimuth (origPoint, newPoint, zero='right')\n\n*Calculate azimuth angle between 2 image points.\nBeware that this function calculates trigonometric angles. If the points are from an image that has (0, 0) in the upper left, this means that the angles increase clockwise. That is why, for example, for an HiRISE image, the return of this function matches the angle rotation definition for HiRISE data.*\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\norigPoint\n\n\n\n\n\nnewPoint\n\n\n\n\n\nzero\nstr\nright\n\n\n\nReturns\nazimuth: \n\nAzimuth angle\n\n\n\n/home/runner/micromamba/envs/my-env/lib/python3.12/site-packages/fastcore/docscrape.py:225: UserWarning: Unknown section Requires\n  else: warn(msg)\n\nsource\n\n\n\n\n Point (sample=None, line=None, x=None, y=None, lon=None, lat=None,\n        geotrans=None, proj=None)\n\nPoint class to manage pixel and map points and their transformations.\n\nsource\n\n\n\n\n Window (ulPoint=None, lrPoint=None, centerPoint=None, width=None)\n\n*class to manage a window made of corner Points (objects of Point())\nwhen using width, only quadratic windows supported currently &gt;&gt;&gt; p1 = Point(0, 1) &gt;&gt;&gt; p2 = Point(10,20)*\n\nsource\n\n\n\n\n ImgData (fname=None)\n\ndocstring for ImgData\n\n# todo: Fix missing MOLA class\n#| export\n# class CTX(ImgData):\n#     \"\"\"docstring for CTX\"\"\"\n\n#     def __init__(self, fname):\n#         ImgData.__init__(self, fname)\n\n#     def add_mola_contours(self):\n#         self.window_coords_to_lonlat()\n#         mola = MOLA()\n#         mola.window = self.window.copy()\n#         mola.window_coords_to_pixel()\n#         mola.read_window(mola.window)\n#         mola.data = mola.data - mola.data.mean()\n#         fig = plt.figure(figsize=(10, 10))\n#         ax = fig.add_subplot(111)\n#         plt.gray()\n#         ax.imshow(self.data, extent=self.window.get_extent(self.dataset))\n#         CS = ax.contour(\n#             mola.data,\n#             8,\n#             cmap=cm.jet,\n#             extent=self.window.get_extent(self.dataset),\n#             origin=\"image\",\n#         )\n#         plt.clabel(CS, fontsize=13, inline=1)\n#         ax.set_xlabel(\"Polar stereographic X [km]\")\n#         ax.set_ylabel(\"Polar stereographic Y [km]\")\n#         ax.set_title(\"CTX: \" + os.path.basename(self.fname))\n#         self.ax = ax\n#         plt.show()\n\n\n# def combine_ctx_and_mola(ctxFilename, ctxSample, ctxLine, ctxWidth):\n#     \"\"\"combine CTX and MOLA data.\n#\n#     MOLA and CTX data will be combined with these tools.\n#     User shall provide line,sample center coordinate of CTX file ROI to\n#     define distance in meters from southpole.\n#     \"\"\"\n#\n#     ctx = CTX(ctxFilename)\n#     mola = MOLA()\n#     ctxULsample, ctxULline, ctxLRsample, ctxLRline = \\\n#         get_corners_from_center(ctxSample, ctxLine, ctxWidth)\n#     ulX,ulY = get_coords_from_pixels(ctxDS, ctxULsample, ctxULline)\n#     lrX,lrY = get_coords_from_pixels(ctxDS, ctxLRsample, ctxLRline)\n#\n#     molaULsample,molaULline = get_pixels_from_coords(molaDS,ulX,ulY)\n#     molaLRsample,molaLRline = get_pixels_from_coords(molaDS,lrX,lrY)\n#     print(ctxULsample, ctxULline, ctxLRsample, ctxLRline)\n#     print(molaULsample, molaULline,molaLRsample, molaLRline)\n#     print(ulX,ulY,lrX,lrY)\n#     ctxData = ctxDS.ReadAsArray(ctxULsample,ctxULline,ctxWidth,ctxWidth)\n#     molaData = molaDS.ReadAsArray(int(molaULsample)+1,int(molaULline),\n#                                   int(molaLRsample - molaULsample),\n#                                   int(molaLRline - molaULline))\n#\n#     molaData = molaData - molaData.mean()\n#\n#     # x = np.arange(ulX,lrX)\n#     # y = np.arange(lrY,ulY)\n#     # X, Y = np.meshgrid(x,y)\n#     # plotting\n#     fig = plt.figure(figsize=(10,10))\n#     ax = fig.add_subplot(111)\n#     plt.gray()\n#     ax.imshow(ctxData, extent=(min(ulX,lrX),max(ulX,lrX),min(ulY,lrY),\n#                                      max(ulY,lrY)))\n#     CS = ax.contour(molaData, 20, cmap = cm.jet,\n#                      extent=(min(ulX,lrX),\n#                              max(ulX,lrX),\n#                              min(ulY,lrY),\n#                              max(ulY,lrY)),\n#                      origin='image' )\n#     plt.clabel(CS,fontsize=9, inline=1)\n#     plt.show()\n\n# def main(argv=None):\n#     \"\"\"docstring for main\"\"\"\n#     from mayavi import mlab\n\n#     if argv is None:\n#         argv = sys.argv\n\n#     x1 = x2 = y1 = y2 = 0\n#     fname = \"\"\n#     try:\n#         fname = argv[1]\n#         x1, x2, y1, y2 = [int(i) for i in argv[2:]]\n#     except:\n#         print(\"Usage: {0} fname x1 x2 y1 y2\".format(argv[0]))\n\n#     print(x1, x2, y1, y2)\n#     ds = gdal.Open(fname)\n#     band = ds.GetRasterBand(1)\n#     STORED_VALUE = band.ReadAsArray(x1, y1, x2 - x1, y2 - y1)\n#     ds = 0\n\n#     # PDS label infos:\n#     SCALING_FACTOR = 0.25\n#     OFFSET = -8000\n#     topo = (STORED_VALUE * SCALING_FACTOR) + OFFSET\n#     mlab.surf(topo, warp_scale=1 / 115.0, vmin=1700)\n#     mlab.colorbar(orientation=\"vertical\", title=\"Height [m]\", label_fmt=\"%4.0f\")\n#     mlab.show()",
    "crumbs": [
      "api",
      "Geotools"
    ]
  },
  {
    "objectID": "api/pds.indexes.html",
    "href": "api/pds.indexes.html",
    "title": "PDS Indexes",
    "section": "",
    "text": "source\n\nIndex\n\n Index (key:str, url:str=None, check_update:bool=True)\n\n*Index manager class.\nThis class manages one index, identified by a dotted key, e.g. cassini.iss.ring_summary*\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nkey\nstr\n\nNested (dotted) key, e.g. cassini.iss.ring_summary\n\n\nurl\nstr\nNone\nURL to index. If not given, will be read from config object.\n\n\ncheck_update\nbool\nTrue\nswitch if dynamic URLS will be derived upon start\n\n\n\n\nsource\n\n\nIndex.parse_key\n\n Index.parse_key (key:str)\n\n*Take care of different ways how the key could be structured.\nThis involves adding the sub-key indexes for the config file structure, which is something the user of this class should not need to know.*\n\n\n\n\nType\nDetails\n\n\n\n\nkey\nstr\ndotted key\n\n\n\n\nsource\n\n\nIndex.download\n\n Index.download ()\n\nWrapping URLs for downloading PDS indices and their label files.\n\nsource\n\n\nIndex.update_available\n\n Index.update_available ()\n\nProperty indicating if the index needs to be downloaded.\n\nkey = \"missions.cassini.iss.indexes.moon_summary\"\nkey = \"missions.lro.lroc.edr\"\n\n\nindex = Index(key, check_update=True)\nindex\n\nKey: missions.lro.lroc.indexes.edr\nURL: http://pds.lroc.asu.edu/data/LRO-L-LROC-2-EDR-V1.0/LROLRC_0048C/INDEX/CUMINDEX.LBL\nTimestamp: 2023-10-10 15:30:56.195462\n\n\n\nindex.key\n\n'missions.lro.lroc.indexes.edr'\n\n\n\nindex.label_filename\n\nPath('CUMINDEX.LBL')\n\n\n\nindex.url\n\n'http://pds.lroc.asu.edu/data/LRO-L-LROC-2-EDR-V1.0/LROLRC_0048C/INDEX/CUMINDEX.LBL'\n\n\n\nindex.local_dir\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/lro/lroc/indexes/edr')\n\n\n\nif index.check_update and index.update_available:\n    index.download()\n\nThe key can be provided * with or without the leading ‘missions’ * with or without the internal indexes level of the config file\n\nIndex(\"cassini.iss.moon_summary\")\n\nKey: missions.cassini.iss.indexes.moon_summary\nURL: https://pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2999/COISS_2999_moon_summary.lbl\nTimestamp: 2019-06-08 16:28:22\n\n\n\nIndex(\"cassini.iss.indexes.moon_summary\")\n\nKey: missions.cassini.iss.indexes.moon_summary\nURL: https://pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2999/COISS_2999_moon_summary.lbl\nTimestamp: 2019-06-08 16:28:22\n\n\n\nindex.isotimestamp\n\n'2023-10-10T15:30:56.195462'\n\n\n\nindex.mission_key\n\n'lro'\n\n\n\nindex.local_dir\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/lro/lroc/indexes/edr')\n\n\n\nindex.key_tokens[:2]\n\n['missions', 'lro']\n\n\n\nindex.instrument_key\n\n'lro.lroc'\n\n\n\nconfig.get_value(index.instrument_key)\n\n{'indexes': {'edr': {'url': 'http://pds.lroc.asu.edu/data/LRO-L-LROC-2-EDR-V1.0/LROLRC_0048C/INDEX/CUMINDEX.LBL', 'timestamp': '2023-10-10T15:30:56.195462'}}}\n\n\n\nindex = Index('mro.ctx.edr', check_update=False)\n\n\nindex.url\n\n''\n\n\n\nindex.label_filename\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/missions/mro/ctx/indexes/edr/cumindex.lbl')\n\n\n\nlist(index.local_dir.glob(\"*.[lL][bB][lL]\"))\n\n[Path('/home/ayek72/mnt/slowdata/planetarypy/missions/mro/ctx/indexes/edr/cumindex.lbl')]",
    "crumbs": [
      "api",
      "PDS Indexes"
    ]
  },
  {
    "objectID": "api/pds.apps.html",
    "href": "api/pds.apps.html",
    "title": "Apps",
    "section": "",
    "text": "source\n\nfind_indexes\n\n find_indexes (instrument:str)\n\nFind existing indexes for an instrument.\n\n\n\n\nType\nDetails\n\n\n\n\ninstrument\nstr\nDotted mission.instrument key, e.g. cassini.iss\n\n\nReturns\nlist\nList of configured index names\n\n\n\n\nfind_indexes(\"cassini.iss\")\n\n['index', 'inventory', 'moon_summary', 'ring_summary', 'saturn_summary']\n\n\n\nfind_indexes(\"mro.ctx\")\n\n['edr']\n\n\n\nsource\n\n\nget_index\n\n get_index (instr:str, index_name:str='', refresh:bool=True,\n            force:bool=False)\n\nExample: get_index(“cassini.iss”, “index”)\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ninstr\nstr\n\nDotted instrument index, e.g. cassini.iss\n\n\nindex_name\nstr\n\nIndex name, for exmample ‘moon_summary. Optional’\n\n\nrefresh\nbool\nTrue\nswitch to refresh an index (i.e. download if update available).Set to False for faster return time to avoid web scraping\n\n\nforce\nbool\nFalse\nswitch off for faster return time.\n\n\nReturns\nDataFrame\n\nThe PDS index convert to pandas DataFrame\n\n\n\n\ninstr = \"cassini.iss\"\nindex_name = \"moon_summary\"\n\n\nindex = get_index(instr, index_name, refresh=False)\n\n\nindex\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_SPECIFICATION_NAME\nOPUS_ID\nTARGET_NAME\nMINIMUM_PLANETOCENTRIC_LATITUDE\nMAXIMUM_PLANETOCENTRIC_LATITUDE\nMINIMUM_PLANETOGRAPHIC_LATITUDE\nMAXIMUM_PLANETOGRAPHIC_LATITUDE\nMINIMUM_IAU_LONGITUDE\nMAXIMUM_IAU_LONGITUDE\n...\nMAXIMUM_EMISSION_ANGLE\nSUB_SOLAR_PLANETOCENTRIC_LATITUDE\nSUB_SOLAR_PLANETOGRAPHIC_LATITUDE\nSUB_OBSERVER_PLANETOCENTRIC_LATITUDE\nSUB_OBSERVER_PLANETOGRAPHIC_LATITUDE\nSUB_SOLAR_IAU_LONGITUDE\nSUB_OBSERVER_IAU_LONGITUDE\nCENTER_RESOLUTION\nCENTER_DISTANCE\nCENTER_PHASE_ANGLE\n\n\n\n\n0\nCOISS_2001\ndata/1454725799_1455008789/N1454725799_1.LBL\nco-iss-n1454725799\nRHEA\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n-999.0\n-25.206\n-25.442\n-16.566\n-16.558\n183.907\n252.947\n423.6356\n70701354.366\n64.429\n\n\n1\nCOISS_2001\ndata/1454725799_1455008789/N1454725799_1.LBL\nco-iss-n1454725799\nHELENE\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n-999.0\n-25.532\n-50.716\n-16.532\n-36.57\n148.17\n217.149\n424.36902\n70823757.002\n64.345\n\n\n2\nCOISS_2001\ndata/1454725799_1455008789/N1454725799_1.LBL\nco-iss-n1454725799\nTELESTO\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n-999.0\n-26.061\n-51.51\n-15.639\n-21.616\n189.199\n257.807\n424.28746\n70810144.519\n64.28\n\n\n3\nCOISS_2001\ndata/1454725799_1455008789/N1454726579_1.LBL\nco-iss-n1454726579\nTITAN\n-36.111\n-36.111\n-36.111\n-36.111\n0.0\n360.0\n...\n54.704\n-25.325\n-25.325\n-16.28\n-16.28\n340.092\n47.855\n428.89673\n71579395.066\n63.37\n\n\n4\nCOISS_2001\ndata/1454725799_1455008789/N1454727359_1.LBL\nco-iss-n1454727359\nHYPERION\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n-999.0\n11.777\n25.907\n44.104\n57.544\n173.985\n237.769\n418.94545\n69918606.586\n63.093\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n385714\nCOISS_2116\ndata/1884017637_1884113741/N1884017911_1.LBL\nco-iss-n1884017911\nTITAN\n-14.352\n72.101\n-14.352\n72.101\n229.956\n329.975\n...\n89.069\n26.644\n26.644\n23.599\n23.599\n32.084\n299.389\n4.64069\n774493.2\n81.887\n\n\n385715\nCOISS_2116\ndata/1884017637_1884113741/N1884018021_1.LBL\nco-iss-n1884018021\nTITAN\n-14.597\n71.882\n-14.597\n71.882\n230.932\n330.255\n...\n88.913\n26.644\n26.644\n23.594\n23.594\n32.107\n299.415\n4.64263\n774816.731\n81.888\n\n\n385716\nCOISS_2116\ndata/1884017637_1884113741/N1884018579_1.LBL\nco-iss-n1884018579\nTITAN\n-14.435\n72.643\n-14.435\n72.643\n228.942\n330.644\n...\n88.869\n26.644\n26.644\n23.57\n23.57\n32.217\n299.536\n9.30328\n776321.466\n81.889\n\n\n385717\nCOISS_2116\ndata/1884017637_1884113741/N1884091792_1.LBL\nco-iss-n1884091792\nDAPHNIS\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n-999.0\n...\n-999.0\n26.684\n39.966\n25.321\n38.64\n294.939\n124.641\n4.56619\n762060.157\n127.157\n\n\n385718\nCOISS_2116\ndata/1884017637_1884113741/N1884109343_1.LBL\nco-iss-n1884109343\nPANDORA\n40.384\n63.749\n56.973\n76.952\n0.0\n360.0\n...\n62.435\n26.686\n49.386\n33.095\n53.259\n335.495\n142.016\n3.45805\n577120.582\n118.858\n\n\n\n\n385719 rows × 35 columns\n\n\n\n\nIndexes can be given as 2 parameters (“cassini.iss”, “ring_summary”) or one (“cassini.iss.ring_summary”):\n\nindex = get_index(\"cassini.iss\", \"ring_summary\", refresh=False)\nindex.head()\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_SPECIFICATION_NAME\nOPUS_ID\nMINIMUM_RIGHT_ASCENSION\nMAXIMUM_RIGHT_ASCENSION\nMINIMUM_DECLINATION\nMAXIMUM_DECLINATION\nMINIMUM_RING_RADIUS\nMAXIMUM_RING_RADIUS\nFINEST_RING_INTERCEPT_RESOLUTION\n...\nRING_CENTER_DISTANCE\nSUB_SOLAR_RING_LONGITUDE\nSUB_OBSERVER_RING_LONGITUDE\nRING_CENTER_PHASE_ANGLE\nRING_CENTER_INCIDENCE_ANGLE\nRING_CENTER_NORTH_BASED_INCIDENCE_ANGLE\nRING_CENTER_EMISSION_ANGLE\nRING_CENTER_NORTH_BASED_EMISSION_ANGLE\nSOLAR_RING_OPENING_ANGLE\nOBSERVER_RING_OPENING_ANGLE\n\n\n\n\n0\nCOISS_2001\ndata/1454725799_1455008789/N1454725799_1.LBL\nco-iss-n1454725799\n35.528398\n35.905555\n9.719637\n10.091212\n205899.335\n1098621.586\n419.0137\n...\n70874998.947\n284.523\n215.951\n64.07\n64.589\n115.411\n73.676\n106.324\n-25.411\n-16.324\n\n\n1\nCOISS_2001\ndata/1454725799_1455008789/N1454726579_1.LBL\nco-iss-n1454726579\n36.662898\n37.039038\n9.590114\n9.960833\n721136.155\n1745689.307\n421.97145\n...\n70870851.371\n284.524\n215.951\n64.07\n64.589\n115.411\n73.676\n106.324\n-25.411\n-16.324\n\n\n2\nCOISS_2001\ndata/1454725799_1455008789/N1454727359_1.LBL\nco-iss-n1454727359\n36.928066\n37.304334\n9.879593\n10.25011\n1042341.438\n2186830.92\n414.79041\n...\n70866703.094\n284.524\n215.951\n64.071\n64.589\n115.411\n73.676\n106.324\n-25.411\n-16.324\n\n\n3\nCOISS_2001\ndata/1454725799_1455008789/N1454728139_1.LBL\nco-iss-n1454728139\n28.10042\n28.479618\n6.224709\n6.601574\n-999.0\n-999.0\n-999.0\n...\n70862557.207\n284.524\n215.951\n64.071\n64.589\n115.411\n73.676\n106.324\n-25.411\n-16.324\n\n\n4\nCOISS_2001\ndata/1454725799_1455008789/N1454728919_1.LBL\nco-iss-n1454728919\n37.981418\n38.357791\n10.611947\n10.981697\n3865717.589\n3905151.343\n405.91234\n...\n70858406.794\n284.525\n215.951\n64.071\n64.589\n115.411\n73.676\n106.324\n-25.411\n-16.324\n\n\n\n\n5 rows × 59 columns\n\n\n\n\n\nindex = get_index(\"cassini.iss.ring_summary\", refresh=False)\nindex.head()\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_SPECIFICATION_NAME\nOPUS_ID\nMINIMUM_RIGHT_ASCENSION\nMAXIMUM_RIGHT_ASCENSION\nMINIMUM_DECLINATION\nMAXIMUM_DECLINATION\nMINIMUM_RING_RADIUS\nMAXIMUM_RING_RADIUS\nFINEST_RING_INTERCEPT_RESOLUTION\n...\nRING_CENTER_DISTANCE\nSUB_SOLAR_RING_LONGITUDE\nSUB_OBSERVER_RING_LONGITUDE\nRING_CENTER_PHASE_ANGLE\nRING_CENTER_INCIDENCE_ANGLE\nRING_CENTER_NORTH_BASED_INCIDENCE_ANGLE\nRING_CENTER_EMISSION_ANGLE\nRING_CENTER_NORTH_BASED_EMISSION_ANGLE\nSOLAR_RING_OPENING_ANGLE\nOBSERVER_RING_OPENING_ANGLE\n\n\n\n\n0\nCOISS_2001\ndata/1454725799_1455008789/N1454725799_1.LBL\nco-iss-n1454725799\n35.528398\n35.905555\n9.719637\n10.091212\n205899.335\n1098621.586\n419.0137\n...\n70874998.947\n284.523\n215.951\n64.07\n64.589\n115.411\n73.676\n106.324\n-25.411\n-16.324\n\n\n1\nCOISS_2001\ndata/1454725799_1455008789/N1454726579_1.LBL\nco-iss-n1454726579\n36.662898\n37.039038\n9.590114\n9.960833\n721136.155\n1745689.307\n421.97145\n...\n70870851.371\n284.524\n215.951\n64.07\n64.589\n115.411\n73.676\n106.324\n-25.411\n-16.324\n\n\n2\nCOISS_2001\ndata/1454725799_1455008789/N1454727359_1.LBL\nco-iss-n1454727359\n36.928066\n37.304334\n9.879593\n10.25011\n1042341.438\n2186830.92\n414.79041\n...\n70866703.094\n284.524\n215.951\n64.071\n64.589\n115.411\n73.676\n106.324\n-25.411\n-16.324\n\n\n3\nCOISS_2001\ndata/1454725799_1455008789/N1454728139_1.LBL\nco-iss-n1454728139\n28.10042\n28.479618\n6.224709\n6.601574\n-999.0\n-999.0\n-999.0\n...\n70862557.207\n284.524\n215.951\n64.071\n64.589\n115.411\n73.676\n106.324\n-25.411\n-16.324\n\n\n4\nCOISS_2001\ndata/1454725799_1455008789/N1454728919_1.LBL\nco-iss-n1454728919\n37.981418\n38.357791\n10.611947\n10.981697\n3865717.589\n3905151.343\n405.91234\n...\n70858406.794\n284.525\n215.951\n64.071\n64.589\n115.411\n73.676\n106.324\n-25.411\n-16.324\n\n\n\n\n5 rows × 59 columns\n\n\n\n\n\nget_index(\"mro.ctx.edr\", refresh=False)\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_SPECIFICATION_NAME\nORIGINAL_PRODUCT_ID\nPRODUCT_ID\nIMAGE_TIME\nINSTRUMENT_ID\nINSTRUMENT_MODE_ID\nLINE_SAMPLES\nLINES\nSPATIAL_SUMMING\n...\nSUB_SOLAR_LATITUDE\nSUB_SPACECRAFT_LONGITUDE\nSUB_SPACECRAFT_LATITUDE\nSOLAR_DISTANCE\nSOLAR_LONGITUDE\nLOCAL_TIME\nIMAGE_SKEW_ANGLE\nRATIONALE_DESC\nDATA_QUALITY_DESC\nORBIT_NUMBER\n\n\n\n\n0\nMROX_0001\nDATA/CRU_000001_9999_XN_99N999W.IMG\n4A_04_0001000400\nCRU_000001_9999_XN_99N999W\n2005-08-30 15:40:21.549\nCTX\nNIFL\n5056\n1024\n1\n...\n0.0\n0.0\n0.0\n0.0\n278.89\n10.16\n0.0\nInstrument checkout image of space\nOK\n-4242\n\n\n1\nMROX_0001\nDATA/CRU_000002_9999_XN_99N999W.IMG\n4A_04_0001000500\nCRU_000002_9999_XN_99N999W\n2005-09-08 15:59:45.313\nCTX\nNIFL\n5056\n15360\n1\n...\n0.0\n0.0\n0.0\n0.0\n284.48\n4.6\n0.0\nCalibration image of the Moon\nOK\n-4126\n\n\n2\nMROX_0001\nDATA/CRU_000003_9999_XN_99N999W.IMG\n4A_04_0001000600\nCRU_000003_9999_XN_99N999W\n2005-09-08 16:03:37.927\nCTX\nNIFL\n5056\n2048\n1\n...\n0.0\n0.0\n0.0\n0.0\n284.48\n4.66\n0.0\nCalibration image of Omega Centauri (globular ...\nOK\n-4126\n\n\n3\nMROX_0001\nDATA/CRU_000004_9999_XN_99N999W.IMG\n4A_04_0001000700\nCRU_000004_9999_XN_99N999W\n2005-09-08 16:08:23.841\nCTX\nNIFL\n5056\n2048\n1\n...\n0.0\n0.0\n0.0\n0.0\n284.48\n4.74\n0.0\nCalibration image of Omega Centauri (globular ...\nOK\n-4126\n\n\n4\nMROX_0001\nDATA/CRU_000005_9999_XN_99N999W.IMG\n4A_04_0001000800\nCRU_000005_9999_XN_99N999W\n2005-09-08 16:11:18.649\nCTX\nNIFL\n5056\n21504\n1\n...\n0.0\n0.0\n0.0\n0.0\n284.48\n4.79\n0.0\nCalibration image of the Moon\nOK\n-4126\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n138410\nMROX_4461\nDATA/U14_076622_1804_XN_00N105W.IMG\n4A_04_118404B100\nU14_076622_1804_XN_00N105W\n2022-11-30 17:29:26.742\nCTX\nNIFL\n5056\n33792\n1\n...\n-5.6\n105.05\n0.45\n228081883.9\n346.9\n14.39\n89.7\nTerrain northwest of Noctis Labyrinthus\nOK\n76622\n\n\n138411\nMROX_4461\nDATA/U14_076622_2009_XI_20N108W.IMG\n4A_04_118504B200\nU14_076622_2009_XI_20N108W\n2022-11-30 17:36:13.062\nCTX\nITL\n5056\n7168\n1\n...\n-5.6\n107.61\n20.98\n228082990.5\n346.9\n14.3\n90.1\nCandidate impact site formed at most between M...\nOK\n76622\n\n\n138412\nMROX_4461\nDATA/U14_076623_1977_XN_17N133W.IMG\n4A_04_118404B300\nU14_076623_1977_XN_17N133W\n2022-11-30 19:26:53.410\nCTX\nNIFL\n5056\n35840\n1\n...\n-5.59\n134.45\n17.69\n228097986.1\n346.94\n14.37\n90.1\nRide-along with HiRISE\nOK\n76623\n\n\n138413\nMROX_4461\nDATA/U14_076625_1182_XN_61S177W.IMG\n4A_04_118404B800\nU14_076625_1182_XN_61S177W\n2022-11-30 22:46:27.741\nCTX\nNIFL\n5056\n52224\n1\n...\n-5.56\n177.43\n-61.87\n228126022.3\n347.01\n14.71\n90.4\nSouthern highlands\nOK\n76625\n\n\n138414\nMROX_4461\nDATA/U14_076625_1714_XN_08S185W.IMG\n4A_04_118404B900\nU14_076625_1714_XN_08S185W\n2022-11-30 23:02:50.690\nCTX\nNIFL\n5056\n52224\n1\n...\n-5.55\n185.83\n-8.75\n228127015.7\n347.02\n14.45\n90.5\nRide-along with HiRISE\nOK\n76625\n\n\n\n\n138415 rows × 51 columns\n\n\n\n\n\nsource\n\n\nfind_instruments\n\n find_instruments (mission:str)\n\nFind existing instruments for a mission.\n\n\n\n\nType\nDetails\n\n\n\n\nmission\nstr\nMission string, e.g. “cassini”\n\n\nReturns\nlist\nList of configured instrument names\n\n\n\n\nfind_instruments(\"cassini\")\n\n['iss', 'uvis']\n\n\n\nfind_instruments(\"mro\")\n\n['hirise', 'ctx']\n\n\n\nfrom nbdev import nbdev_export\nnbdev_export()",
    "crumbs": [
      "api",
      "Apps"
    ]
  },
  {
    "objectID": "api/pds.ctx_index.html",
    "href": "api/pds.ctx_index.html",
    "title": "CTX Index",
    "section": "",
    "text": "source\n\nCTXIndex\n\n CTXIndex ()\n\nInitialize self. See help(type(self)) for accurate signature.\n\nctx = CTXIndex()\n\n\nctx.volumes_table\n\n\n\n\n\n\n\n\n\nName\nLast modified\n\n\n\n\n2\nmrox_0001/\n05-Jun-2007 10:15\n\n\n3\nmrox_0001_md5.txt\n10-Dec-2019 04:32\n\n\n4\nmrox_0002/\n05-Jun-2007 10:15\n\n\n5\nmrox_0002_md5.txt\n09-Dec-2019 19:14\n\n\n6\nmrox_0003/\n05-Jun-2007 10:15\n\n\n...\n...\n...\n\n\n9515\nmrox_4757_md5.txt\n15-Nov-2023 23:23\n\n\n9516\nmrox_4758/\n15-Nov-2023 23:08\n\n\n9517\nmrox_4758_md5.txt\n15-Nov-2023 23:23\n\n\n9518\nmrox_4759/\n15-Nov-2023 23:10\n\n\n9519\nmrox_4759_md5.txt\n15-Nov-2023 23:23\n\n\n\n\n9518 rows × 2 columns\n\n\n\n\n\nctx.latest_release_folder\n\n'mrox_4759/'\n\n\n\nctx.latest_release_number\n\n'4759'\n\n\n\nctx.latest_index_label_url\n\nURL('https://planetarydata.jpl.nasa.gov/img/data/mro/mars_reconnaissance_orbiter/ctx/mrox_4759/index/cumindex.lbl')"
  },
  {
    "objectID": "api/exceptions.html",
    "href": "api/exceptions.html",
    "title": "Package exceptions",
    "section": "",
    "text": "source\n\nMissingParameterError\n\n MissingParameterError (txt)\n\nBase class for exceptions in this module.\n\nsource\n\n\nSpiceError\n\n SpiceError (function)\n\nBase class for exceptions in this module.\n\nsource\n\n\nObserverNotSetError\nBase class for exceptions in this module.\n\nsource\n\n\nSPointNotSetError\nBase class for exceptions in this module.\n\nsource\n\n\nSpicerError\nBase class for exceptions in this module.\n\nsource\n\n\nGeoTransformNotSetError\n\n GeoTransformNotSetError (where, what)\n\n*Exception raised for errors in the input of transformations.\nAttributes: where – where is something missing what – what is missing*\n\nsource\n\n\nProjectionNotSetError\n\n ProjectionNotSetError (where, what)\n\n*Exception raised for errors in the input of transformations.\nAttributes: where – where is something missing what – what is missing*\n\nsource\n\n\nSomethingNotSetError\n\n SomethingNotSetError (where, what)\n\n*Exception raised for errors in the input of transformations.\nAttributes: where – where is something missing what – what is missing*\n\nsource\n\n\nError\nBase class for exceptions in this module.",
    "crumbs": [
      "api",
      "Package exceptions"
    ]
  },
  {
    "objectID": "api/ctx.html",
    "href": "api/ctx.html",
    "title": "CTX",
    "section": "",
    "text": "import pandas as pd\n\npd.set_option(\"display.max_columns\", 1000)\nsource",
    "crumbs": [
      "api",
      "CTX"
    ]
  },
  {
    "objectID": "api/ctx.html#command-line-interfaces",
    "href": "api/ctx.html#command-line-interfaces",
    "title": "CTX",
    "section": "Command line interfaces",
    "text": "Command line interfaces\n\nsource\n\nctx_calib\n\n ctx_calib (pid:str, source:str='', proc_root:str='',\n            overwrite:bool=False)\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\npid\nstr\n\nCTX product_id\n\n\nsource\nstr\n\npath to where EDRs are stored if not from plpy\n\n\nproc_root\nstr\n\npath to where processed data is to be stored\n\n\noverwrite\nbool\nFalse\noverwrite processed data\n\n\n\n\nctx_calib(pid, overwrite=True)\n\n\nfrom nbdev import nbdev_export\n\nnbdev_export()",
    "crumbs": [
      "api",
      "CTX"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html",
    "href": "tutorials/pdw_2023.html",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "",
    "text": "PlanetaryPy organization is community effort to\n\ndevelop a core Python package for planetary science\nhelp other planetary science Python programmers to disseminate their work\n\nThis talk is about the core package status only.",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html#what-is-this",
    "href": "tutorials/pdw_2023.html#what-is-this",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "",
    "text": "PlanetaryPy organization is community effort to\n\ndevelop a core Python package for planetary science\nhelp other planetary science Python programmers to disseminate their work\n\nThis talk is about the core package status only.",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html#core-package-work-plan",
    "href": "tutorials/pdw_2023.html#core-package-work-plan",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "Core package work plan",
    "text": "Core package work plan\n\nI am since long working on a core package draft.\nNothing is especially clever, the structured unification is the clue!\nShall be submitted (done?) to the community members for review.\nAfter successful review open for public pull requests and hackathons.",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html#core-package-focal-points",
    "href": "tutorials/pdw_2023.html#core-package-focal-points",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "Core package focal points",
    "text": "Core package focal points\n\nEasier access, download, and local management of\n\nPDS data\nSPICE kernels\n\nRemoving need to learn various web interfaces for different data\nWorking easier with collections of PDS data\nEasy basic SPICE calculations with human readable I/F\nSome web and time related utilities",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html#pds-indexes-1",
    "href": "tutorials/pdw_2023.html#pds-indexes-1",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "PDS Indexes",
    "text": "PDS Indexes\n\n\n\nPDS Indexes contain useful meta-data for PDS datasets\nplanetarypy provides access to these via a config file\n\npull requests to config file will add more findable indices!\n\nconfig file tells planetarypy where to find index\n\n\n\nplanetarypy downloads index file and\nstored as parquet file, ready for pandas based analysis.\ntells user when new index is available",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html#example-use",
    "href": "tutorials/pdw_2023.html#example-use",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "Example use",
    "text": "Example use\n\nfrom planetarypy.pds.apps import get_index\n\ndf = get_index(\"cassini.iss\", \"index\")\nprint(df.info())\ndf.head(3)[\"FILE_NAME IMAGE_MID_TIME IMAGE_OBSERVATION_TYPE\".split()]\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 407299 entries, 0 to 407298\nColumns: 140 entries, FILE_NAME to STANDARD_DATA_PRODUCT_ID\ndtypes: Float64(70), Int64(20), datetime64[ns](7), string(43)\nmemory usage: 470.0 MB\nNone\n\n\n\n\n\n\n\n\n\n\nFILE_NAME\nIMAGE_MID_TIME\nIMAGE_OBSERVATION_TYPE\n\n\n\n\n0\nN1454725799_1.IMG\n2004-02-06 02:07:06.458\nOPNAV\n\n\n1\nN1454726579_1.IMG\n2004-02-06 02:20:06.362\nOPNAV\n\n\n2\nN1454727359_1.IMG\n2004-02-06 02:33:06.397\nOPNAV",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html#instrument-data-1",
    "href": "tutorials/pdw_2023.html#instrument-data-1",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "Instrument data",
    "text": "Instrument data\n\nMeant to serve as basic data access, read, and access classes\n\nto be boosted in the future by the GOAT PDS reader pdr by Million, Inc.\n\nconfig file controls what data levels are accessible\n\nand how they are stored locally\n\ncurrently CTX, HiRISE, UVIS, CISS are supported (Diviner in the works)",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html#example-use-hirise",
    "href": "tutorials/pdw_2023.html#example-use-hirise",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "Example use HiRISE",
    "text": "Example use HiRISE\n\nfrom planetarypy.hirise import ProductPathfinder as PPF\n\nppf = PPF(\"PSP_003092_0985_RED\")\n\nprint(ppf.jp2_path)\nprint(ppf.homepage)\nprint(ppf.abrowse_path)\nprint(ppf.nomap_thumbnail_path)\n\n\n\n\n\n\n\n\n\n\nRDR/PSP/ORB_003000_003099/PSP_003092_0985/PSP_003092_0985_RED.JP2\nhttps://uahirise.org/PSP_003092_0985\nEXTRAS/RDR/PSP/ORB_003000_003099/PSP_003092_0985/PSP_003092_0985_RED.abrowse.jpg\nEXTRAS/RDR/PSP/ORB_003000_003099/PSP_003092_0985/PSP_003092_0985_RED.NOMAP.thumb.jpg",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html#example-use-ctxcollection",
    "href": "tutorials/pdw_2023.html#example-use-ctxcollection",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "Example use CTXCollection",
    "text": "Example use CTXCollection\n\nfrom planetarypy.ctx import CTXCollection\n\ncoll = CTXCollection.by_month(\"F01\")\nprint(coll.n_items)\nprint(len(coll.get_corrupted()))\n\n1321\n35",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html#archived-spice-kernel-sets",
    "href": "tutorials/pdw_2023.html#archived-spice-kernel-sets",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "Archived SPICE kernel sets",
    "text": "Archived SPICE kernel sets\n\n\n\nNAIF offers archived mission kernel sets for 33 missions:\nKernels can be subset by time window using Subset link.\nplanetarypy offers programmatic wrapper around subset feature.\n\n\n\nZip file unpacked.\nKernel files stored locally and logically.\nMeta-kernel edited appropriately and immediately loadable.",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html#example-use-1",
    "href": "tutorials/pdw_2023.html#example-use-1",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "Example use",
    "text": "Example use\n\nfrom planetarypy.spice import kernels\n\nkernels.datasets.drop(\"path\", axis=1).head()\n\n\n\n\n\n\n\n\n\nMission Name\nPDS3 or PDS4\nData Size (GB)\nStart Time\nStop Time\n\n\nshorthand\n\n\n\n\n\n\n\n\n\nbc\nBepiColombo\n4\n2.3\n2018-10-20\n2023-06-21\n\n\ncassini\nCassini Orbiter\n3\n62.5\n1997-10-15\n2017-09-15\n\n\nclementine\nClementine\n3\n0.8\n1994-01-26\n1994-05-07\n\n\ndart\nDART\n4\n10.0\n2021-11-09\n2050-01-01\n\n\ndawn\nDAWN\n3\n86.4\n2007-09-27\n2018-10-31\n\n\n\n\n\n\n\n\n\nTwo main user functions:\n\nget_metakernel_and_files\n\nwill check if the kernel files are already locally available\nif not, download kernels\nreturns the path to the edited meta-kernel\n\nlist_kernels_for_day\n\nwill only list kernel filenames valid for the given day",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html#generic-kernels",
    "href": "tutorials/pdw_2023.html#generic-kernels",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "Generic kernels",
    "text": "Generic kernels\n\nManages a minimal set for basic illumination calculations\nCurrently slightly biased for Mars but many other bodies work\nKernels are automatically downloaded and loaded when needed.",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw_2023.html#example-use-2",
    "href": "tutorials/pdw_2023.html#example-use-2",
    "title": "On the way to a core PlanetaryPy Package",
    "section": "Example use",
    "text": "Example use\n\nfrom planetarypy.spice.spicer import MoonSpicer\n\nmoon = MoonSpicer(\"2022-02-22\")\nprint(f\"Sol. const: {moon.solar_constant:.1f}\")\nmoon.set_spoint_by(lat=0, lon=0)\nmoon.aspect = 180\nmoon.tilt = 30\nprint(f\"Irradiance on tilted surface element: {moon.F_tilt:.1f}\")\n\nSol. const: 1388.4 W / m2\nIrradiance on tilted surface element: 412.5 W / m2",
    "crumbs": [
      "tutorials",
      "On the way to a core PlanetaryPy Package"
    ]
  },
  {
    "objectID": "tutorials/pdw2023_demo.html",
    "href": "tutorials/pdw2023_demo.html",
    "title": "Demo of PlanetaryPy",
    "section": "",
    "text": "import planetarypy as plpy\nplpy.__version__\n\n'0.30.0'\nfrom planetarypy.pds.apps import get_index, find_indexes\n!head -n 50 $HOME/.planetarypy_config.toml\n\nstorage_root = \"/home/ayek72/mnt/slowdata/planetarypy\"\n\n[missions.cassini.iss.indexes.index]\n# 'index' is the ID of the originally delivered index\n# inventory, moon_summary, ring_summary, and saturn_summary are other indexes produced\n# by the Rings-Moons Systems PDS node\nurl = \"https://pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2999/COISS_2999_index.lbl\"\ntimestamp = \"2021-02-21T15:55:27\"\n\n[missions.cassini.iss.indexes.inventory]\nurl = \"https://pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2999/COISS_2999_inventory.lbl\"\n\n[missions.cassini.iss.indexes.moon_summary]\nurl = \"https://pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2999/COISS_2999_moon_summary.lbl\"\ntimestamp = \"2019-06-08T16:28:22\"\n\n[missions.cassini.iss.indexes.ring_summary]\nurl = \"https://pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2999/COISS_2999_ring_summary.lbl\"\ntimestamp = \"2022-08-08T11:54:51.140376\"\n\n[missions.cassini.iss.indexes.saturn_summary]\nurl = \"https://pds-rings.seti.org/holdings/metadata/COISS_2xxx/COISS_2999/COISS_2999_saturn_summary.lbl\"\ntimestamp = \"2022-12-21T18:10:29.248055\"\n\n\n[missions.cassini.uvis.indexes.index]\nurl = \"https://pds-rings.seti.org/holdings/metadata/COUVIS_0xxx/COUVIS_0999/COUVIS_0999_index.lbl\"\ntimestamp = \"2022-09-01T14:14:10.014705\"\n\n[missions.cassini.uvis.indexes.moon_summary]\nurl = \"https://pds-rings.seti.org/holdings/metadata/COUVIS_0xxx/COUVIS_0999/COUVIS_0999_moon_summary.lbl\"\n\n[missions.cassini.uvis.indexes.ring_summary]\nurl = \"https://pds-rings.seti.org/holdings/metadata/COUVIS_0xxx/COUVIS_0999/COUVIS_0999_ring_summary.lbl\"\ntimestamp = \"2022-08-08T11:53:16.071844\"\n\n[missions.cassini.uvis.indexes.saturn_summary]\nurl = \"https://pds-rings.seti.org/holdings/metadata/COUVIS_0xxx/COUVIS_0999/COUVIS_0999_saturn_summary.lbl\"\n\n[missions.cassini.uvis.indexes.supplemental_index]\nurl = \"https://pds-rings.seti.org/holdings/metadata/COUVIS_0xxx/COUVIS_0999/COUVIS_0999_supplemental_index.lbl\"\n\n[missions.cassini.uvis.indexes.versions]\nurl = \"https://pds-rings.seti.org/holdings/metadata/COUVIS_0xxx/COUVIS_0999/COUVIS_0999_versions.lbl\"\n\n\n\n[missions.mro.hirise.indexes.dtm]\nurl = \"https://hirise-pds.lpl.arizona.edu/PDS/INDEX/DTMCUMINDEX.LBL\"\nfind_indexes(\"cassini.iss\")\n\n['index', 'inventory', 'moon_summary', 'ring_summary', 'saturn_summary']\nfind_indexes(\"cassini.uvis\")\n\n['index',\n 'moon_summary',\n 'ring_summary',\n 'saturn_summary',\n 'supplemental_index',\n 'versions']\ndf = get_index(\"cassini.iss.index\")\ndf.head()\n\n\n\n\n\n\n\n\n\nFILE_NAME\nFILE_SPECIFICATION_NAME\nVOLUME_ID\nANTIBLOOMING_STATE_FLAG\nBIAS_STRIP_MEAN\nCALIBRATION_LAMP_STATE_FLAG\nCOMMAND_FILE_NAME\nCOMMAND_SEQUENCE_NUMBER\nDARK_STRIP_MEAN\nDATA_CONVERSION_TYPE\n...\nTWIST_ANGLE\nTARGET_LIST\nUPPER_LEFT_LATITUDE\nUPPER_LEFT_LONGITUDE\nUPPER_RIGHT_LATITUDE\nUPPER_RIGHT_LONGITUDE\nDATA_SET_NAME\nINSTRUMENT_HOST_ID\nPRODUCT_TYPE\nSTANDARD_DATA_PRODUCT_ID\n\n\n\n\n0\nN1454725799_1.IMG\ndata/1454725799_1455008789/N1454725799_1.IMG\nCOISS_2001\nOFF\n14.869863\n&lt;NA&gt;\nOPNAV_848_3.ioi\n8\n0.0\n12BIT\n...\n89.513591\nS2_2004,HELENE,TELESTO,RHEA\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\nCASSINI ORBITER SATURN ISSNA/ISSWA 2 EDR VERSI...\nCO\nEDR\nISS_EDR\n\n\n1\nN1454726579_1.IMG\ndata/1454725799_1455008789/N1454726579_1.IMG\nCOISS_2001\nOFF\n14.860078\n&lt;NA&gt;\nOPNAV_864_3.ioi\n8\n0.0\n12BIT\n...\n89.647635\nTITAN\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\nCASSINI ORBITER SATURN ISSNA/ISSWA 2 EDR VERSI...\nCO\nEDR\nISS_EDR\n\n\n2\nN1454727359_1.IMG\ndata/1454725799_1455008789/N1454727359_1.IMG\nCOISS_2001\nOFF\n14.87867\n&lt;NA&gt;\nOPNAV_880_3.ioi\n8\n0.0\n12BIT\n...\n89.679084\nHYPERION\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\nCASSINI ORBITER SATURN ISSNA/ISSWA 2 EDR VERSI...\nCO\nEDR\nISS_EDR\n\n\n3\nN1454728139_1.IMG\ndata/1454725799_1455008789/N1454728139_1.IMG\nCOISS_2001\nOFF\n14.842465\n&lt;NA&gt;\nOPNAV_912_3.ioi\n8\n0.0\n12BIT\n...\n88.677516\nPHOEBE\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\nCASSINI ORBITER SATURN ISSNA/ISSWA 2 EDR VERSI...\nCO\nEDR\nISS_EDR\n\n\n4\nN1454728919_1.IMG\ndata/1454725799_1455008789/N1454728919_1.IMG\nCOISS_2001\nOFF\n14.86497\n&lt;NA&gt;\nOPNAV_896_3.ioi\n8\n0.0\n12BIT\n...\n89.79891\nIAPETUS\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\nCASSINI ORBITER SATURN ISSNA/ISSWA 2 EDR VERSI...\nCO\nEDR\nISS_EDR\n\n\n\n\n5 rows × 140 columns\ndf.columns\n\nIndex(['FILE_NAME', 'FILE_SPECIFICATION_NAME', 'VOLUME_ID',\n       'ANTIBLOOMING_STATE_FLAG', 'BIAS_STRIP_MEAN',\n       'CALIBRATION_LAMP_STATE_FLAG', 'COMMAND_FILE_NAME',\n       'COMMAND_SEQUENCE_NUMBER', 'DARK_STRIP_MEAN', 'DATA_CONVERSION_TYPE',\n       ...\n       'TWIST_ANGLE', 'TARGET_LIST', 'UPPER_LEFT_LATITUDE',\n       'UPPER_LEFT_LONGITUDE', 'UPPER_RIGHT_LATITUDE', 'UPPER_RIGHT_LONGITUDE',\n       'DATA_SET_NAME', 'INSTRUMENT_HOST_ID', 'PRODUCT_TYPE',\n       'STANDARD_DATA_PRODUCT_ID'],\n      dtype='object', length=140)\ndf.set_index(\"IMAGE_MID_TIME\").loc['20170914 00':'20170914 15']\n\n\n\n\n\n\n\n\n\nFILE_NAME\nFILE_SPECIFICATION_NAME\nVOLUME_ID\nANTIBLOOMING_STATE_FLAG\nBIAS_STRIP_MEAN\nCALIBRATION_LAMP_STATE_FLAG\nCOMMAND_FILE_NAME\nCOMMAND_SEQUENCE_NUMBER\nDARK_STRIP_MEAN\nDATA_CONVERSION_TYPE\n...\nTWIST_ANGLE\nTARGET_LIST\nUPPER_LEFT_LATITUDE\nUPPER_LEFT_LONGITUDE\nUPPER_RIGHT_LATITUDE\nUPPER_RIGHT_LONGITUDE\nDATA_SET_NAME\nINSTRUMENT_HOST_ID\nPRODUCT_TYPE\nSTANDARD_DATA_PRODUCT_ID\n\n\nIMAGE_MID_TIME\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2017-09-14 13:26:59.927\nN1884091007_1.IMG\ndata/1884017637_1884113741/N1884091007_1.IMG\nCOISS_2116\nOFF\n21.611872\n&lt;NA&gt;\ntrigger_25245_3.ioi\n25245\n1.218444\n12BIT\n...\n4.868274\n&lt;NA&gt;\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\nCASSINI ORBITER SATURN ISSNA/ISSWA 2 EDR VERSI...\nCO\nEDR\nISS_EDR\n\n\n2017-09-14 13:31:18.910\nN1884091266_1.IMG\ndata/1884017637_1884113741/N1884091266_1.IMG\nCOISS_2116\nOFF\n21.594259\n&lt;NA&gt;\ntrigger_25245_3.ioi\n25245\n1.222236\n12BIT\n...\n4.812541\n&lt;NA&gt;\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\nCASSINI ORBITER SATURN ISSNA/ISSWA 2 EDR VERSI...\nCO\nEDR\nISS_EDR\n\n\n2017-09-14 13:35:41.908\nN1884091529_1.IMG\ndata/1884017637_1884113741/N1884091529_1.IMG\nCOISS_2116\nOFF\n21.87019\n&lt;NA&gt;\ntrigger_25245_3.ioi\n25245\n1.229574\n12BIT\n...\n4.77302\nDAPHNIS\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\nCASSINI ORBITER SATURN ISSNA/ISSWA 2 EDR VERSI...\nCO\nEDR\nISS_EDR\n\n\n2017-09-14 13:40:04.906\nN1884091792_1.IMG\ndata/1884017637_1884113741/N1884091792_1.IMG\nCOISS_2116\nOFF\n21.843445\n&lt;NA&gt;\ntrigger_25245_3.ioi\n25245\n1.254036\n12BIT\n...\n4.748047\n&lt;NA&gt;\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\nCASSINI ORBITER SATURN ISSNA/ISSWA 2 EDR VERSI...\nCO\nEDR\nISS_EDR\n\n\n2017-09-14 13:44:27.905\nN1884092055_1.IMG\ndata/1884017637_1884113741/N1884092055_1.IMG\nCOISS_2116\nOFF\n21.885845\n&lt;NA&gt;\ntrigger_25245_3.ioi\n25245\n1.263209\n12BIT\n...\n4.736484\n&lt;NA&gt;\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\nCASSINI ORBITER SATURN ISSNA/ISSWA 2 EDR VERSI...\nCO\nEDR\nISS_EDR\n\n\n2017-09-14 13:48:50.903\nN1884092318_1.IMG\ndata/1884017637_1884113741/N1884092318_1.IMG\nCOISS_2116\nOFF\n21.558872\n&lt;NA&gt;\ntrigger_25245_3.ioi\n25245\n1.260029\n12BIT\n...\n4.737905\n&lt;NA&gt;\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\nCASSINI ORBITER SATURN ISSNA/ISSWA 2 EDR VERSI...\nCO\nEDR\nISS_EDR\n\n\n2017-09-14 13:53:13.901\nN1884092581_1.IMG\ndata/1884017637_1884113741/N1884092581_1.IMG\nCOISS_2116\nOFF\n21.606491\n&lt;NA&gt;\ntrigger_25245_3.ioi\n25245\n1.248288\n12BIT\n...\n4.750201\n&lt;NA&gt;\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\n-100000000000000005366162204393472.0\nCASSINI ORBITER SATURN ISSNA/ISSWA 2 EDR VERSI...\nCO\nEDR\nISS_EDR\n\n\n\n\n7 rows × 139 columns",
    "crumbs": [
      "tutorials",
      "Demo of PlanetaryPy"
    ]
  },
  {
    "objectID": "tutorials/pdw2023_demo.html#archived-kernels",
    "href": "tutorials/pdw2023_demo.html#archived-kernels",
    "title": "Demo of PlanetaryPy",
    "section": "Archived kernels",
    "text": "Archived kernels\n\nfrom planetarypy.spice import kernels\n\n\nkernels.datasets\n\n\n\n\n\n\n\n\n\npath\nMission Name\nPDS3 or PDS4\nData Size (GB)\nStart Time\nStop Time\n\n\nshorthand\n\n\n\n\n\n\n\n\n\n\nbc\nbc/bc_spice\nBepiColombo\n4\n2.3\n2018-10-20\n2023-06-21\n\n\ncassini\nco-s_j_e_v-spice-6-v1.0/cosp_1000\nCassini Orbiter\n3\n62.5\n1997-10-15\n2017-09-15\n\n\nclementine\nclem1-l-spice-6-v1.0/clsp_1000\nClementine\n3\n0.8\n1994-01-26\n1994-05-07\n\n\ndart\ndart/dart_spice\nDART\n4\n10.0\n2021-11-09\n2050-01-01\n\n\ndawn\ndawn-m_a-spice-6-v1.0/dawnsp_1000\nDAWN\n3\n86.4\n2007-09-27\n2018-10-31\n\n\ndi\ndi-c-spice-6-v1.0/disp_1000\nDeep Impact\n3\n0.7\n2005-01-12\n2005-08-09\n\n\nds1\nds1-a_c-spice-6-v1.0/ds1sp_1000\nDeep Space 1\n3\n0.9\n1998-10-24\n2001-12-18\n\n\nepoxi\ndif-c_e_x-spice-6-v1.0/epxsp_1000\nEPOXI\n3\n1.0\n2005-08-23\n2011-03-01\n\n\nem16\nem16/em16_spice\nExoMars TGO 2016\n4\n10.4\n2016-03-14\n2023-10-01\n\n\ngrail\ngrail-l-spice-6-v1.0/grlsp_1000\nGRAIL\n3\n4.3\n2011-09-10\n2012-12-17\n\n\nhayabusa\nhay-a-spice-6-v1.0/haysp_1000\nHayabusa\n3\n0.3\n2005-09-11\n2005-11-19\n\n\ninsight\ninsight/insight_spice\nInSight\n4\n0.9\n2018-05-05\n2022-12-15\n\n\njuno\njno-j_e_ss-spice-6-v1.0/jnosp_1000\nJUNO\n3\n48.2\n2011-08-05\n2023-04-08\n\n\nladee\nladee/ladee_spice\nLADEE\n4\n0.6\n2013-09-07\n2050-01-01\n\n\nlro\nlro-l-spice-6-v1.0/lrosp_1000\nLunar Reconnaissance Orbiter\n3\n616.9\n2009-06-18\n2023-09-15\n\n\nmaven\nmaven/maven_spice\nMAVEN\n4\n56.6\n2013-11-18\n2023-10-01\n\n\nopportunity\nmer1-m-spice-6-v1.0/mer1sp_1000\nMER 1 (Opportunity)\n3\n4.1\n2003-07-07\n2018-06-10\n\n\nspirit\nmer2-m-spice-6-v1.0/mer2sp_1000\nMER 2 (Spirit)\n3\n2.6\n2003-06-10\n2010-05-03\n\n\nmessenger\nmess-e_v_h-spice-6-v1.0/messsp_1000\nMESSENGER\n3\n44.8\n2004-08-03\n2015-04-30\n\n\nmars2020\nmars2020/mars2020_spice\nMars 2020\n4\n0.6\n2020-07-30\n2023-08-31\n\n\nmex\nmex-e_m-spice-6-v2.0/mexsp_2000\nMars Express\n3\n10.6\n2003-06-02\n2023-08-31\n\n\nmgs\nmgs-m-spice-6-v1.0/mgsp_1000\nMars Global Surveyor\n3\n15.4\n1996-11-06\n2006-11-02\n\n\nody\nody-m-spice-6-v1.0/odsp_1000\nMars Odyssey\n3\n35.2\n2001-04-07\n2023-07-01\n\n\nmro\nmro-m-spice-6-v1.0/mrosp_1000\nMars Reconnaissance Orbiter\n3\n324.7\n2005-08-12\n2023-10-01\n\n\nmsl\nmsl-m-spice-6-v1.0/mslsp_1000\nMars Science Laboratory\n3\n0.6\n2011-11-26\n2023-07-29\n\n\nnear\nnear-a-spice-6-v1.0/nearsp_1000\nNEAR\n3\n2.4\n1996-05-30\n2001-02-28\n\n\nnh\nnh-j_p_ss-spice-6-v1.0/nhsp_1000\nNew Horizons\n3\n1.6\n2006-01-19\n2019-12-30\n\n\norex\norex/orex_spice\nOSIRIS-REx\n4\n424.7\n2016-09-08\n2023-10-02\n\n\nrosetta\nro_rl-e_m_a_c-spice-6-v1.0/rossp_1000\nRosetta\n3\n5.9\n2004-03-02\n2017-01-01\n\n\nstardust\nsdu-c-spice-6-v1.0/sdsp_1000\nStardust\n3\n1.9\n1999-02-07\n2011-05-01\n\n\nvenus_climate_orbiter\nvco/vco_spice\nVenus Climate Orbiter\n4\n1.9\n2010-05-21\n2023-01-01\n\n\nvex\nvex-e_v-spice-6-v2.0/vexsp_2000\nVenus Express\n3\n5.0\n2005-11-09\n2015-02-06\n\n\nvo\nvo1_vo2-m-spice-6-v1.0/vosp_1000\nViking Orbiter\n3\n0.1\n1976-06-16\n1980-07-30\n\n\n\n\n\n\n\n\n\nkernels.list_kernels_for_day('bc', '2019-01-01')\n\n['ck/bc_mmo_sc_cruise_v01.bc',\n 'ck/bc_mpo_magboom_v01.bc',\n 'ck/bc_mtm_sc_cruise_v01.bc',\n 'fk/bc_dsk_surfaces_v03.tf',\n 'fk/bc_mmo_v13.tf',\n 'fk/bc_mpo_v34.tf',\n 'fk/bc_mtm_v12.tf',\n 'fk/bc_sci_v12.tf',\n 'fk/earth_topo_201023.tf',\n 'fk/earthstns_jaxa_20230905.tf',\n 'fk/estrack_v04.tf',\n 'fk/rssd0002.tf',\n 'ik/bc_mmo_mppe_v04.ti',\n 'ik/bc_mmo_msasi_v03.ti',\n 'ik/bc_mpo_aux_v01.ti',\n 'ik/bc_mpo_bela_v09.ti',\n 'ik/bc_mpo_mertis_v08.ti',\n 'ik/bc_mpo_mgns_v02.ti',\n 'ik/bc_mpo_mixs_v06.ti',\n 'ik/bc_mpo_phebus_v06.ti',\n 'ik/bc_mpo_serena_v08.ti',\n 'ik/bc_mpo_simbio-sys_v10.ti',\n 'ik/bc_mpo_sixs_v08.ti',\n 'ik/bc_mpo_str_v02.ti',\n 'ik/bc_mtm_mcam_v05.ti',\n 'lsk/naif0012.tls',\n 'pck/earth_000101_231220_230927.bpc',\n 'pck/gm_de431.tpc',\n 'pck/pck00011_bc_v00.tpc',\n 'sclk/bc_mmo_fict_20170228.tsc',\n 'sclk/bc_mpo_fict_20181127.tsc',\n 'sclk/bc_mpo_step_20230917.tsc',\n 'spk/bc_mmo_cruise_v01.bsp',\n 'spk/bc_mmo_struct_v01.bsp',\n 'spk/bc_mpo_cog_v03.bsp',\n 'spk/bc_mpo_struct_v09.bsp',\n 'spk/bc_mtm_cruise_v01.bsp',\n 'spk/bc_mtm_struct_v06.bsp',\n 'spk/bc_sci_v02.bsp',\n 'spk/de432s.bsp',\n 'spk/earthstns_itrf93_201023.bsp',\n 'spk/earthstns_jaxa_20230905.bsp',\n 'spk/estrack_v04.bsp']\n\n\n\nmkpath = kernels.get_metakernel_and_files('msl', '2020-01-01', '2020-01-05')\n\n\n\n\nmsl_ra_toolsref_v1.bc:   0%|          | 0/18432 [00:00&lt;?, ?it/s]\nmsl_v08.tf:   0%|          | 0/205622 [00:00&lt;?, ?it/s]/325632 [00:00&lt;?, ?it/s]\nmsl_surf_rsm_tlmenc_2579_2713_v1.bc:   0%|          | 0/4276224 [00:00&lt;?, ?it/s][A\nmsl_surf_hga_tlm_2579_2713_v1.bc:   0%|          | 0/2271232 [00:00&lt;?, ?it/s]\nmsl_ra_toolsref_v1.bc: 100%|██████████| 18.0k/18.0k [00:00&lt;00:00, 118kB/s] it/s]\nmsl_surf_rsm_tlmenc_2579_2713_v1.bc:   0%|          | 4.00k/4.08M [00:00&lt;02:40, 26.6kB/s]\nmsl_surf_ra_tlmres_2579_2713_v1.bc:   0%|          | 4.00k/1.86M [00:00&lt;01:14, 26.0kB/s]\n\nmsl_surf_rover_tlm_2579_2713_v1.bc:   1%|▏         | 4.00k/318k [00:00&lt;00:12, 25.1kB/s][A\nmsl_surf_rsm_tlmenc_2579_2713_v1.bc:   1%|          | 36.0k/4.08M [00:00&lt;00:31, 133kB/s] \nmsl_surf_ra_tlmres_2579_2713_v1.bc:   2%|▏         | 36.0k/1.86M [00:00&lt;00:14, 132kB/s] \nmsl_surf_rover_tlm_2579_2713_v1.bc:  11%|█▏        | 36.0k/318k [00:00&lt;00:02, 131kB/s] \nmsl_surf_rsm_tlmres_2579_2713_v1.bc:   1%|          | 36.0k/3.56M [00:00&lt;00:28, 131kB/s] \nmsl_surf_rsm_tlmenc_2579_2713_v1.bc:   2%|▏         | 100k/4.08M [00:00&lt;00:16, 260kB/s] A\nmsl_surf_ra_tlmres_2579_2713_v1.bc:   5%|▌         | 100k/1.86M [00:00&lt;00:07, 259kB/s] \nmsl_surf_rover_tlm_2579_2713_v1.bc:  31%|███▏      | 100k/318k [00:00&lt;00:00, 258kB/s] \nmsl_surf_rsm_tlmres_2579_2713_v1.bc:   3%|▎         | 100k/3.56M [00:00&lt;00:14, 258kB/s] \nmsl_v08.tf: 100%|██████████| 201k/201k [00:00&lt;00:00, 398kB/s] [00:00&lt;00:08, 257kB/s] \nmsl_surf_ra_tlmenc_2579_2713_v1.bc:   7%|▋         | 212k/3.13M [00:00&lt;00:06, 440kB/s]]\nmsl_surf_ra_tlmres_2579_2713_v1.bc:  11%|█         | 212k/1.86M [00:00&lt;00:03, 440kB/s]\nmsl_surf_rover_tlm_2579_2713_v1.bc:  62%|██████▏   | 196k/318k [00:00&lt;00:00, 399kB/s]\nmsl_surf_rover_tlm_2579_2713_v1.bc: 100%|██████████| 318k/318k [00:00&lt;00:00, 503kB/s]s]\n\nmsl_surf_rsm_tlmenc_2579_2713_v1.bc:  10%|█         | 436k/4.08M [00:00&lt;00:04, 800kB/s]\nmsl_surf_ra_tlmres_2579_2713_v1.bc:  23%|██▎       | 436k/1.86M [00:00&lt;00:01, 799kB/s]\nmsl_surf_rsm_tlmres_2579_2713_v1.bc:  12%|█▏        | 436k/3.56M [00:00&lt;00:04, 798kB/s]\nmsl_hbra_20120731_c03.ti: 100%|██████████| 7.77k/7.77k [00:00&lt;00:00, 15.7MB/s]6kB/s]\nmsl_surf_rsm_tlmenc_2579_2713_v1.bc:  21%|██        | 884k/4.08M [00:00&lt;00:02, 1.51MB/s]\nmsl_surf_ra_tlmres_2579_2713_v1.bc:  46%|████▋     | 884k/1.86M [00:00&lt;00:00, 1.50MB/s]\nmsl_surf_rsm_tlmres_2579_2713_v1.bc:  24%|██▍       | 884k/3.56M [00:00&lt;00:01, 1.50MB/s]\nmsl_surf_rsm_tlmenc_2579_2713_v1.bc:  43%|████▎     | 1.74M/4.08M [00:01&lt;00:00, 2.89MB/s]\nmsl_surf_ra_tlmres_2579_2713_v1.bc: 100%|██████████| 1.86M/1.86M [00:01&lt;00:00, 1.74MB/s]\n\nmsl_surf_rsm_tlmres_2579_2713_v1.bc:  49%|████▉     | 1.74M/3.56M [00:01&lt;00:00, 2.88MB/s]\nmsl_surf_hga_tlm_2579_2713_v1.bc: 100%|██████████| 2.17M/2.17M [00:01&lt;00:00, 1.98MB/s]\nmsl_surf_ra_tlmenc_2579_2713_v1.bc: 100%|██████████| 3.13M/3.13M [00:01&lt;00:00, 2.81MB/s]\nmsl_hflb_20120731_c03.ti: 100%|██████████| 7.77k/7.77k [00:00&lt;00:00, 13.2MB/s]\nmsl_surf_rsm_tlmenc_2579_2713_v1.bc:  86%|████████▌ | 3.49M/4.08M [00:01&lt;00:00, 5.62MB/s]\nmsl_surf_rsm_tlmres_2579_2713_v1.bc: 100%|██████████| 3.56M/3.56M [00:01&lt;00:00, 2.91MB/s]\n\nmsl_aux_v00.ti: 100%|██████████| 11.3k/11.3k [00:00&lt;00:00, 29.3MB/s]\nmsl_hfra_20120731_c03.ti: 100%|██████████| 7.77k/7.77k [00:00&lt;00:00, 13.2MB/s]\nmsl_hblb_20120731_c03.ti: 100%|██████████| 7.76k/7.76k [00:00&lt;00:00, 4.88MB/s]\nmsl_hbrb_20120731_c03.ti: 100%|██████████| 7.77k/7.77k [00:00&lt;00:00, 14.4MB/s]\nmsl_hfla_20120731_c03.ti: 100%|██████████| 7.77k/7.77k [00:00&lt;00:00, 14.0MB/s]\nmsl_mahli_20120731_c02.ti: 100%|██████████| 7.70k/7.70k [00:00&lt;00:00, 14.0MB/s]\nmsl_chrmi_20120731_c03.ti: 100%|██████████| 7.38k/7.38k [00:00&lt;00:00, 13.2MB/s]\nmsl_hbla_20120731_c03.ti: 100%|██████████| 7.76k/7.76k [00:00&lt;00:00, 14.0MB/s]\nmsl_hfrb_20120731_c03.ti: 100%|██████████| 7.77k/7.77k [00:00&lt;00:00, 13.9MB/s]\nmsl_nla_20120731_c04.ti: 100%|██████████| 7.70k/7.70k [00:00&lt;00:00, 19.9MB/s]\nmsl_mardi_20120731_c02.ti: 100%|██████████| 7.62k/7.62k [00:00&lt;00:00, 13.4MB/s]\nmsl_ml_20120731_c03.ti: 100%|██████████| 7.72k/7.72k [00:00&lt;00:00, 15.9MB/s]\nmsl_mr_20120731_c03.ti: 100%|██████████| 7.72k/7.72k [00:00&lt;00:00, 4.39MB/s]\nmsl_nra_20120731_c04.ti: 100%|██████████| 7.71k/7.71k [00:00&lt;00:00, 14.6MB/s]\nmsl_nrb_20130530_c05.ti: 100%|██████████| 7.72k/7.72k [00:00&lt;00:00, 13.9MB/s]\nmsl_struct_v01.ti: 100%|██████████| 10.3k/10.3k [00:00&lt;00:00, 16.9MB/s]\nmsl_nlb_20130530_c05.ti: 100%|██████████| 7.72k/7.72k [00:00&lt;00:00, 22.5MB/s]\nmsl_lmst_ops120808_v1.tsc: 100%|██████████| 5.80k/5.80k [00:00&lt;00:00, 13.8MB/s]\nnaif0012.tls: 100%|██████████| 6.70k/6.70k [00:00&lt;00:00, 9.87MB/s]\nmar085s.bsp:   0%|          | 0/89539584 [00:00&lt;?, ?it/s]0:00&lt;?, ?it/s]\nmsl_ls_ops120808_iau2000_v1.bsp: 100%|██████████| 8.00k/8.00k [00:00&lt;00:00, 15.9MB/s]\n\nmar085s.bsp:   0%|          | 4.00k/85.4M [00:00&lt;58:05, 25.7kB/s]&lt;00:02, 25.6kB/s]\nmsl_76_sclkscet_refit_s8.tsc: 100%|██████████| 55.7k/55.7k [00:00&lt;00:00, 178kB/s] \nmar085s.bsp:   0%|          | 36.0k/85.4M [00:00&lt;11:22, 131kB/s] \nmsl_surf_rover_loc_2224_2358_v1.bsp:   0%|          | 0/256000 [00:00&lt;?, ?it/s]\npck00008.tpc: 100%|██████████| 111k/111k [00:00&lt;00:00, 236kB/s] 1kB/s] \nmar085s.bsp:   0%|          | 84.0k/85.4M [00:00&lt;07:02, 212kB/s]\nmsl_surf_rover_loc_2224_2358_v1.bsp:   2%|▏         | 4.00k/250k [00:00&lt;00:09, 25.6kB/s]\nmsl_struct_v02.bsp: 100%|██████████| 102k/102k [00:00&lt;00:00, 217kB/s] \nde425s.bsp:   1%|          | 100k/8.84M [00:00&lt;00:35, 259kB/s] \nmar085s.bsp:   0%|          | 196k/85.4M [00:00&lt;03:37, 411kB/s] [00:00&lt;?, ?it/s]\nmsl_surf_rover_loc_2003_2127_v1.bsp:   0%|          | 0/344064 [00:00&lt;?, ?it/s]131kB/s] \nmar085s.bsp:   0%|          | 420k/85.4M [00:00&lt;01:54, 780kB/s]9M [00:00&lt;01:45, 25.7kB/s]\nmsl_surf_rover_loc_2003_2127_v1.bsp:   1%|          | 4.00k/336k [00:00&lt;00:13, 25.7kB/s][A\nmsl_surf_rover_loc_0000_2003_v1.bsp:   1%|▏         | 36.0k/2.59M [00:00&lt;00:20, 131kB/s] \nmar085s.bsp:   1%|          | 852k/85.4M [00:00&lt;01:00, 1.45MB/s]00:00&lt;?, ?it/s]\nmsl_surf_rover_loc_2224_2358_v1.bsp: 100%|██████████| 250k/250k [00:00&lt;00:00, 399kB/s] \nmsl_surf_rover_loc_2003_2127_v1.bsp:  11%|█         | 36.0k/336k [00:00&lt;00:02, 131kB/s] \nmsl_surf_rover_loc_0000_2003_v1.bsp:   3%|▎         | 84.0k/2.59M [00:00&lt;00:12, 212kB/s]\nmsl_surf_rover_loc_2003_2127_v1.bsp:  25%|██▌       | 84.0k/336k [00:00&lt;00:01, 211kB/s]]\nmsl_surf_rover_loc_2837_2934_v1.bsp:   0%|          | 0/225280 [00:00&lt;?, ?it/s]\nmsl_surf_rover_loc_0000_2003_v1.bsp:   7%|▋         | 180k/2.59M [00:00&lt;00:06, 371kB/s] \nmsl_surf_rover_loc_2003_2127_v1.bsp:  49%|████▉     | 164k/336k [00:00&lt;00:00, 330kB/s] ]\nmsl_surf_rover_loc_2837_2934_v1.bsp:   2%|▏         | 4.00k/220k [00:00&lt;00:08, 25.3kB/s]\nmsl_surf_rover_loc_2003_2127_v1.bsp: 100%|██████████| 336k/336k [00:00&lt;00:00, 524kB/s]]\n\nde425s.bsp:  72%|███████▏  | 6.36M/8.84M [00:01&lt;00:00, 9.82MB/s] [00:00&lt;00:01, 131kB/s] [A\nmsl_surf_rover_loc_2837_2934_v1.bsp:  16%|█▋        | 36.0k/220k [00:00&lt;00:01, 130kB/s] \nmsl_surf_rover_loc_0000_2003_v1.bsp:  29%|██▉       | 772k/2.59M [00:00&lt;00:01, 1.32MB/s]\nmsl_surf_rover_loc_2579_2713_v1.bsp: 100%|██████████| 294k/294k [00:00&lt;00:00, 468kB/s] \nde425s.bsp: 100%|██████████| 8.84M/8.84M [00:01&lt;00:00, 6.16MB/s] [00:00&lt;00:00, 211kB/s]\nmar085s.bsp:  14%|█▎        | 11.6M/85.4M [00:01&lt;00:05, 15.1MB/s]0:00&lt;?, ?it/s]\nmsl_surf_rover_loc_2837_2934_v1.bsp:  38%|███▊      | 84.0k/220k [00:00&lt;00:00, 211kB/s]\nmsl_surf_rover_loc_2127_2224_v1.bsp: 100%|██████████| 206k/206k [00:00&lt;00:00, 329kB/s] s]\nmsl_surf_rover_loc_0000_2003_v1.bsp: 100%|██████████| 2.59M/2.59M [00:01&lt;00:00, 2.29MB/s]\nmsl_surf_rover_loc_2358_2482_v1.bsp:   1%|▏         | 4.00k/270k [00:00&lt;00:10, 25.8kB/s]\nmsl_surf_rover_loc_2837_2934_v1.bsp: 100%|██████████| 220k/220k [00:00&lt;00:00, 350kB/s] \nmsl_surf_rover_loc_2713_2837_v1.bsp:   1%|          | 4.00k/333k [00:00&lt;00:13, 25.6kB/s]\nmsl_surf_rover_loc_3192_3289_v1.bsp:   0%|          | 0/313344 [00:00&lt;?, ?it/s]\nmsl_surf_rover_loc_2358_2482_v1.bsp: 100%|██████████| 270k/270k [00:00&lt;00:00, 431kB/s] \nmar085s.bsp:  29%|██▉       | 24.9M/85.4M [00:02&lt;00:03, 19.0MB/s][00:00&lt;00:02, 131kB/s] \nmsl_surf_rover_loc_2934_3068_v1.bsp:   0%|          | 0/423936 [00:00&lt;?, ?it/s]25.4kB/s]\nmsl_surf_rover_loc_3068_3192_v1.bsp:   1%|          | 4.00k/355k [00:00&lt;00:14, 25.6kB/s]\nmar085s.bsp:  31%|███       | 26.1M/85.4M [00:02&lt;00:03, 17.0MB/s]0:00&lt;?, ?it/s]\nmsl_surf_rover_loc_2713_2837_v1.bsp:  25%|██▌       | 84.0k/333k [00:00&lt;00:01, 211kB/s]\nmsl_surf_rover_loc_2934_3068_v1.bsp:   1%|          | 4.00k/414k [00:00&lt;00:16, 25.7kB/s]\nmsl_surf_rover_loc_3068_3192_v1.bsp:  10%|█         | 36.0k/355k [00:00&lt;00:02, 131kB/s] \nmar085s.bsp:  33%|███▎      | 28.5M/85.4M [00:02&lt;00:03, 18.7MB/s][00:00&lt;00:08, 25.7kB/s]\nmsl_surf_rover_loc_2713_2837_v1.bsp: 100%|██████████| 333k/333k [00:00&lt;00:00, 527kB/s] ]\n\nmsl_surf_rover_loc_2934_3068_v1.bsp:   9%|▊         | 36.0k/414k [00:00&lt;00:02, 131kB/s] [A\nmsl_surf_rover_loc_3068_3192_v1.bsp:  28%|██▊       | 100k/355k [00:00&lt;00:01, 258kB/s] \nmar085s.bsp:  37%|███▋      | 31.8M/85.4M [00:02&lt;00:03, 17.1MB/s][00:00&lt;00:01, 131kB/s] \nmsl_surf_rover_loc_3547_3644_v1.bsp:  11%|█▏        | 36.0k/314k [00:00&lt;00:02, 131kB/s] \nmsl_surf_rover_loc_3192_3289_v1.bsp: 100%|██████████| 306k/306k [00:00&lt;00:00, 485kB/s] \nmsl_surf_rover_loc_2934_3068_v1.bsp:  20%|██        | 84.0k/414k [00:00&lt;00:01, 211kB/s]\nmsl_surf_rover_loc_3068_3192_v1.bsp: 100%|██████████| 355k/355k [00:00&lt;00:00, 565kB/s]\n\nmsl_surf_rover_loc_3423_3547_v1.bsp:   0%|          | 0/391168 [00:00&lt;?, ?it/s]212kB/s]\nmsl_surf_rover_loc_2934_3068_v1.bsp:  43%|████▎     | 180k/414k [00:00&lt;00:00, 371kB/s] \nmsl_surf_rover_loc_2482_2579_v1.bsp: 100%|██████████| 208k/208k [00:00&lt;00:00, 332kB/s] \nmsl_surf_rover_loc_3423_3547_v1.bsp:   1%|          | 4.00k/382k [00:00&lt;00:15, 25.7kB/s]\nmsl_surf_rover_loc_3547_3644_v1.bsp: 100%|██████████| 314k/314k [00:00&lt;00:00, 501kB/s] \nmsl_surf_rover_loc_2934_3068_v1.bsp: 100%|██████████| 414k/414k [00:00&lt;00:00, 529kB/s]\nmsl_surf_rover_loc_3423_3547_v1.bsp: 100%|██████████| 382k/382k [00:00&lt;00:00, 606kB/s] ]\nmsl_surf_rover_loc_3289_3423_v1.bsp:  10%|█         | 36.0k/356k [00:00&lt;00:02, 131kB/s] \nmar085s.bsp:  57%|█████▋    | 48.5M/85.4M [00:03&lt;00:02, 16.5MB/s]0:00&lt;?, ?it/s]\nmsl_surf_rover_loc_3289_3423_v1.bsp:  24%|██▎       | 84.0k/356k [00:00&lt;00:01, 212kB/s]\nmsl_surf_rover_loc_3778_3902_v1.bsp:   1%|          | 4.00k/354k [00:00&lt;00:13, 25.7kB/s]\nmsl_surf_rover_loc_3289_3423_v1.bsp: 100%|██████████| 356k/356k [00:00&lt;00:00, 566kB/s] ]\n\nmar085s.bsp:  64%|██████▎   | 54.3M/85.4M [00:04&lt;00:01, 16.9MB/s][00:00&lt;00:02, 131kB/s] \nmar085s.bsp:  67%|██████▋   | 56.8M/85.4M [00:04&lt;00:01, 19.1MB/s][00:00&lt;00:02, 131kB/s] \nmsl_surf_rover_loc_3778_3902_v1.bsp:  24%|██▎       | 84.0k/354k [00:00&lt;00:01, 211kB/s]\nmar085s.bsp:  69%|██████▉   | 58.9M/85.4M [00:04&lt;00:01, 20.0MB/s][00:00&lt;00:01, 210kB/s]\nmar085s.bsp:  70%|███████   | 59.8M/85.4M [00:04&lt;00:01, 16.5MB/s]00:00&lt;00:00, 371kB/s] \nmsl_surf_rover_loc_3778_3902_v1.bsp: 100%|██████████| 354k/354k [00:00&lt;00:00, 557kB/s] \nmar085s.bsp:  73%|███████▎  | 62.7M/85.4M [00:04&lt;00:01, 19.6MB/s]\nmsl_surf_rover_loc_3644_3778_v1.bsp: 100%|██████████| 363k/363k [00:00&lt;00:00, 462kB/s]\nmar085s.bsp: 100%|██████████| 85.4M/85.4M [00:05&lt;00:00, 15.3MB/s]\n\n\n\nimport spiceypy as spice\n\n\nspice.furnsh(str(mkpath))\n\n\nmkpath\n\nPath('/home/ayek72/mnt/slowdata/planetarypy/spice_kernels/msl/msl_v34_200101_200105.tm')\n\n\n\n!cat {mkpath}\n\nKPL/MK\n\n   This meta-kernel lists a subset of kernels from the meta-kernel\n   msl_v34.tm provided in the MSL-M-SPICE-6-V1.0 SPICE PDS3 archive,\n   covering the whole or a part of the customer requested time period\n   from 2020-01-01T00:00:00.000 to 2020-01-05T00:00:00.000.\n\n   The documentation describing these kernels can be found in the\n   complete MSL-M-SPICE-6-V1.0 SPICE PDS3 archive available at this URL\n\n   https://naif.jpl.nasa.gov/pub/naif/pds/data/msl-m-spice-6-v1.0/mslsp_1000\n\n   To use this meta-kernel users may need to modify the value of the\n   PATH_VALUES keyword to point to the actual location of the archive's\n   ``data'' directory on their system. Replacing ``/'' with ``\\''\n   and converting line terminators to the format native to the user's\n   system may also be required if this meta-kernel is to be used on a\n   non-UNIX workstation.\n\n   This meta-kernel was created by the NAIF node's SPICE PDS archive\n   subsetting service version 2.1 on Fri Dec  1 09:03:32 PST 2023.\n\n \n   \\begindata\n \n      PATH_VALUES     = (\n                         '/home/ayek72/mnt/slowdata/planetarypy/spice_kernels/msl'\n                        )\n \n      PATH_SYMBOLS    = (\n                         'KERNELS'\n                        )\n \n      KERNELS_TO_LOAD = (\n                         '$KERNELS/lsk/naif0012.tls'\n                         '$KERNELS/pck/pck00008.tpc'\n                         '$KERNELS/sclk/msl_lmst_ops120808_v1.tsc'\n                         '$KERNELS/sclk/msl_76_sclkscet_refit_s8.tsc'\n                         '$KERNELS/fk/msl_v08.tf'\n                         '$KERNELS/ik/msl_aux_v00.ti'\n                         '$KERNELS/ik/msl_chrmi_20120731_c03.ti'\n                         '$KERNELS/ik/msl_hbla_20120731_c03.ti'\n                         '$KERNELS/ik/msl_hblb_20120731_c03.ti'\n                         '$KERNELS/ik/msl_hbra_20120731_c03.ti'\n                         '$KERNELS/ik/msl_hbrb_20120731_c03.ti'\n                         '$KERNELS/ik/msl_hfla_20120731_c03.ti'\n                         '$KERNELS/ik/msl_hflb_20120731_c03.ti'\n                         '$KERNELS/ik/msl_hfra_20120731_c03.ti'\n                         '$KERNELS/ik/msl_hfrb_20120731_c03.ti'\n                         '$KERNELS/ik/msl_mahli_20120731_c02.ti'\n                         '$KERNELS/ik/msl_mardi_20120731_c02.ti'\n                         '$KERNELS/ik/msl_ml_20120731_c03.ti'\n                         '$KERNELS/ik/msl_mr_20120731_c03.ti'\n                         '$KERNELS/ik/msl_nla_20120731_c04.ti'\n                         '$KERNELS/ik/msl_nlb_20130530_c05.ti'\n                         '$KERNELS/ik/msl_nra_20120731_c04.ti'\n                         '$KERNELS/ik/msl_nrb_20130530_c05.ti'\n                         '$KERNELS/ik/msl_struct_v01.ti'\n                         '$KERNELS/spk/msl_struct_v02.bsp'\n                         '$KERNELS/spk/de425s.bsp'\n                         '$KERNELS/spk/mar085s.bsp'\n                         '$KERNELS/spk/msl_ls_ops120808_iau2000_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_0000_2003_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_2003_2127_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_2127_2224_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_2224_2358_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_2358_2482_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_2482_2579_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_2579_2713_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_2713_2837_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_2837_2934_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_2934_3068_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_3068_3192_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_3192_3289_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_3289_3423_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_3423_3547_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_3547_3644_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_3644_3778_v1.bsp'\n                         '$KERNELS/spk/msl_surf_rover_loc_3778_3902_v1.bsp'\n                         '$KERNELS/ck/msl_ra_toolsref_v1.bc'\n                         '$KERNELS/ck/msl_surf_hga_tlm_2579_2713_v1.bc'\n                         '$KERNELS/ck/msl_surf_ra_tlmenc_2579_2713_v1.bc'\n                         '$KERNELS/ck/msl_surf_ra_tlmres_2579_2713_v1.bc'\n                         '$KERNELS/ck/msl_surf_rover_tlm_2579_2713_v1.bc'\n                         '$KERNELS/ck/msl_surf_rsm_tlmenc_2579_2713_v1.bc'\n                         '$KERNELS/ck/msl_surf_rsm_tlmres_2579_2713_v1.bc'\n                        )\n \n   \\begintext",
    "crumbs": [
      "tutorials",
      "Demo of PlanetaryPy"
    ]
  },
  {
    "objectID": "tutorials/tutorial.html",
    "href": "tutorials/tutorial.html",
    "title": "Tutorial",
    "section": "",
    "text": "from planetarypy.pds.apps import find_indexes, get_index, find_instruments\n\n\nfind_instruments?\n\n\nSignature: find_instruments(mission: str) -&gt; list\nDocstring: Find existing instruments for a mission.\nFile:      ~/Dropbox/src/nbplanetary/planetarypy/pds/apps.py\nType:      function\n\n\n\n\nfind_instruments(\"mro\")\n\n['hirise', 'ctx']\n\n\nNow, seeing that the CTX instrument is supported, one could ask what index files (= catalogs) are available, using the dotted code for mission.instrument:\n\nfind_indexes(\"mro.ctx\")\n\n['edr']\n\n\nWe only have one index file for EDR data. Let’s get it, using the now 3-segments dot-code (it returns a pandas Dataframe):\n\nindex = get_index('mro.ctx.edr', refresh=False)\nindex.head()\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_SPECIFICATION_NAME\nORIGINAL_PRODUCT_ID\nPRODUCT_ID\nIMAGE_TIME\nINSTRUMENT_ID\nINSTRUMENT_MODE_ID\nLINE_SAMPLES\nLINES\nSPATIAL_SUMMING\n...\nSUB_SOLAR_LATITUDE\nSUB_SPACECRAFT_LONGITUDE\nSUB_SPACECRAFT_LATITUDE\nSOLAR_DISTANCE\nSOLAR_LONGITUDE\nLOCAL_TIME\nIMAGE_SKEW_ANGLE\nRATIONALE_DESC\nDATA_QUALITY_DESC\nORBIT_NUMBER\n\n\n\n\n0\nMROX_0001\nDATA/CRU_000001_9999_XN_99N999W.IMG\n4A_04_0001000400\nCRU_000001_9999_XN_99N999W\n2005-08-30 15:40:21.549\nCTX\nNIFL\n5056\n1024\n1\n...\n0.0\n0.0\n0.0\n0.0\n278.89\n10.16\n0.0\nInstrument checkout image of space\nOK\n-4242\n\n\n1\nMROX_0001\nDATA/CRU_000002_9999_XN_99N999W.IMG\n4A_04_0001000500\nCRU_000002_9999_XN_99N999W\n2005-09-08 15:59:45.313\nCTX\nNIFL\n5056\n15360\n1\n...\n0.0\n0.0\n0.0\n0.0\n284.48\n4.6\n0.0\nCalibration image of the Moon\nOK\n-4126\n\n\n2\nMROX_0001\nDATA/CRU_000003_9999_XN_99N999W.IMG\n4A_04_0001000600\nCRU_000003_9999_XN_99N999W\n2005-09-08 16:03:37.927\nCTX\nNIFL\n5056\n2048\n1\n...\n0.0\n0.0\n0.0\n0.0\n284.48\n4.66\n0.0\nCalibration image of Omega Centauri (globular ...\nOK\n-4126\n\n\n3\nMROX_0001\nDATA/CRU_000004_9999_XN_99N999W.IMG\n4A_04_0001000700\nCRU_000004_9999_XN_99N999W\n2005-09-08 16:08:23.841\nCTX\nNIFL\n5056\n2048\n1\n...\n0.0\n0.0\n0.0\n0.0\n284.48\n4.74\n0.0\nCalibration image of Omega Centauri (globular ...\nOK\n-4126\n\n\n4\nMROX_0001\nDATA/CRU_000005_9999_XN_99N999W.IMG\n4A_04_0001000800\nCRU_000005_9999_XN_99N999W\n2005-09-08 16:11:18.649\nCTX\nNIFL\n5056\n21504\n1\n...\n0.0\n0.0\n0.0\n0.0\n284.48\n4.79\n0.0\nCalibration image of the Moon\nOK\n-4126\n\n\n\n\n5 rows × 51 columns\n\n\n\n\nYou might have ssen, that planetarypy realized that the existing index on my disk was outdated and proceeded to get an updated one.\nThe warning is about badly formatted data on the PDS for which planetarypy had to force path names to the correct letter case. This is not something we can influence, but we reported the issue at the PDS, and here, we just let the user know, that we fudged around that issue.\nNote that the catalog ascii times have been converted to proper datetime objects, using the utility functions in planetarypy.utils. This means that you can use these times to create proper plots over time in case you are interested in catalog statistics.\n\nindex.IMAGE_TIME\n\n0        2005-08-30 15:40:21.549\n1        2005-09-08 15:59:45.313\n2        2005-09-08 16:03:37.927\n3        2005-09-08 16:08:23.841\n4        2005-09-08 16:11:18.649\n                   ...          \n142363   2023-03-01 00:01:37.834\n142364   2023-03-01 00:15:17.076\n142365   2023-03-01 00:19:04.486\n142366   2023-03-01 00:29:24.818\n142367   2023-03-01 00:43:08.662\nName: IMAGE_TIME, Length: 142368, dtype: datetime64[ns]\n\n\nUsing standard pandas operations, we can now filte the data down, and identify a data product we are interested in:\n\nindex.columns\n\nIndex(['VOLUME_ID', 'FILE_SPECIFICATION_NAME', 'ORIGINAL_PRODUCT_ID',\n       'PRODUCT_ID', 'IMAGE_TIME', 'INSTRUMENT_ID', 'INSTRUMENT_MODE_ID',\n       'LINE_SAMPLES', 'LINES', 'SPATIAL_SUMMING', 'SCALED_PIXEL_WIDTH',\n       'PIXEL_ASPECT_RATIO', 'EMISSION_ANGLE', 'INCIDENCE_ANGLE',\n       'PHASE_ANGLE', 'CENTER_LONGITUDE', 'CENTER_LATITUDE',\n       'UPPER_LEFT_LONGITUDE', 'UPPER_LEFT_LATITUDE', 'UPPER_RIGHT_LONGITUDE',\n       'UPPER_RIGHT_LATITUDE', 'LOWER_LEFT_LONGITUDE', 'LOWER_LEFT_LATITUDE',\n       'LOWER_RIGHT_LONGITUDE', 'LOWER_RIGHT_LATITUDE', 'MISSION_PHASE_NAME',\n       'TARGET_NAME', 'SPACECRAFT_CLOCK_START_COUNT',\n       'FOCAL_PLANE_TEMPERATURE', 'LINE_EXPOSURE_DURATION', 'OFFSET_MODE_ID',\n       'SAMPLE_FIRST_PIXEL', 'SCALED_IMAGE_WIDTH', 'SCALED_IMAGE_HEIGHT',\n       'SPACECRAFT_ALTITUDE', 'TARGET_CENTER_DISTANCE', 'SLANT_DISTANCE',\n       'USAGE_NOTE', 'NORTH_AZIMUTH', 'SUB_SOLAR_AZIMUTH',\n       'SUB_SOLAR_LONGITUDE', 'SUB_SOLAR_LATITUDE', 'SUB_SPACECRAFT_LONGITUDE',\n       'SUB_SPACECRAFT_LATITUDE', 'SOLAR_DISTANCE', 'SOLAR_LONGITUDE',\n       'LOCAL_TIME', 'IMAGE_SKEW_ANGLE', 'RATIONALE_DESC', 'DATA_QUALITY_DESC',\n       'ORBIT_NUMBER'],\n      dtype='object')\n\n\n\nindex.EMISSION_ANGLE.describe()\n\ncount     142368.0\nmean      4.396005\nstd      18.999974\nmin            0.0\n25%            0.1\n50%           1.56\n75%           5.94\nmax          999.9\nName: EMISSION_ANGLE, dtype: Float64\n\n\n\nindex.LOCAL_TIME.describe()\n\ncount     142368.0\nmean     15.055919\nstd       1.427996\nmin            0.0\n25%          14.65\n50%          15.12\n75%          15.53\nmax          23.99\nName: LOCAL_TIME, dtype: Float64\n\n\n\nangle_filter = index.EMISSION_ANGLE &lt; 1.0\n\nLet’s also calculate a mean latitude and longitude instead of the image corners, for rough location filtering. As a habit, we recommend to assign lower case letters to column names that we add on top of the PDS ones:\n\nindex = index.assign(\n    lat_mean=(\n        index.UPPER_LEFT_LATITUDE\n        + index.UPPER_RIGHT_LATITUDE\n        + index.LOWER_LEFT_LATITUDE\n        + index.LOWER_RIGHT_LATITUDE) /\n    4)\n\n\nindex = index.assign(\n    lon_mean=(\n        index.UPPER_LEFT_LONGITUDE\n        + index.UPPER_RIGHT_LONGITUDE\n        + index.LOWER_LEFT_LONGITUDE\n        + index.LOWER_RIGHT_LONGITUDE) /\n    4)\n\n\nindex.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 142368 entries, 0 to 142367\nData columns (total 53 columns):\n #   Column                        Non-Null Count   Dtype         \n---  ------                        --------------   -----         \n 0   VOLUME_ID                     142368 non-null  string        \n 1   FILE_SPECIFICATION_NAME       142368 non-null  string        \n 2   ORIGINAL_PRODUCT_ID           142368 non-null  string        \n 3   PRODUCT_ID                    142368 non-null  string        \n 4   IMAGE_TIME                    142368 non-null  datetime64[ns]\n 5   INSTRUMENT_ID                 142368 non-null  string        \n 6   INSTRUMENT_MODE_ID            142368 non-null  string        \n 7   LINE_SAMPLES                  142368 non-null  Int64         \n 8   LINES                         142368 non-null  Int64         \n 9   SPATIAL_SUMMING               142368 non-null  Int64         \n 10  SCALED_PIXEL_WIDTH            142368 non-null  Float64       \n 11  PIXEL_ASPECT_RATIO            142368 non-null  Float64       \n 12  EMISSION_ANGLE                142368 non-null  Float64       \n 13  INCIDENCE_ANGLE               142368 non-null  Float64       \n 14  PHASE_ANGLE                   142368 non-null  Float64       \n 15  CENTER_LONGITUDE              142368 non-null  Float64       \n 16  CENTER_LATITUDE               142368 non-null  Float64       \n 17  UPPER_LEFT_LONGITUDE          142368 non-null  Float64       \n 18  UPPER_LEFT_LATITUDE           142368 non-null  Float64       \n 19  UPPER_RIGHT_LONGITUDE         142368 non-null  Float64       \n 20  UPPER_RIGHT_LATITUDE          142368 non-null  Float64       \n 21  LOWER_LEFT_LONGITUDE          142368 non-null  Float64       \n 22  LOWER_LEFT_LATITUDE           142368 non-null  Float64       \n 23  LOWER_RIGHT_LONGITUDE         142368 non-null  Float64       \n 24  LOWER_RIGHT_LATITUDE          142368 non-null  Float64       \n 25  MISSION_PHASE_NAME            142368 non-null  string        \n 26  TARGET_NAME                   142368 non-null  string        \n 27  SPACECRAFT_CLOCK_START_COUNT  142368 non-null  string        \n 28  FOCAL_PLANE_TEMPERATURE       142368 non-null  Float64       \n 29  LINE_EXPOSURE_DURATION        142368 non-null  Float64       \n 30  OFFSET_MODE_ID                142368 non-null  string        \n 31  SAMPLE_FIRST_PIXEL            142368 non-null  Int64         \n 32  SCALED_IMAGE_WIDTH            142368 non-null  Float64       \n 33  SCALED_IMAGE_HEIGHT           142368 non-null  Float64       \n 34  SPACECRAFT_ALTITUDE           142368 non-null  Float64       \n 35  TARGET_CENTER_DISTANCE        142368 non-null  Float64       \n 36  SLANT_DISTANCE                142368 non-null  Float64       \n 37  USAGE_NOTE                    142368 non-null  string        \n 38  NORTH_AZIMUTH                 142368 non-null  Float64       \n 39  SUB_SOLAR_AZIMUTH             142368 non-null  Float64       \n 40  SUB_SOLAR_LONGITUDE           142368 non-null  Float64       \n 41  SUB_SOLAR_LATITUDE            142368 non-null  Float64       \n 42  SUB_SPACECRAFT_LONGITUDE      142368 non-null  Float64       \n 43  SUB_SPACECRAFT_LATITUDE       142368 non-null  Float64       \n 44  SOLAR_DISTANCE                142368 non-null  Float64       \n 45  SOLAR_LONGITUDE               142368 non-null  Float64       \n 46  LOCAL_TIME                    142368 non-null  Float64       \n 47  IMAGE_SKEW_ANGLE              142368 non-null  Float64       \n 48  RATIONALE_DESC                142368 non-null  string        \n 49  DATA_QUALITY_DESC             142368 non-null  string        \n 50  ORBIT_NUMBER                  142368 non-null  Int64         \n 51  lat_mean                      142368 non-null  Float64       \n 52  lon_mean                      142368 non-null  Float64       \ndtypes: Float64(34), Int64(5), datetime64[ns](1), string(13)\nmemory usage: 62.9 MB\n\n\n\nlat_filter = index.lat_mean.between(-80,-60)\nlon_filter = index.lon_mean.between(0, 10)\n\n\nindex[angle_filter & lat_filter & lon_filter]\n\n\n\n\n\n\n\n\n\nVOLUME_ID\nFILE_SPECIFICATION_NAME\nORIGINAL_PRODUCT_ID\nPRODUCT_ID\nIMAGE_TIME\nINSTRUMENT_ID\nINSTRUMENT_MODE_ID\nLINE_SAMPLES\nLINES\nSPATIAL_SUMMING\n...\nSUB_SPACECRAFT_LATITUDE\nSOLAR_DISTANCE\nSOLAR_LONGITUDE\nLOCAL_TIME\nIMAGE_SKEW_ANGLE\nRATIONALE_DESC\nDATA_QUALITY_DESC\nORBIT_NUMBER\nlat_mean\nlon_mean\n\n\n\n\n1267\nMROX_0035\nDATA/P03_002074_1155_XN_64S004W.IMG\n4A_04_1008005C00\nP03_002074_1155_XN_64S004W\n2007-01-05 01:02:50.418\nCTX\nNIFL\n5056\n12288\n1\n...\n-64.59\n225779573.9\n161.53\n16.02\n90.1\nDunes in Wegener Crater in MOC R15-01815\nOK\n2074\n-64.59\n4.61\n\n\n4551\nMROX_0165\nDATA/P09_004738_1020_XN_78S008W.IMG\n4A_04_1014016300\nP09_004738_1020_XN_78S008W\n2007-07-31 14:55:12.379\nCTX\nNIFL\n5056\n52224\n1\n...\n-77.97\n210058626.6\n286.93\n15.36\n90.4\nSouth polar landforms\nOK\n4738\n-77.965\n5.9325\n\n\n4677\nMROX_0173\nDATA/P10_004883_1020_XN_78S005W.IMG\n4A_04_1016007800\nP10_004883_1020_XN_78S005W\n2007-08-11 22:05:40.494\nCTX\nNIFL\n5056\n52224\n1\n...\n-78.09\n211455781.6\n293.82\n15.27\n90.4\nSouth polar seasonal cap edge\nOK\n4883\n-78.08\n4.57\n\n\n5184\nMROX_0197\nDATA/P11_005252_1199_XI_60S008W.IMG\n4A_04_101900A800\nP11_005252_1199_XI_60S008W\n2007-09-09 16:17:03.275\nCTX\nITL\n5056\n14336\n1\n...\n-60.18\n215826377.3\n310.92\n14.58\n90.1\nSouth mid- to high-latitude crater\nOK\n5252\n-60.1875\n8.6425\n\n\n5395\nMROX_0209\nDATA/P11_005384_1066_XN_73S007W.IMG\n4A_04_1018017C00\nP11_005384_1066_XN_73S007W\n2007-09-19 23:03:52.412\nCTX\nNIFL\n5056\n35840\n1\n...\n-73.48\n217613174.8\n316.85\n14.82\n90.3\nSisyphi Cavi\nOK\n5384\n-73.48\n7.05\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n133106\nMROX_4264\nDATA/U09_074575_1037_XN_76S005W.IMG\n4A_04_117A02AC00\nU09_074575_1037_XN_76S005W\n2022-06-24 05:06:01.401\nCTX\nNIFL\n5056\n52224\n1\n...\n-76.26\n206646214.2\n252.89\n15.96\n90.4\nSisyphi Cavi region\nOK\n74575\n-76.2575\n4.98\n\n\n133926\nMROX_4298\nDATA/U10_074878_1161_XN_63S005W.IMG\n4A_04_117C022300\nU10_074878_1161_XN_63S005W\n2022-07-17 19:55:57.184\nCTX\nNIFL\n2528\n24576\n1\n...\n-63.93\n207381603.7\n267.84\n15.35\n90.2\nSouthern highlands\nOK\n74878\n-63.94\n5.53\n\n\n134438\nMROX_4315\nDATA/U10_075023_1075_XN_72S001W.IMG\n4A_04_117C042B00\nU10_075023_1075_XN_72S001W\n2022-07-29 03:04:41.315\nCTX\nNIFL\n5056\n7168\n1\n...\n-72.61\n208145471.6\n274.94\n15.41\n90.1\nRide-along with HiRISE\nOK\n75023\n-72.6275\n1.005\n\n\n135612\nMROX_4352\nDATA/U12_075498_1055_XN_74S006W.IMG\n4A_04_1180007200\nU12_075498_1055_XN_74S006W\n2022-09-04 03:17:19.126\nCTX\nNIFL\n5056\n7168\n1\n...\n-74.52\n212296356.7\n297.69\n15.13\n90.1\nRide-along with HiRISE\nOK\n75498\n-74.535\n6.62\n\n\n136976\nMROX_4402\nDATA/U13_076012_1155_XN_64S004W.IMG\n4A_04_118201BB00\nU13_076012_1155_XN_64S004W\n2022-10-14 04:35:24.111\nCTX\nNIFL\n5056\n7168\n1\n...\n-64.62\n218924928.8\n321.08\n14.71\n90.1\nRide-along with HiRISE\nOK\n76012\n-64.6275\n3.995\n\n\n\n\n119 rows × 53 columns\n\n\n\n\nCopying a PRODUCT_ID, we can now automatically download it via the CTX utilities:\n\npid = \"P03_002074_1155_XN_64S004W\"\n\n\nfrom planetarypy import ctx\n\nAbove could issue a warning that is about not finding an ISIS installation, which is required for SOME of this library’s features. Make sure your current environment has the environment variable ISISROOT and ISISDATA defined, so that planetarypy can find the ISIS tools, in case you want to use functions related to them.\nNow let’s use the CTX class to access data:\n\ndata = ctx.CTX(pid)\n\n\ndata.download()\n\nFile exists. Use `overwrite=True` to download fresh.\n\n\nThe data was downloaded to a mission- and instrument-based storage folder that was defined the first time you imported planetarypy. You can verify it’s location by looking at the config object:\n\nfrom planetarypy.config import config\n\n\nconfig.storage_root\n\nPath('/home/ayek72/mnt/slowdata/planetarypy')\n\n\nWe can now read the data into a multi-dimensional xarray, which supports elaborate indexing via its coordinates.\n\ndata.edr_da\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n&lt;xarray.DataArray 'P03_002074_1155 EDR' (y: 12288, x: 5056)&gt;\n[62128128 values with dtype=uint8]\nCoordinates:\n  * x        (x) float64 0.5 1.5 2.5 3.5 ... 5.054e+03 5.054e+03 5.056e+03\n  * y        (y) float64 0.5 1.5 2.5 3.5 ... 1.229e+04 1.229e+04 1.229e+04\nAttributes: (12/19)\n    BANDWIDTH:                  \n    CENTER_FILTER_WAVELENGTH:   \n    DATA_SET_ID:                \"MRO-M-CTX-2-EDR-L0-V1.0\"\n    FILTER_NAME:                \n    INSTRUMENT_ID:              CTX\n    INSTRUMENT_NAME:            \"CONTEXT CAMERA\"\n    ...                         ...\n    START_TIME:                 2007-01-05T01:02:50.418\n    STOP_TIME:                  2007-01-05T01:03:13.479\n    TARGET_NAME:                MARS\n    _FillValue:                 0\n    scale_factor:               1.0\n    add_offset:                 0.0xarray.DataArray'P03_002074_1155 EDR'y: 12288x: 5056...[62128128 values with dtype=uint8]Coordinates: (2)x(x)float640.5 1.5 2.5 ... 5.054e+03 5.056e+03array([5.0000e-01, 1.5000e+00, 2.5000e+00, ..., 5.0535e+03, 5.0545e+03,\n       5.0555e+03])y(y)float640.5 1.5 2.5 ... 1.229e+04 1.229e+04array([5.00000e-01, 1.50000e+00, 2.50000e+00, ..., 1.22855e+04, 1.22865e+04,\n       1.22875e+04])Indexes: (2)xPandasIndexPandasIndex(Float64Index([   0.5,    1.5,    2.5,    3.5,    4.5,    5.5,    6.5,    7.5,\n                 8.5,    9.5,\n              ...\n              5046.5, 5047.5, 5048.5, 5049.5, 5050.5, 5051.5, 5052.5, 5053.5,\n              5054.5, 5055.5],\n             dtype='float64', name='x', length=5056))yPandasIndexPandasIndex(Float64Index([    0.5,     1.5,     2.5,     3.5,     4.5,     5.5,     6.5,\n                  7.5,     8.5,     9.5,\n              ...\n              12278.5, 12279.5, 12280.5, 12281.5, 12282.5, 12283.5, 12284.5,\n              12285.5, 12286.5, 12287.5],\n             dtype='float64', name='y', length=12288))Attributes: (19)BANDWIDTH :CENTER_FILTER_WAVELENGTH :DATA_SET_ID :\"MRO-M-CTX-2-EDR-L0-V1.0\"FILTER_NAME :INSTRUMENT_ID :CTXINSTRUMENT_NAME :\"CONTEXT CAMERA\"MISSION_NAME :NOTE :PRODUCER_INSTITUTION_NAME :PRODUCT_CREATION_TIME :2007-08-08T23:29:12PRODUCT_ID :\"P03_002074_1155_XN_64S004W\"PRODUCT_TYPE :SPACECRAFT_NAME :MARS_RECONNAISSANCE_ORBITERSTART_TIME :2007-01-05T01:02:50.418STOP_TIME :2007-01-05T01:03:13.479TARGET_NAME :MARS_FillValue :0scale_factor :1.0add_offset :0.0\n\n\nBut one also get the image data simply as a numpy array:\n\ndata.edr_da.values\n\narray([[ 9,  9, 10, ...,  8, 10,  8],\n       [ 9,  8, 10, ...,  9, 10,  9],\n       [ 9,  8, 10, ...,  8, 11, 10],\n       ...,\n       [11, 10, 11, ..., 10, 10, 10],\n       [10,  9, 10, ...,  9, 10, 10],\n       [11, 10, 10, ..., 11, 11, 10]], dtype=uint8)\n\n\nOr plot the image using holoviews and datashader, so that even large images won’t bog down your browser:\n\ndata.plot_edr()\n\n\n\n\n\n  \n\n\n\n\nNote, that the above data is the uncalibrated EDR, so the dynamics of the image seem a little rough. If you have configured the ISIS properly, so that the current Python environment is aware of it (using ISISROOT and ISISDATA env variables), you can calibrate this data yourself now:",
    "crumbs": [
      "tutorials",
      "Tutorial"
    ]
  }
]