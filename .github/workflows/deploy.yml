name: Deploy to GitHub Pages
on:
  push:
    branches: ["main", "master"]
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Conda
        # You may pin to the exact commit or the version.
        # uses: s-weigand/setup-conda@12b718b536e4be4da931f6d0fcfcc40a646ffed9
        uses: s-weigand/setup-conda@v1.1.1
        with:
          # Whether to activate the conda base env (Default: 'true')
          activate-conda: # optional, default is true
          # If conda should be updated before running other commands (Default: 'false')
          update-conda: # optional, default is false
          # Python version which should be installed with conda (default: 'Default')
          python-version: "3.10" # optional, default is default
          # Additional channels like 'conda-forge' which can be used to install packages
          conda-channels: "conda-forge" # optional, default is

      - name: Install mamba
        shell: bash
        run: conda install -c conda-forge mamba -y

      - name: Chech paths
        shell: bash
        run: |
          p1 = `which conda`
          p2 = `which mamba`
          p3 = `which pip`
          echo "Paths:\nConda: $p1\Mamba: $p2\npip: $p3\n"
      # - name: Install dependencies
      #   uses: jannekem/run-python-script-action@v1
      #   with:
      #     script: |
      #       from configparser import ConfigParser
      #       import subprocess
      #       config = ConfigParser(delimiters=['='])
      #       config.read('settings.ini')
      #       cfg = config['DEFAULT']
      #       requirements = cfg.get('requirements', '')
      #       cmd = "mamba install " + requirements + " -y"
      #       print("Command to run:", cmd)
      #       ret = subprocess.call(cmd, shell=True)
      #       print("returned_value:", ret)

      # - name: Install package
      #   shell: bash
      #   run: pip install -e ".[dev]"

      # # - name: Setup Python
      # #   uses: actions/setup-python@v4
      # #   with:
      # #     python-version: "3.10"
      # #     # cache: "pip"

      # - name: Install nbdev tools
      #   shell: bash
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -Uq git+https://github.com/fastai/ghapi.git # you need this for enabling pages
      #     pip install -Uq git+https://github.com/fastai/fastcore.git
      #     pip install -Uq git+https://github.com/fastai/execnb.git
      #     pip install -Uq git+https://github.com/fastai/nbdev.git

      # - name: Install quarto
      #   shell: bash
      #   run: |
      #     wget -nv https://www.quarto.org/download/latest/quarto-linux-amd64.deb
      #     sudo dpkg -i quarto*.deb
      #     echo "installed quarto"

      # - name: Create docs
      #   shell: bash
      #   run: nbdev_docs
